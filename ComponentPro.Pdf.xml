<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ComponentPro.Pdf</name>
    </assembly>
    <members>
        <member name="T:ComponentPro.Licensing.Pdf.UltimateLicenseExceptionStatus">
            <summary>
            License check status.
            </summary>
            <exclude/>
            <excludetoc/>
        </member>
        <member name="F:ComponentPro.Licensing.Pdf.UltimateLicenseExceptionStatus.InvalidKey">
            <summary>
            Invalid license key.
            </summary>
        </member>
        <member name="F:ComponentPro.Licensing.Pdf.UltimateLicenseExceptionStatus.InvalidDate">
            <summary>
            Expiry date is invalid.
            </summary>
        </member>
        <member name="F:ComponentPro.Licensing.Pdf.UltimateLicenseExceptionStatus.LicenseExpired">
            <summary>
            License is expired.
            </summary>
        </member>
        <member name="T:ComponentPro.Licensing.Pdf.UltimateLicenseException">
            <summary>Represents the License Exception.</summary>
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:ComponentPro.Licensing.Pdf.UltimateLicenseException.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:ComponentPro.Licensing.Pdf.UltimateLicenseException"></see> class with the specified error message.</summary>
            <param name="message">A <see cref="T:System.String"></see> that describes the error that occurred.</param>
        </member>
        <member name="M:ComponentPro.Licensing.Pdf.UltimateLicenseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the <see cref="T:ComponentPro.Licensing.Pdf.UltimateLicenseException"></see> class from the specified instances of the <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> and <see cref="T:System.Runtime.Serialization.StreamingContext"></see> classes. </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> that contains the information required to serialize the new <see cref="T:ComponentPro.Licensing.Pdf.UltimateLicenseException"></see>. </param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"></see> that contains the source and destination of the serialized stream associated with the new instance. </param>
        </member>
        <member name="M:ComponentPro.Licensing.Pdf.UltimateLicenseException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance of the <see cref="T:ComponentPro.Licensing.Pdf.UltimateLicenseException"></see> class with the specified error message and inner exception.</summary>
            <param name="message">A <see cref="T:System.String"></see> that describes the error that occurred.</param>
            <param name="innerException">The exception that is the cause of the current exception. </param>
        </member>
        <member name="M:ComponentPro.Licensing.Pdf.UltimateLicenseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> instance with the data needed to serialize the <see cref="T:ComponentPro.Licensing.Pdf.UltimateLicenseException"></see>.</summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> to populate with data. </param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"></see> that specifies the destination for this serialization.</param>
        </member>
        <member name="P:ComponentPro.Licensing.Pdf.UltimateLicenseException.Status">
            <summary>Gets the error code.</summary>
            <returns>An <see cref="T:ComponentPro.Licensing.Pdf.UltimateLicenseExceptionStatus"></see> value that indicates the error that occurred.</returns>
        </member>
        <member name="T:ComponentPro.Licensing.Pdf.LicenseManager">
            <summary>
            ComponentPro License Manager.
            </summary>
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:ComponentPro.Licensing.Pdf.LicenseManager.SetLicenseKey(System.String)">
            <summary>
            Sets the trial license key.
            </summary>
            <param name="licenseKey">The trial license key string.</param>
        </member>
        <member name="P:ComponentPro.Licensing.Pdf.LicenseManager.RemainingDays">
            <summary>
            Gets remaining trial days.
            </summary>
        </member>
        <member name="T:ComponentPro.PdfBaseAssembly">
            <exclude />
            <summary>
            This class holds the name of the ComponentPro.Pdf.Base assembly and provides a helper
            routine that helps with resolving types when loading a serialization stream and when
            the framework probes for assemblies by reflection.
            </summary>
        </member>
        <member name="F:ComponentPro.PdfBaseAssembly.RootNamespace">
             <property name="flag" value="Finished" />
            
             <summary>
             The root namespace of this assembly. Used internally for
             locating resources within the assembly.
             </summary>
        </member>
        <member name="M:ComponentPro.PdfBaseAssembly.AssemblyResolver(System.Object,System.ResolveEventArgs)">
             <property name="flag" value="Finished" />
            
             <summary>
             This delegate helps with resolving types and can be used as
             an event handler for a <see cref="E:System.AppDomain.AssemblyResolve" />
             event.
             </summary>
             <param name="sender">The source of the event.</param>
             <param name="e">The event data with information about
             the type.</param>
             <returns>
             A reference to the assembly where the type is located.
             </returns>
             <remarks>
             Use this handler when reading back types from a serialization
             stream saved with an earlier version of this assembly.
             </remarks>
        </member>
        <member name="F:ComponentPro.PdfBaseAssembly.Assembly">
             <property name="flag" value="Finished" />
            
             <summary>
             A reference to the <see cref="T:System.Reflection.Assembly" />
             for the grid assembly.
             </summary>
        </member>
        <member name="F:ComponentPro.PdfBaseAssembly.Name">
             <property name="flag" value="Finished" />
            
             <summary>
             The full name of this assembly without version information: "ComponentPro.Pdf.Base".
             </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.Barcodes.InputMode">
            <summary>
            Specifies the Barcode Input Mode.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.Barcodes.InputMode.NumericMode">
            <summary>
            The Input only contains the Numeric Values(0,1,2,3,4,5,6,7,8,9). 
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.Barcodes.InputMode.AlphaNumericMode">
            <summary>
            The Input may contain Numeric Values, Alphabets(Upper case only), SPACE, $, %, *, +, -, ., /, :
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.Barcodes.InputMode.BinaryMode">
            <summary>
            The Input may contain all the ASCII values
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.Barcodes.PdfBarcode">
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfBarcode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfBarcode"/> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfBarcode.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfBarcode"/> class.
            </summary>
            <param name="text">Set the barcode text.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfBarcode.GetSizeValue">
            <summary>
            Internal method which calculates the size of the barcode which is going to rendered.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfBarcode.Validate(System.String)">
            <summary>
            Internal method which validates whether the given text is acceptable by the current barcode
            specification or not.
            </summary>
            <param name="data">The Text.</param>
            <returns>True if Valid, Otherwise False</returns>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.Barcodes.PdfBarcode.m_barHeight">
            <summary>
            Indicates the bar height of the barcode.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.Barcodes.PdfBarcode.BackColor"> 
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.Barcodes.PdfBarcode.BarColor"> 
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.Barcodes.PdfBarcode.BarHeight"> 
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.Barcodes.PdfBarcode.Bounds"> 
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.Barcodes.PdfBarcode.Location">
            <summary>
            Gets or sets the location to render barcode in the PDF Document.
            </summary> 
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.Barcodes.PdfBarcode.NarrowBarWidth"> 
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.Barcodes.PdfBarcode.QuietZone"> 
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.Barcodes.PdfBarcode.Size"> 
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.Barcodes.PdfBarcode.Text"> 
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.Barcodes.PdfBarcode.TextColor"> 
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.Barcodes.PdfBarcodeException">
            <summary>
            Represents the general barcode exception class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfBarcodeException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfBarcodeException"/> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfBarcodeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfBarcodeException"/> class.
            </summary>
            <param name="message">User defined error message.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfBarcodeException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfBarcodeException"/> class.
            </summary>
            <param name="message">User defined error message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfBarcodeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfBarcodeException"/> class.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.Barcodes.PdfBarcodeQuietZones"> 
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.Barcodes.PdfBarcodeQuietZones.All"> 
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.Barcodes.PdfBarcodeQuietZones.Bottom"> 
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.Barcodes.PdfBarcodeQuietZones.IsAll"> 
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.Barcodes.PdfBarcodeQuietZones.Left"> 
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.Barcodes.PdfBarcodeQuietZones.Right"> 
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.Barcodes.PdfBarcodeQuietZones.Top"> 
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.Barcodes.PdfBarcodeTextAlignment"> 
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.Barcodes.PdfBarcodeTextAlignment.Left">
            <summary>
            Displays the readable text on the left side of the barcode. 
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.Barcodes.PdfBarcodeTextAlignment.Center">
            <summary>
            Displays the readable text at the center of the barcode. 
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.Barcodes.PdfBarcodeTextAlignment.Right">
            <summary>
             Displays the readable text on the right side of the barcode. 
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.Barcodes.PdfBidimensionalBarcode">
            <summary>
            Base class for all two dimensional barcodes.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfBidimensionalBarcode.#ctor">
            <summary>
            Initializes two dimensional barcode.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.Barcodes.PdfBidimensionalBarcode.BackColor">
            <summary>
            Gets or sets BackColor for the barcode.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.Barcodes.PdfBidimensionalBarcode.Text">
            <summary>
            Gets or sets the data.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.Barcodes.PdfBidimensionalBarcode.XDimension">
            <summary>
            Gets or sets the dimension for the barcode.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCodabarBarcode">
                        <remarks> This symbology allows the encoding of strings of up to 16 digits, 10 numeric digits (0 through 9) and 
            6 special non alpha characters ("+", "-", "$", "/", ":", "."). 
            </remarks>
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode11Barcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode32Barcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode128ABarcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode128BBarcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode128CBarcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode39Barcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode39ExtendedBarcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode93Barcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode93ExtendedBarcode"/> Class
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.Barcodes.PdfUnidimensionalBarcode">
            <summary>
            Represents the Base class for all the Single dimensional barcodes
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfUnidimensionalBarcode.#ctor">
            <summary>
            Initializes the new instance of <see cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfUnidimensionalBarcode"/>
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfUnidimensionalBarcode.CalculateCheckDigit">
            <summary>
            Calculates the check digit based on the barcode specification.
            </summary>
            <returns>Char array containing Check digits</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfUnidimensionalBarcode.Draw(ComponentPro.Pdf.PdfPageBase)">
            <summary>
            Draws the barcode on the <see cref="T:ComponentPro.Pdf.PdfPage" /> at the specified location.
            </summary>
            <param name="page">The pdf page.</param>        
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfUnidimensionalBarcode.Draw(ComponentPro.Pdf.PdfPageBase,System.Drawing.PointF)">
            <summary>
            Draws the barcode on the <see cref="T:ComponentPro.Pdf.PdfPage" /> at the specified location.
            </summary>
            <param name="page">The pdf page.</param>
            <param name="location">The barcode location.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfUnidimensionalBarcode.Draw(ComponentPro.Pdf.PdfPageBase,System.Drawing.RectangleF)">
            <summary>
            Draw one dimensional barcode based on rectangle input values.
            </summary>
            <param name="page"></param>
            <param name="rectangle"></param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfUnidimensionalBarcode.Draw(ComponentPro.Pdf.PdfPageBase,System.Drawing.PointF,System.Drawing.SizeF)">
            <summary>
            Draw one dimensional barcode based on location and size value.
            </summary>
            <param name="page"></param>
            <param name="location"></param>
            <param name="size"></param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfUnidimensionalBarcode.Draw(ComponentPro.Pdf.PdfPageBase,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draw one dimensional barcode based on float input values.
            </summary>
            <param name="page"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfUnidimensionalBarcode.GetCharWidth(System.Char)">
            <summary>
            Returns the Character width.
            </summary>
            <param name="c"></param>
            <returns>The width.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfUnidimensionalBarcode.GetExtendedTextValue">
            <summary>
            To get the Extended Text
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfUnidimensionalBarcode.GetSizeValue">
            <summary>
            Returns the size of the barcode.
            </summary>
            <returns>The Size.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfUnidimensionalBarcode.GetTextToEncode">
            <summary>
            Returns the Actual text to encode.
            </summary>
            <returns>The Actual Text.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfUnidimensionalBarcode.PaintRectangle(ComponentPro.Pdf.PdfPageBase,System.Drawing.RectangleF)">
            <summary>
            Internal method used to paint bars on the page.
            </summary>
            <param name="page">The Page.</param>
            <param name="barRect">The Rectangle.</param>
            <returns>Returns the right margin.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfUnidimensionalBarcode.ToImage">
            <summary>
            Exports the barcode as image.
            <returns>The barcode image.</returns>
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfUnidimensionalBarcode.Validate(System.String)">
            <summary>
            Internal method used to validate the given barcode text.
            </summary>
            <param name="data">The Text.</param>
            <returns>True if valid, Otherwise False.</returns>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.Barcodes.PdfUnidimensionalBarcode.check">
            <summary>
            Automatically adds the check digit to the barcode when true. 
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.Barcodes.PdfUnidimensionalBarcode.continuous">
            <summary>
            To check whether Barcode is Continuous  Barcode or discrete 
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.Barcodes.PdfUnidimensionalBarcode.isCheckDigitAdded">
            <summary>
            Indicates whether the Checkdigit is already added to the barcode text or not.
            Used with the barcodes which involves multiple checksum calculations.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.Barcodes.PdfUnidimensionalBarcode.BarcodeToTextGapHeight">
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.TextLocation"/>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.Barcodes.PdfUnidimensionalBarcode.EnableCheckDigit">
            <remarks>The Default value is True.</remarks>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.Barcodes.PdfUnidimensionalBarcode.EncodeStartStopSymbols">
            <value>
            <c>true</c> if [encode start stop symbols]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.Barcodes.PdfUnidimensionalBarcode.Font"> 
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.Barcodes.PdfUnidimensionalBarcode.ShowCheckDigit">
            <remarks>The Default value is false.</remarks>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.Barcodes.PdfUnidimensionalBarcode.TextAlignment">
            <remarks>Default value is Center.</remarks>
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.TextLocation"/>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.Barcodes.PdfUnidimensionalBarcode.TextDisplayLocation"> 
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfCodabarBarcode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCodabarBarcode"/> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfCodabarBarcode.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCodabarBarcode"/> class.
            </summary>
            <param name="text">The Barcode Text.</param>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode11Barcode">
            <remarks> Only the following symbols are allowed in a Code 11 barcode: 0 1 2 3 4 5 6 7 8 9 -</remarks>
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCodabarBarcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode32Barcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode128ABarcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode128BBarcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode128CBarcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode39Barcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode39ExtendedBarcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode93Barcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode93ExtendedBarcode"/> Class
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfCode11Barcode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode11Barcode"/> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfCode11Barcode.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode11Barcode"/> class.
            </summary>
            <param name="text">The Barcode Text.</param>
            <param name="text">The Barcode Text.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfCode11Barcode.CalculateCheckDigit">
            <summary>
            Calculates the check digit for this barcode specification.
            </summary>
            <returns>The Check digits.</returns>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode128ABarcode">
            <remarks> Only the following symbols are allowed in a Code 128 A barcode: NUL (\x00) SOH (\x01) STX (\x02) ETX (\x03) EOT (\x04) ENQ (\x05) ACK (\x06) BEL (\x07) BS (\x08) HT (\x09) LF (\x0A) VT (\x0B) FF (\x0C) CR (\x0D) SO (\x0E) SI (\x0F) DLE (\x10) DC1 (\x11) DC2 (\x12) DC3 (\x13) DC4 (\x14) NAK (\x15) SYN (\x16) ETB (\x17) CAN (\x18) EM (\x19) SUB (\x1A) ESC (\x1B) FS (\x1C) GS (\x1D) RS (\x1E) US (\x1F) SPACE !  # $ % ' * + , - . 0 1 2 3 4 5 6 7 8 9 : ; ? @ A B C D E F G H I J K L M N O P Q R S T U V W X Y Z [ \ ]^ _ FNC1 (\xF0) FNC2 (\xF1) FNC3 (\xF2) FNC4  </remarks>
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCodabarBarcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode32Barcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode11Barcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode128BBarcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode128CBarcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode39Barcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode39ExtendedBarcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode93Barcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode93ExtendedBarcode"/> Class
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfCode128ABarcode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode128ABarcode"/> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfCode128ABarcode.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode128ABarcode"/> class.
            </summary>
            <param name="text">The Barcode Text.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfCode128ABarcode.CalculateCheckDigit">
            <summary>
            Calculates the check digit for this barcode specification.
            </summary>
            <returns>The Check digits.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfCode128ABarcode.Initialize">
            <summary>
            Initializes the internal barcode symbol table
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfCode128ABarcode.Validate(System.String)">
            <summary>
            Internal method used to validate the given barcode text.
            </summary>
            <param name="data">The Text.</param>
            <returns>True if valid, Otherwise False.</returns>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode128Barcode">
            <remarks>Only the following symbols are allowed in a Code 128C barcode: 0 1 2 3 4 5 6 7 8 9 FNC1 (\xF0). Code 128 C encodes only numeric symbols at double density, each pair of digits is encoded using a single symbol.</remarks>
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCodabarBarcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode32Barcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode11Barcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode128ABarcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode128BBarcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode39Barcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode39ExtendedBarcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode93Barcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode93ExtendedBarcode"/> Class
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfCode128Barcode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode128Barcode"/> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfCode128Barcode.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode128Barcode"/> class.
            </summary>
            <param name="text">The Barcode text.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfCode128Barcode.CalculateCheckDigit">
            <summary>
            Calculates the check digit for this barcode specification.
            </summary>
            <returns>The Check digits.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfCode128Barcode.GetDataToEncode(System.String)">
            <summary>
            Gets the data to encode.
            </summary>
            <param name="originalData">The original data.</param>
            <returns>Encoded string.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfCode128Barcode.GetTextToEncode">
            <summary>
            Returns the Actual text to encode.
            </summary>
            <returns>The Actual Text.</returns>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode128BBarcode">
            <remarks> Only the following symbols are allowed in a Code 128 B barcode:SPACE ! " # $ % ' ( ) * + , - . / 0 12 3 4 5 6 7 8 9 : ; ? @ A B C D E F G H I J K L M N O P Q R S T U V W X Y Z [ \ ]^ _ ` a b c d e f g h i j k l m n o p q r s t u v w x y z { | } ~ DEL (\x7F) FNC1 (\xF0) FNC2 (\xF1) FNC3 (\xF2) FNC4 (\xF3) SHIFT (\xF4). </remarks>
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCodabarBarcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode32Barcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode11Barcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode128ABarcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode128CBarcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode39Barcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode39ExtendedBarcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode93Barcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode93ExtendedBarcode"/> Class
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfCode128BBarcode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode128BBarcode"/> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfCode128BBarcode.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode128BBarcode"/> class.
            </summary>
            <param name="text">The Barcode text.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfCode128BBarcode.CalculateCheckDigit">
            <summary>
            Calculates the check digit for this barcode specification.
            </summary>
            <returns>The Check digits.</returns>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode128CBarcode">
            <remarks>Only the following symbols are allowed in a Code 128C barcode: 0 1 2 3 4 5 6 7 8 9 FNC1 (\xF0). Code 128 C encodes only numeric symbols at double density, each pair of digits is encoded using a single symbol.</remarks>
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCodabarBarcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode32Barcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode11Barcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode128ABarcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode128BBarcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode39Barcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode39ExtendedBarcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode93Barcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode93ExtendedBarcode"/> Class
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfCode128CBarcode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode128CBarcode"/> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfCode128CBarcode.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode128CBarcode"/> class.
            </summary>
            <param name="text">The Barcode text.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfCode128CBarcode.CalculateCheckDigit">
            <summary>
            Calculates the check digit for this barcode specification.
            </summary>
            <returns>The Check digits.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfCode128CBarcode.GetDataToEncode(System.String)">
            <summary>
            Gets the data to encode.
            </summary>
            <param name="originalData">The original data.</param>
            <returns>Encoded string.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfCode128CBarcode.GetTextToEncode">
            <summary>
            Returns the Actual text to encode.
            </summary>
            <returns>The Actual Text.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfCode128CBarcode.Validate(System.String)">
            <summary>
            Internal method used to validate the given barcode text.
            </summary>
            <param name="data">The Text.</param>
            <returns>True if valid, Otherwise False.</returns>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode32Barcode">
            <remarks> Only the following symbols are allowed in a Code 32 barcode: 1 2 3 4 5 6 7 8 9 0. The barcode length is 9 digits (8 user defined digits + 1 check digit).
            Code 32 barcodes are also known as Italian Pharmacode barcodes. 
            </remarks>
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCodabarBarcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode11Barcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode128ABarcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode128BBarcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode128CBarcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode39Barcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode39ExtendedBarcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode93Barcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode93ExtendedBarcode"/> Class
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode39Barcode"> 
            <remarks> Only the following symbols are allowed in a Code 39 barcode:Only the following symbols are allowed in a Code 39 barcode: 1 2 3 4 5 6 7 8 9 0 A B C D E F G H I J K L M N O P Q R S T U V W X Y Z - . $ / + % SPACE
            All alphabetic characters are uppercase. If lowercase characters are required, then a Code 39 Extended barcode must be used.
            </remarks>
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCodabarBarcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode11Barcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode128ABarcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode128BBarcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode128CBarcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode32Barcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode39ExtendedBarcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode93Barcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode93ExtendedBarcode"/> Class
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfCode39Barcode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode39Barcode"/> class.
            </summary> 
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfCode39Barcode.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode39Barcode"/> class.
            </summary>
            <param name="text">The Barcode text.</param> 
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfCode39Barcode.CalculateCheckDigit">
            <summary>
            Internal method to calculate the check-digit
            </summary>
            <returns></returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfCode32Barcode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode32Barcode"/> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfCode32Barcode.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode32Barcode"/> class.
            </summary>
            <param name="text">The Barcode Text.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfCode32Barcode.CalculateCheckDigit">
            <summary>
            Calculates the check digit for this barcode specification.
            </summary>
            <returns>The Check digits.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfCode32Barcode.GetDataToEncode(System.String)">
            <summary>
            To get the Actual Encoded Text from from original Text..
            </summary>
            <param name="originalData">The original data.</param>
            <returns>original Data</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfCode32Barcode.GetTextToEncode">
            <summary>
            Returns the Actual text to encode.
            </summary>
            <returns>The Actual Text.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfCode32Barcode.ObtainBarcodeSymbols">
            <summary>
            Gets the barcode symbols.
            </summary>
            <returns>Encoded data</returns>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode39ExtendedBarcode"> 
            <remarks> All 128 ASCII characters can be encoded in an extended Code 39 barcode</remarks>
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCodabarBarcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode11Barcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode128ABarcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode128BBarcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode128CBarcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode32Barcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode39Barcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode93Barcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode93ExtendedBarcode"/> Class
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfCode39ExtendedBarcode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode39ExtendedBarcode"/> class.
            </summary> 
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfCode39ExtendedBarcode.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode39ExtendedBarcode"/> class.
            </summary>
            <param name="text">The Barcode text.</param> 
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfCode39ExtendedBarcode.CalculateCheckDigit">
            <summary>
            Internal method to calculate the check-digit
            </summary>
            <returns>check digit</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfCode39ExtendedBarcode.GetExtendedTextValue">
            <summary>
            Internal method to get the extended text.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode93Barcode"> 
            <remarks> Only the following symbols are allowed in a Code 93 barcode: 1 2 3 4 5 6 7 8 9 0 A B C D E F G H I J K L M N O P Q R S T U V W X Y Z - . $ / + % SPACE
            All alphabetic characters are uppercase. If lowercase characters are required, then a Code 93 Extended barcode must be used.
            </remarks>
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCodabarBarcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode11Barcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode128ABarcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode128BBarcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode128CBarcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode32Barcode"/> Class
            <seealso cref="!:PdfCodPdfCode39Barcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode39ExtendedBarcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode93ExtendedBarcode"/> Class
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfCode93Barcode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode93Barcode"/> class.
            </summary> 
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfCode93Barcode.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode93Barcode"/> class.
            </summary>
            <param name="text">The Barcode text.</param> 
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfCode93Barcode.CalculateCheckDigit">
            <summary>
            Calculates the check digit for this barcode specification.
            </summary>
            <returns>The Check digits.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfCode93Barcode.GetCheckSumSymbols">
            <summary>
            Internal method to calculate the check-digit
            </summary>
            <returns>symbols</returns>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode93ExtendedBarcode"> 
            <remarks> All 128 ASCII characters can be encoded in an extended Code 93 barcode. </remarks>
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCodabarBarcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode11Barcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode128ABarcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode128BBarcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode128CBarcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode32Barcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode39Barcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode39ExtendedBarcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode93Barcode"/> Class
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfCode93ExtendedBarcode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode93ExtendedBarcode"/> class.
            </summary> 
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfCode93ExtendedBarcode.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode93ExtendedBarcode"/> class.
            </summary>
            <param name="text">The Barcode text.</param> 
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfCode93ExtendedBarcode.CalculateCheckDigit">
            <summary>
            Calculates the check digit for this barcode specification.
            </summary>
            <returns>The Check digits.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfCode93ExtendedBarcode.GetCheckSumSymbols">
            <summary>
            To get the Checksum value
            </summary>
            <returns>checksum symbols</returns>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCodeUpcBarcode">
            <remarks> Only the following symbols are allowed in a UPC-A barcode: 0 1 2 3 4 5 6 7 8 9 B. </remarks>
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCodabarBarcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode32Barcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode11Barcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode128ABarcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode128CBarcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode39Barcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode39ExtendedBarcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode93Barcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode93ExtendedBarcode"/> Class
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfCodeUpcBarcode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCodeUpcBarcode"/> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfCodeUpcBarcode.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCodeUpcBarcode"/> class.
            </summary>
            <param name="text">The Barcode text.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfCodeUpcBarcode.CalculateCheckDigit">
            <summary>
            Calculates the check digit for this barcode specification.
            </summary>
            <returns>The Check digits.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfDataMatrixBarcode.#ctor">
            <summary>
            Initializes PdfDataMatrixBarcode class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfDataMatrixBarcode.#ctor(System.String)">
            <summary>
            Initializes PdfDataMatrixBarcode class.
            </summary>
            <param name="text">Data to be converted as barcode.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfDataMatrixBarcode.Draw(ComponentPro.Pdf.PdfPageBase)">
            <summary>
            Draws datamatrix in the PdfPage.
            </summary>
            <param name="page">PdfPage.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfDataMatrixBarcode.Draw(ComponentPro.Pdf.PdfPageBase,System.Drawing.RectangleF)">
            <summary>
            Draw DataMatrix Barcode in pdf document.
            </summary>
            <param name="page"></param>
            <param name="Rectangle"></param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfDataMatrixBarcode.Draw(ComponentPro.Pdf.PdfPageBase,System.Drawing.PointF,System.Drawing.SizeF)">
            <summary>
            Draw DataMatrix barcode on Pdf Document.
            </summary>
            <param name="page"></param>
            <param name="location"></param>
            <param name="Size"></param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfDataMatrixBarcode.Draw(ComponentPro.Pdf.PdfPageBase,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draw DataMatrix barcode in pdf document.
            </summary>
            <param name="page"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="Width"></param>
            <param name="Height"></param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfDataMatrixBarcode.ToImage(System.Drawing.SizeF)">
            <summary>
            Convert the data matrix barcode to image
            </summary>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.Barcodes.PdfDataMatrixBarcode.Encoding">
            <summary>
            Gets or sets the encoding.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.Barcodes.PdfDataMatrixBarcode.Size">
            <summary>
            Gets or sets the size.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.Barcodes.PdfDataMatrixEncoding.Auto">
            <summary>
            Encoding is choosen based on the data.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.Barcodes.PdfDataMatrixEncoding.ASCII">
            <summary>
            Encoding is done by ASCII encoder.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.Barcodes.PdfDataMatrixEncoding.ASCIINumeric">
            <summary>
            Encoding is done by Numeric encoder.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.Barcodes.PdfDataMatrixEncoding.Base256">
            <summary>
            Encoding is done by Base256 encode.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.Barcodes.PdfDataMatrixSize.Auto">
            <summary>
            Size is choosen based on the data.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.Barcodes.PdfDataMatrixSize.Size10x10">
            <summary>
            Square matrix with 10 rows and 10 columns.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.Barcodes.PdfDataMatrixSize.Size12x12">
            <summary>
            Square matrix with 12 rows and 12 columns.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.Barcodes.PdfDataMatrixSize.Size14x14">
            <summary>
            Square matrix with 14 rows and 14 columns.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.Barcodes.PdfDataMatrixSize.Size16x16">
            <summary>
            Square matrix with 16 rows and 16 columns.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.Barcodes.PdfDataMatrixSize.Size18x18">
            <summary>
            Square matrix with 18 rows and 18 columns.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.Barcodes.PdfDataMatrixSize.Size20x20">
            <summary>
            Square matrix with 20 rows and 20 columns.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.Barcodes.PdfDataMatrixSize.Size22x22">
            <summary>
            Square matrix with 22 rows and 22 columns.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.Barcodes.PdfDataMatrixSize.Size24x24">
            <summary>
            Square matrix with 24 rows and 24 columns.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.Barcodes.PdfDataMatrixSize.Size26x26">
            <summary>
            Square matrix with 26 rows and 26 columns.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.Barcodes.PdfDataMatrixSize.Size32x32">
            <summary>
            Square matrix with 32 rows and 32 columns.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.Barcodes.PdfDataMatrixSize.Size36x36">
            <summary>
            Square matrix with 36 rows and 36 columns.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.Barcodes.PdfDataMatrixSize.Size40x40">
            <summary>
            Square matrix with 40 rows and 40 columns.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.Barcodes.PdfDataMatrixSize.Size44x44">
            <summary>
            Square matrix with 44 rows and 44 columns.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.Barcodes.PdfDataMatrixSize.Size48x48">
            <summary>
            Square matrix with 48 rows and 48 columns.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.Barcodes.PdfDataMatrixSize.Size52x52">
            <summary>
            Square matrix with 52 rows and 52 columns.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.Barcodes.PdfDataMatrixSize.Size64x64">
            <summary>
            Square matrix with 64 rows and 64 columns.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.Barcodes.PdfDataMatrixSize.Size72x72">
            <summary>
            Square matrix with 72 rows and 72 columns.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.Barcodes.PdfDataMatrixSize.Size80x80">
            <summary>
            Square matrix with 80 rows and 80 columns.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.Barcodes.PdfDataMatrixSize.Size88x88">
            <summary>
            Square matrix with 88 rows and 88 columns.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.Barcodes.PdfDataMatrixSize.Size96x96">
            <summary>
            Square matrix with 96 rows and 96 columns.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.Barcodes.PdfDataMatrixSize.Size104x104">
            <summary>
            Square matrix with 104 rows and 104 columns.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.Barcodes.PdfDataMatrixSize.Size120x120">
            <summary>
            Square matrix with 120 rows and 120 columns.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.Barcodes.PdfDataMatrixSize.Size132x132">
            <summary>
            Square matrix with 132 rows and 132 columns.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.Barcodes.PdfDataMatrixSize.Size144x144">
            <summary>
            Square matrix with 144 rows and 144 columns.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.Barcodes.PdfDataMatrixSize.Size8x18">
            <summary>
            Rectangular matrix with 8 rows and 18 columns.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.Barcodes.PdfDataMatrixSize.Size8x32">
            <summary>
            Rectangular matrix with 8 rows and 32 columns.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.Barcodes.PdfDataMatrixSize.Size12x26">
            <summary>
            Rectangular matrix with 12 rows and 26 columns.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.Barcodes.PdfDataMatrixSize.Size12x36">
            <summary>
            Rectangular matrix with 12 rows and 36 columns.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.Barcodes.PdfDataMatrixSize.Size16x36">
            <summary>
            Rectangular matrix with 16 rows and 36 columns.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.Barcodes.PdfDataMatrixSize.Size16x48">
            <summary>
            Rectangular matrix with 16 rows and 48 columns.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.Barcodes.PdfErrorCorrectionLevel">
            <summary>
            Specifies the Barcode Error correction level.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.Barcodes.PdfErrorCorrectionLevel.Low">
            <summary>
            The Recovery capacity is 7%(approx.) 
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.Barcodes.PdfErrorCorrectionLevel.Medium">
            <summary>
            The Recovery capacity is 15%(approx.) 
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.Barcodes.PdfErrorCorrectionLevel.Quartile">
            <summary>
            The Recovery capacity is 25%(approx.) 
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.Barcodes.PdfErrorCorrectionLevel.High">
            <summary>
            The Recovery capacity is 30%(approx.) 
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.Barcodes.PdfGS1Code128Barcode">
            <remarks>Only the following symbols are allowed in a Code 128C barcode: 0 1 2 3 4 5 6 7 8 9 FNC1 (\xF0). Code 128 C encodes only numeric symbols at double density, each pair of digits is encoded using a single symbol.</remarks>
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCodabarBarcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode32Barcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode11Barcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode128ABarcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode128BBarcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode39Barcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode39ExtendedBarcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode93Barcode"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode93ExtendedBarcode"/> Class
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfGS1Code128Barcode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode128CBarcode"/> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfGS1Code128Barcode.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.Barcodes.PdfCode128CBarcode"/> class.
            </summary>
            <param name="text">The Barcode text.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfGS1Code128Barcode.CalculateCheckDigit">
            <summary>
            Calculates the check digit for this barcode specification.
            </summary>
            <returns>The Check digits.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfGS1Code128Barcode.GetDataToEncode(System.String)">
            <summary>
            Gets the data to encode.
            </summary>
            <param name="originalData">The original data.</param>
            <returns>Encoded string.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfGS1Code128Barcode.GetTextToEncode">
            <summary>
            Returns the Actual text to encode.
            </summary>
            <returns>The Actual Text.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfQRBarcode.Draw(ComponentPro.Pdf.PdfPageBase)">
            <summary>
            Draws the barcode on the <see cref="T:ComponentPro.Pdf.PdfPage" /> at the specified location.
            </summary>
            <param name="page">The pdf page.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfQRBarcode.Draw(ComponentPro.Pdf.PdfPageBase,System.Drawing.PointF)">
            <summary>
            Draws the barcode on the <see cref="T:ComponentPro.Pdf.PdfPage" /> at the specified location.
            </summary>
            <param name="page">The pdf page.</param>
            <param name="location">The barcode location.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfQRBarcode.Draw(ComponentPro.Pdf.PdfPageBase,System.Drawing.RectangleF)">
            <summary>
            Draw QR Barcode based on rectangle input values.
            </summary>
            <param name="page"></param>
            <param name="rectangle"></param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfQRBarcode.Draw(ComponentPro.Pdf.PdfPageBase,System.Drawing.PointF,System.Drawing.SizeF)">
            <summary>
            Draw QR Barcode based on location and size values.
            </summary>
            <param name="page"></param>
            <param name="location"></param>
            <param name="size"></param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfQRBarcode.Draw(ComponentPro.Pdf.PdfPageBase,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draw QR Barcode based on float input values.
            </summary>
            <param name="page"></param>
            <param name="a"></param>
            <param name="b"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfQRBarcode.ToImage">
            <summary>
            Exports the barcode as image.
            <returns>The barcode image.</returns>
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Barcodes.PdfQRBarcode.ToImage(System.Drawing.SizeF)">
            <summary>
            Convert the QR Barcode into image based on size value.
            </summary>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.Barcodes.PdfQRBarcode.ErrorCorrectionLevel">
            <summary>
            Gets or sets the Error correction level.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.Barcodes.PdfQRBarcode.InputMode">
            <summary>
            Gets or sets the Mode of the input text.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.Barcodes.PdfQRBarcode.Version">
            <summary>
            Gets or sets the QR Barcode Version.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.Barcodes.QRCodeVersion">
            <summary>
            Specifies the Barcode Version.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.Barcodes.TextLocation"> 
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.Barcodes.TextLocation.None">
            <summary>
            Displays, no text.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.Barcodes.TextLocation.Top">
            <summary>
            Displays text, above the barcode.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.Barcodes.TextLocation.Bottom">
            <summary>
             Displays text, at the bottom of the barcode.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfCalGrayColor">
            <summary>
            Represents a calibrated gray color, based on a CalGray colorspace. 
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfExtendedColor"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfCalGrayColorSpace"/> Class        
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfPen"/> Class  
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfColorSpaces"/> Class
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfExtendedColor">
            <summary>
            Represents the extended color, based on a complex colorspace. 
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.ColorSpaces.PdfExtendedColor.#ctor(ComponentPro.Pdf.Graphics.ColorSpaces.PdfColorSpaces)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfExtendedColor"/> class.
            </summary>
            <param name="colorspace">The colorspace.</param>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.ColorSpaces.PdfExtendedColor.m_colorspace">
            <summary>
            To store the Colorspace.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.ColorSpaces.PdfExtendedColor.ColorSpace">
            <summary>
            Gets the Colorspace
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.ColorSpaces.PdfCalGrayColor.#ctor(ComponentPro.Pdf.Graphics.ColorSpaces.PdfColorSpaces)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfCalGrayColor"/> class.
            </summary>
            <param name="colorspace">The color space.</param>
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfExtendedColor"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfCalGrayColorSpace"/> Class        
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfPen"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfColorSpaces"/> Class
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.ColorSpaces.PdfCalGrayColor.Gray">
            <summary>
            Gets or sets the gray level for this color. 
            </summary>
            <value>The gray level of this color.</value>
            <remarks>The acceptable range for this value is [0.0 1.0]. 
            0.0 means the darkest color that can be achieved, and 1.0 means the lightest color. </remarks>
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfExtendedColor"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfCalGrayColorSpace"/> Class        
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfPen"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfColorSpaces"/> Class
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfCalGrayColorSpace">
            <summary>
            Represents a CalGray colorspace.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.ColorSpace.PdfColorSpaces" /> Class
            <seealso cref="T:ComponentPro.Pdf.ColorSpace.PdfCalGrayColor" /> Class    
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfPen" /> Class    
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfColorSpaces">
            <summary>
            Represents the base class for all colorspaces. 
            </summary>           
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfPen" /> Class
            <seealso cref="T:ComponentPro.Pdf.IPdfObject" /> Interface
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.ColorSpaces.PdfColorSpaces.s_syncObject">
            <summary>
            Internal variable to store the internal object.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.ColorSpaces.PdfCalGrayColorSpace.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:PdfCalGrayColorSpace" /> class.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.ColorSpace.PdfColorSpaces" /> Class
            <seealso cref="T:ComponentPro.Pdf.ColorSpace.PdfCalGrayColor" /> Class    
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfPen" /> Class        
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.ColorSpaces.PdfCalGrayColorSpace.BlackPoint">
            <summary>
            Gets or sets the black point. 
            </summary>
            <value>An array of three numbers [XB YB ZB] specifying the tristimulus value, in the CIE 1931 XYZ space, of the diffuse black point. Default value: [ 0.0 0.0 0.0 ].</value>
            <seealso cref="T:ComponentPro.Pdf.ColorSpace.PdfColorSpaces" /> Class
            <seealso cref="T:ComponentPro.Pdf.ColorSpace.PdfCalGrayColor" /> Class    
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfPen" /> Class        
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.ColorSpaces.PdfCalGrayColorSpace.Gamma">
            <summary>
            Gets or sets the gamma.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.ColorSpace.PdfColorSpaces" /> Class
            <seealso cref="T:ComponentPro.Pdf.ColorSpace.PdfCalGrayColor" /> Class    
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfPen" /> Class        
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.ColorSpaces.PdfCalGrayColorSpace.WhitePoint">
            <summary>
            Gets or sets the white point.
            </summary>
            <value>An array of three numbers [XW YW ZW] specifying the tristimulus value, in the CIE 1931 XYZ space, of the diffuse white point. The numbers XW and ZW must be positive, and YW must be equal to 1.0.</value>
            <seealso cref="T:ComponentPro.Pdf.ColorSpace.PdfColorSpaces" /> Class
            <seealso cref="T:ComponentPro.Pdf.ColorSpace.PdfCalGrayColor" /> Class    
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfPen" /> Class        
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfCalRgbColor">
            <summary>
            Represents a calibrated RGB color, based on a CalRGB colorspace. 
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfExtendedColor"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfCalRgbColorSpace"/> Class    
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfPen"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfColorSpaces"/> Class
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.ColorSpaces.PdfCalRgbColor.#ctor(ComponentPro.Pdf.Graphics.ColorSpaces.PdfColorSpaces)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfCalRgbColor"/> class.
            </summary>
            <param name="colorspace">The colorspace</param>
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfExtendedColor"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfCalRgbColorSpace"/> Class    
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfPen"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfColorSpaces"/> Class
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.ColorSpaces.PdfCalRgbColor.Blue">
            <summary>
            Gets or sets the Blue value.
            </summary>
            <value>The blue level of this color.</value>
            <remarks>The acceptable range for this value is [0.0 1.0]. 0.0 means the darkest color that can be achieved, and 1.0 means the lightest. </remarks>
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfExtendedColor"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfCalRgbColorSpace"/> Class    
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfPen"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfColorSpaces"/> Class
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.ColorSpaces.PdfCalRgbColor.Green">
            <summary>
            Gets or sets the green level for this color. 
            </summary>
            <value>The green level of this color. </value>
            <remarks>The acceptable range for this value is [0.0 1.0]. 0.0 means the darkest color that can be achieved, and 1.0 means the lightest color. </remarks>
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfExtendedColor"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfCalRgbColorSpace"/> Class    
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfPen"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfColorSpaces"/> Class
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.ColorSpaces.PdfCalRgbColor.Red">
            <summary>
            Gets or sets the red level for this color.
            </summary>
            <value>The red level of this color.</value>
            <remarks>The acceptable range for this value is [0.0 1.0]. 0.0 means the darkest color that can be achieved, and 1.0 means the lightest color. </remarks>
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfExtendedColor"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfCalRgbColorSpace"/> Class    
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfPen"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfColorSpaces"/> Class
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfCalRgbColorSpace">
            <summary>
            Representing a CalRGB colorspace. 
            </summary>
            <seealso cref="T:ComponentPro.Pdf.ColorSpace.PdfColorSpaces" /> Class
            <seealso cref="T:ComponentPro.Pdf.ColorSpace.PdfCalRgbColor" /> Class    
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfPen" /> Class   
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.ColorSpaces.PdfCalRgbColorSpace.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:PdfCalRgbColorSpace" /> class.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.ColorSpace.PdfColorSpaces" /> Class
            <seealso cref="T:ComponentPro.Pdf.ColorSpace.PdfCalRgbColor" /> Class    
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfPen" /> Class       
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.ColorSpaces.PdfCalRgbColorSpace.BlackPoint">
            <summary>
            Gets or sets the black point. 
            </summary>
            <value>An array of three numbers [XB YB ZB] specifying the tristimulus value, in the CIE 1931 XYZ space, of the diffuse black point. </value>      
            <seealso cref="T:ComponentPro.Pdf.ColorSpace.PdfCalRgbColor" /> Class    
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfPen" /> Class
            <seealso cref="T:ComponentPro.Pdf.ColorSpace.PdfColorSpaces" /> Class
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.ColorSpaces.PdfCalRgbColorSpace.Gamma">
            <summary>
            Gets or sets the gamma. 
            </summary>
            <value>An array of three numbers [GR GG GB] specifying the gamma for the red, green, and blue components of the color space. </value>        
            <seealso cref="T:ComponentPro.Pdf.ColorSpace.PdfCalRgbColor" /> Class    
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfPen" /> Class
            <seealso cref="T:ComponentPro.Pdf.ColorSpace.PdfColorSpaces" /> Class
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.ColorSpaces.PdfCalRgbColorSpace.Matrix">
            <summary>
            Gets or sets the colorspace transformation matrix. 
            </summary>
            <value>An array of nine numbers [XA YA ZA XB YB ZB XC YC ZC] specifying the linear interpretation of the decoded A, B, and C components of the color space with respect to the final XYZ representation.</value>      
            <seealso cref="T:ComponentPro.Pdf.ColorSpace.PdfCalRgbColor" /> Class    
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfPen" /> Class
            <seealso cref="T:ComponentPro.Pdf.ColorSpace.PdfColorSpaces" /> Class
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.ColorSpaces.PdfCalRgbColorSpace.WhitePoint">
            <summary>
            Gets or sets the white point.
            </summary>
            <value>An array of three numbers [XW YW ZW] specifying the tristimulus value, in the CIE 1931 XYZ space, of the diffuse white point.</value>       
            <seealso cref="T:ComponentPro.Pdf.ColorSpace.PdfCalRgbColor" /> Class    
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfPen" /> Class
            <seealso cref="T:ComponentPro.Pdf.ColorSpace.PdfColorSpaces" /> Class
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfDeviceColorSpace">
            <summary>
            Represents a device colorspace.
            </summary>  
            <seealso cref="T:ComponentPro.Pdf.Functions.PdfExponentialInterpolationFunction"/> Class         
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfPen"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfColorSpaces"/> Class
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.ColorSpaces.PdfDeviceColorSpace.#ctor(ComponentPro.Pdf.Graphics.PdfColorSpace)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfDeviceColorSpace"/> class.
            </summary>
            <param name="colorspace">The colorspace.</param>     
            <seealso cref="T:ComponentPro.Pdf.Functions.PdfExponentialInterpolationFunction"/> Class         
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfPen"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfColorSpaces"/> Class
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.ColorSpaces.PdfDeviceColorSpace.DeviceColorSpaceType">
            <summary>
            Gets or sets the DeviceColorSpaceType
            </summary>     
            <seealso cref="T:ComponentPro.Pdf.Functions.PdfExponentialInterpolationFunction"/> Class         
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfPen"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfColorSpaces"/> Class
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfIccColor">
            <summary>
            Represents an ICC color, based on an ICC colorspace.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfExtendedColor"/> Class    
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfCalRgbColorSpace"/> Class    
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfIccColorSpace"/> Class       
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfPen"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfColorSpaces"/> Class
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.ColorSpaces.PdfIccColor.#ctor(ComponentPro.Pdf.Graphics.ColorSpaces.PdfColorSpaces)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfIccColor"/> class.
            </summary>
            <param name="colorspace">The colorspace.</param>
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfExtendedColor"/> Class    
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfCalRgbColorSpace"/> Class    
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfIccColorSpace"/> Class       
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfPen"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfColorSpaces"/> Class
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.ColorSpaces.PdfIccColor.ColorComponents">
            <summary>
            Gets or sets the color components. 
            </summary>
            <value>An array of values that describe the color in the ICC colorspace. </value>
            <remarks>The length of this array must match the value of ColorComponents property on the underlying ICC colorspace. </remarks>
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfExtendedColor"/> Class    
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfCalRgbColorSpace"/> Class    
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfIccColorSpace"/> Class       
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfPen"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfColorSpaces"/> Class
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfIccColorSpace">
            <summary>
            Represents an ICC based colorspace..
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfColorSpaces"/> Class    
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfCalRgbColorSpace"/> Class    
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfIccColor"/> Class    
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfPen"/> Class   
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.ColorSpaces.PdfIccColorSpace.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfIccColorSpace"/> class.
            </summary>     
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfCalRgbColorSpace"/> Class    
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfIccColor"/> Class    
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfPen"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfColorSpaces"/> Class
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.ColorSpaces.PdfIccColorSpace.GetProfileData">
            <summary>
            Set the Color Profile.
            </summary>
            <returns>ICC profile data.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.ColorSpaces.PdfIccColorSpace.Save">
            <summary>
            Saves an instance.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.ColorSpaces.PdfIccColorSpace.AlternateColorSpace">
            <summary>
            Gets or sets the alternate color space.
            </summary>
            <value>The alternate color space to be used in case the one specified in the stream data is not supported.</value>     
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfCalRgbColorSpace"/> Class    
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfIccColor"/> Class    
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfPen"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfColorSpaces"/> Class
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.ColorSpaces.PdfIccColorSpace.ColorComponents">
            <summary>
            Gets or sets the color components.
            </summary>
            <value>The number of color components in the color space described by the ICC profile data.</value>
            <remarks>This number must match the number of components actually in the ICC profile. As of PDF 1.4, this value must be 1, 3 or 4.</remarks>      
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfCalRgbColorSpace"/> Class    
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfIccColor"/> Class    
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfPen"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfColorSpaces"/> Class
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.ColorSpaces.PdfIccColorSpace.ProfileData">
            <summary>
            Gets or sets the profile data.
            </summary>
            <value>The ICC profile data.</value>     
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfCalRgbColorSpace"/> Class    
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfIccColor"/> Class    
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfPen"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfColorSpaces"/> Class
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.ColorSpaces.PdfIccColorSpace.Range">
            <summary>
            Gets or sets the range for color components. 
            </summary>
            <value>An array of 2 � ColorComponents numbers [ min0 max0 min1 max1 ... ] specifying the minimum and maximum valid values of the corresponding color components. These values must match the information in the ICC profile.</value>      
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfCalRgbColorSpace"/> Class    
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfIccColor"/> Class    
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfPen"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfColorSpaces"/> Class
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfIndexedColor">
            <summary>
            Represents an indexed color, based on an indexed colorspace. 
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfExtendedColor"/> Class      
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfIndexedColorSpace"/> Class    
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfDeviceColorSpace"/> Class      
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfPen"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfColorSpaces"/> Class
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.ColorSpaces.PdfIndexedColor.#ctor(ComponentPro.Pdf.Graphics.ColorSpaces.PdfIndexedColorSpace)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfIndexedColor"/> class.
            </summary>
            <param name="colorspace">The colorspace.</param>
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfExtendedColor"/> Class      
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfIndexedColorSpace"/> Class    
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfDeviceColorSpace"/> Class      
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfPen"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfColorSpaces"/> Class
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.ColorSpaces.PdfIndexedColor.SelectColorIndex">
            <summary>
            Gets or sets the color index
            </summary>
            <value>The index of the select color.</value>
            <remarks>The acceptable range for this value is 0 - MaxColorIndex.</remarks>
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfExtendedColor"/> Class      
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfIndexedColorSpace"/> Class    
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfDeviceColorSpace"/> Class      
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfPen"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfColorSpaces"/> Class
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfIndexedColorSpace">
            <summary>
            Represents an indexed colorspace.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfColorSpaces"/> Class      
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfIndexedColor"/> Class    
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfDeviceColorSpace"/> Class      
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfPen"/> Class  
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.ColorSpaces.PdfIndexedColorSpace.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfIndexedColorSpace"/> class.
            </summary>       
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfIndexedColor"/> Class    
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfDeviceColorSpace"/> Class      
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfPen"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfColorSpaces"/> Class
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.ColorSpaces.PdfIndexedColorSpace.GetProfileData">
            <summary>
            Gets the profile data.
            </summary>
            <returns>The profile data.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.ColorSpaces.PdfIndexedColorSpace.Save">
            <summary>
            Saves an instance.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.ColorSpaces.PdfIndexedColorSpace.BaseColorSpace">
            <summary>
            Gets or sets the base colorspace. 
            </summary>
            <value>The color space in which the values in the color table are to be interpreted.</value>        
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfIndexedColor"/> Class    
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfDeviceColorSpace"/> Class      
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfPen"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfColorSpaces"/> Class
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.ColorSpaces.PdfIndexedColorSpace.IndexedColorTable">
            <summary>
            Gets or sets the color table. 
            </summary>
            <value>The table of color components.</value>
            <remarks>The color table data must be m * (maxIndex + 1) bytes long, where m is the number of color components in the base color space. Each byte is an unsigned integer in the range 0 to 255 that is scaled to the range of the corresponding color component in the base color space; that is, 0 corresponds to the minimum value in the range for that component, and 255 corresponds to the maximum.</remarks>     
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfIndexedColor"/> Class    
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfDeviceColorSpace"/> Class      
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfPen"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfColorSpaces"/> Class
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.ColorSpaces.PdfIndexedColorSpace.MaxColorIndex">
            <summary>
            Gets or sets the index of the max color.
            </summary>
            <value>The maximum index that can be used to access the values in the color table.</value>      
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfIndexedColor"/> Class    
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfDeviceColorSpace"/> Class      
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfPen"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfColorSpaces"/> Class
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfLabColor">
            <summary>
            Represents a calibrated Lab color, based on a Lab colorspace. 
            </summary>      
            <seealso cref="T:ComponentPro.Pdf.ColorSpace.PdfLabColorSpace" /> Class            
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfPen" /> Class
            <seealso cref="T:ComponentPro.Pdf.ColorSpace.PdfColorSpaces" /> Class
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.ColorSpaces.PdfLabColor.#ctor(ComponentPro.Pdf.Graphics.ColorSpaces.PdfColorSpaces)">
            <summary>
            Initializes a new instance of the <see cref="T:PdfLabColor" /> class.
            </summary>
            <param name="colorspace">The ColorSpace.</param>           
            <seealso cref="T:ComponentPro.Pdf.ColorSpace.PdfLabColorSpace" /> Class            
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfPen" /> Class
            <seealso cref="T:ComponentPro.Pdf.ColorSpace.PdfColorSpaces" /> Class
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.ColorSpaces.PdfLabColor.A">
            <summary>
            Gets or sets the a* component for this color. 
            </summary>
            <value>The a* component of this color.</value>
            <remarks>The range for this value is defined by the Range property of the underlying Lab colorspace. </remarks>                
            <seealso cref="T:ComponentPro.Pdf.ColorSpace.PdfLabColorSpace" /> Class            
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfPen" /> Class
            <seealso cref="T:ComponentPro.Pdf.ColorSpace.PdfColorSpaces" /> Class
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.ColorSpaces.PdfLabColor.B">
            <summary>
            Gets or sets the b* component for this color. 
            </summary>
            <value>The b* component of this color.</value>
            <remarks>The range for this value is defined by the Range property of the underlying Lab colorspace. </remarks>          
            <seealso cref="T:ComponentPro.Pdf.ColorSpace.PdfLabColorSpace" /> Class            
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfPen" /> Class
            <seealso cref="T:ComponentPro.Pdf.ColorSpace.PdfColorSpaces" /> Class
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.ColorSpaces.PdfLabColor.L">
            <summary>
            Gets or sets the l component for this color. 
            </summary>
            <value>The l component of this color. </value>
            <remarks>The acceptable range for this value is [0.0 100.0]. 0.0 means the darkest color that can be achieved, and 100.0 means the lightest color. </remarks>            
            <seealso cref="T:ComponentPro.Pdf.ColorSpace.PdfLabColorSpace" /> Class            
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfPen" /> Class
            <seealso cref="T:ComponentPro.Pdf.ColorSpace.PdfColorSpaces" /> Class
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfLabColorSpace">
            <summary>
            Represents a Lab colorspace
            </summary>       
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfLabColor"/> Class            
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfPen"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfColorSpaces"/> Class
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.ColorSpaces.PdfLabColorSpace.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfLabColorSpace"/> class.
            </summary>       
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfLabColor"/> Class            
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfPen"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfColorSpaces"/> Class
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.ColorSpaces.PdfLabColorSpace.BlackPoint">
            <summary>
            Gets or sets BlackPoint
            </summary>
            <value>An array of three numbers [XB YB ZB] specifying the tristimulus value, in the CIE 1931 XYZ space, of the diffuse black point.</value>              
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfLabColor"/> Class            
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfPen"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfColorSpaces"/> Class
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.ColorSpaces.PdfLabColorSpace.Range">
            <summary>
            Gets or sets the Range
            </summary>
            <value>An array of three numbers [XB YB ZB] specifying the tristimulus value, in the CIE 1931 XYZ space, of the diffuse black point.</value>         
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfLabColor"/> Class            
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfPen"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfColorSpaces"/> Class
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.ColorSpaces.PdfLabColorSpace.WhitePoint">
            <summary>
            Gets or sets the white point
            </summary>
            <value>An array of three numbers [XW YW ZW] specifying the tristimulus value, in the CIE 1931 XYZ space, of the diffuse white point. </value>            
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfLabColor"/> Class            
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfPen"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfColorSpaces"/> Class
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfSeparationColor">
            <summary>
            Represents a separation color, based on a separation colorspace. 
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfExtendedColor"/> Class      
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfSeparationColorSpace"/> Class            
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfPen"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfColorSpaces"/> Class
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.ColorSpaces.PdfSeparationColor.#ctor(ComponentPro.Pdf.Graphics.ColorSpaces.PdfColorSpaces)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfSeparationColor"/> class.
            </summary>
            <param name="colorspace">The colorspace.</param>
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfExtendedColor"/> Class      
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfSeparationColorSpace"/> Class            
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfPen"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfColorSpaces"/> Class
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.ColorSpaces.PdfSeparationColor.Tint">
            <summary>
            Gets or sets the Tint Value.
            </summary>
            <value>A float value specifying the tint of this color.</value>
            <remarks>The acceptable range for this value is [0.0 1.0]. 0.0 means the lightest color that can be achieved, and 1.0 means the darkest color.</remarks>
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfExtendedColor"/> Class      
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfSeparationColorSpace"/> Class            
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfPen"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfColorSpaces"/> Class
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfSeparationColorSpace">
            <summary>
            Represents a separation colorspace
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfColorSpaces"/> Class      
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfSeparationColor"/> Class            
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfPen"/> Class   
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.ColorSpaces.PdfSeparationColorSpace.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfSeparationColorSpace"/> class.
            </summary>        
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfSeparationColor"/> Class            
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfPen"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfColorSpaces"/> Class 
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.ColorSpaces.PdfSeparationColorSpace.GetProfileData">
            <summary>
            Get the profile data.
            </summary>
            <returns>The profile data</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.ColorSpaces.PdfSeparationColorSpace.Save">
            <summary>
            Saves an instance.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.ColorSpaces.PdfSeparationColorSpace.AlternateColorSpaces">
            <summary>
            Gets or sets the alternate color spaces.
            </summary>
            <value>The alternate color space to be used when the destination device does not support separation colorspace.</value>      
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfSeparationColor"/> Class            
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfPen"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfColorSpaces"/> Class 
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.ColorSpaces.PdfSeparationColorSpace.Colorant">
            <summary>
            Gets or sets the colorant represented by this separation colorspace. 
            </summary>
            <value>The name of the colorant.</value>        
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfSeparationColor"/> Class            
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfPen"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfColorSpaces"/> Class 
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.ColorSpaces.PdfSeparationColorSpace.TintTransform">
            <summary>
            Gets or sets the tint transform function for the this colorspace. 
            </summary>
            <value>Tint transform function for the colorspace.</value>        
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfSeparationColor"/> Class            
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfPen"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.ColorSpaces.PdfColorSpaces"/> Class 
        </member>
        <member name="T:ComponentPro.Pdf.PdfImageInfo">
            <summary>
            Represents the utility class to store information about Images and its location.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfImageInfo.Bounds">
            <summary>
            Gets the Image Boundary location.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfImageInfo.Image">
            <summary>
            Gets the Image.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfImageInfo.Index">
            <summary>
            Gets the Image index.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfImageInfo.IsImageInterpolated">
            <summary>
            Returns true, when the image property in the PDF document is set to undergo interpolation.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfImageInfo.IsImageMasked">
            <summary>
            Returns true, if image masking is applied. Set to true when the image is undergone image masking.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfImageInfo.IsSoftMasked">
            <summary>
            Returns true, if soft masking is applied. Set to true when the image is undergone soft masking.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Functions.PdfExponentialInterpolationFunction">
            <summary>
            Implements PDF Exponential Interpolation Function.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Functions.PdfFunction">
            <summary>
            Implements the base class for all functions.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Functions.PdfExponentialInterpolationFunction.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:PdfExponentialInterpolationFunction" /> class.
            </summary>
            <param name="Init">init</param>
        </member>
        <member name="F:ComponentPro.Pdf.Functions.PdfExponentialInterpolationFunction.m_c0">
            <summary>
            Local variable to store the function result when x = 0.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Functions.PdfExponentialInterpolationFunction.m_c1">
            <summary>
            Local variable to store the function result when x = 1.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Functions.PdfExponentialInterpolationFunction.C0">
            <summary>
            Gets or sets the function result when x = 0.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Functions.PdfExponentialInterpolationFunction.C1">
            <summary>
            Gets or sets the function result when x = 1.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Functions.PdfExponentialInterpolationFunction.Exponent">
            <summary>
            Gets or sets the Exponent.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.GraphicsStateData">
            <summary>
            The class represents the graphics state data.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.BeforePageLayoutEventArgs">
            <summary>
             Provides data for event before lay outing the new page.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfCancelEventArgs">
            <summary>
            Provides the data for a cancelable event.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfCancelEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:ComponentPro.Pdf.Graphics.PdfCancelEventArgs" /> is cancel.
            </summary>
            <value><c>true</c> if cancel; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.BeforePageLayoutEventArgs.#ctor(System.Drawing.RectangleF,ComponentPro.Pdf.PdfPage)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.BeforePageLayoutEventArgs" /> class with the specified rectangle and page
            </summary>
            <param name="bounds">The bounds.</param>
            <param name="page">The page.</param>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.BeforePageLayoutEventArgs.Bounds">
            <summary>
            Gets or sets value that indicates the lay outing bounds on the page.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.BeforePageLayoutEventArgs.Page">
            <summary>
            Gets the page where the lay outing should start.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.BeforePageLayoutEventHandler">
            <summary>
            Represents the method that will handle an event that before lay outing on the page.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.EncodingType">
            <summary>
            Applicable only for monochrome TIFF images.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.EncodingType.Default">
            <summary>
            Default compression.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.EncodingType.JBIG2">
            <summary>
            Uses JBIG2 compression for monochrome TIFF images.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.AfterPageLayoutEventArgs">
            <summary>
            Provides data for event once lay outing completed on the new page.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.AfterPageLayoutEventArgs.#ctor(ComponentPro.Pdf.Graphics.PdfLayoutResult)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.AfterPageLayoutEventArgs" /> class. with the specified <see cref="T:ComponentPro.Pdf.Graphics.PdfLayoutResult" />
            </summary>
            <param name="result">The result.</param>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.AfterPageLayoutEventArgs.NextPage">
            <summary>
            Gets or sets a value indicating the next page where the element should be layout
            </summary>
            <remarks>The default value is null. In this case the element will be layout on the next page.</remarks>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.AfterPageLayoutEventArgs.Result">
            <summary>
            Gets the lay outing result of the page.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.AfterPageLayoutEventHandler">
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.AfterTextPageLayoutEventArgs">
            <summary>
            Represents the base class for classes that contain event data, and provides a value to use for events, once completed the text lay outing on the page.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.AfterTextPageLayoutEventArgs.#ctor(ComponentPro.Pdf.Graphics.PdfTextLayoutResult)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.AfterTextPageLayoutEventArgs" /> class with the specified <see cref="T:ComponentPro.Pdf.Graphics.PdfTextLayoutResult" />
            </summary>
            <param name="result">The result.</param>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.AfterTextPageLayoutEventArgs.Result">
            <summary>
            Gets the lay outing result of the page.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.AfterTextPageLayoutEventHandler">
            <summary>
            Represents the method that will handle an event, once completed the text lay outing on the page.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.Fonts.PdfUsedFont">
            <summary>
            Represents the used fonts in a PDF document.
            </summary>
            <remarks>This API is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Fonts.PdfUsedFont.#ctor(ComponentPro.Pdf.Graphics.PdfFont,ComponentPro.Pdf.PdfImportedPage)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.Fonts.PdfUsedFont" /> class.
            </summary>
            <remarks>This constructor is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
            <param name="font">The font.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.Fonts.PdfUsedFont.Replace(ComponentPro.Pdf.Graphics.PdfFont)">
            <summary>
            Replaces the specified new font.
            </summary>
            <remarks>This method is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
            <param name="newFont">The new font.</param>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.Fonts.PdfUsedFont.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.Fonts.PdfUsedFont.Size">
            <summary>
            Gets the size.
            </summary>
            <remarks>This property is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
            <value>The size.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.Fonts.PdfUsedFont.Style">
            <summary>
            Gets the style.
            </summary>
            <remarks>This property is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
            <value>The style.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.Fonts.PdfUsedFont.Type">
            <summary>
            Gets the type.
            </summary>
            <remarks>This property is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
            <value>The type.</value>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.LineInfo">
            <summary>
            Provides a line information
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.LineInfo.LineType">
            <summary>
            Gets the width of the line text.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.LineInfo.Text">
            <summary>
            Gets the line text.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.LineInfo.Width">
            <summary>
            Gets width of the line text.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.LineType">
            <summary>
            Break type of the line.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.LineType.None">
            <summary>
            Unknown type line.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.LineType.NewLineBreak">
            <summary>
            The line has new line symbol.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.LineType.LayoutBreak">
            <summary>
            layout break.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.LineType.FirstParagraphLine">
            <summary>
            The line is the first in the paragraph.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.LineType.LastParagraphLine">
            <summary>
            The line is the last in the paragraph.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfArc">
            <summary>
            Represents an arc shape.
            </summary>
            <remarks>It ignores brush setting.</remarks>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfEllipsePart">
            <summary>
            Represents a base class of arc and pie shapes.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfRectangleArea">
            <summary>
            Represents an area bound by a rectangle.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfFillElement">
            <summary>
            Represents an element to fill
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfDrawElement">
            <summary>
            Represents a graphics element which can be drawn by a pen.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfShapeElement">
            <summary>
            Base class for the main shapes.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfLayoutElement">
            <summary>
            Represents the base class for all elements that can be layout on the pages.
            </summary>
            [System.Security.Permissions.PermissionSet(System.Security.Permissions.SecurityAction.Assert, Name = "FullTrust")]
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfGraphicsElement">
            <summary>
            Represents a base class for all page graphics elements.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGraphicsElement.Draw(ComponentPro.Pdf.Graphics.PdfGraphics)">
            <summary>
            Draws an element on the Graphics.
            </summary>
            <param name="graphics">Graphics context where the element should be drawn.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGraphicsElement.Draw(ComponentPro.Pdf.Graphics.PdfGraphics,System.Drawing.PointF)">
            <summary>
            Draws an element on the Graphics.
            </summary>
            <param name="graphics">Graphics context where the element should be drawn.</param>
            <param name="location">Location of the element in the Graphics' co-ordinate system.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGraphicsElement.Draw(ComponentPro.Pdf.Graphics.PdfGraphics,System.Single,System.Single)">
            <summary>
            Draws an element on the Graphics.
            </summary>
            <param name="graphics">Graphics context where the element should be printed.</param>
            <param name="x">X co-ordinate of the element.</param>
            <param name="y">Y co-ordinate of the element.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGraphicsElement.DrawInternal(ComponentPro.Pdf.Graphics.PdfGraphics)">
            <summary>
            Draws an element on the Graphics.
            </summary>
            <param name="graphics">Graphics context where the element should be printed.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfLayoutElement.Draw(ComponentPro.Pdf.PdfPage,System.Drawing.PointF)">
            <summary>
            Draws the element on the page with the specified page and <see cref="T:System.Drawing.PointF" /> structure
            </summary>
            <param name="page">Current page where the element should be drawn.</param>
            <param name="location">Start location on the page.</param>
            <returns>PdfLayoutResult that represents the layout result of the drawn element.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfLayoutElement.Draw(ComponentPro.Pdf.PdfPage,System.Drawing.RectangleF)">
            <summary>
            Draws the element on the page with the specified page and <see cref="T:System.Drawing.RectangleF" /> structure
            </summary>
            <param name="page">Current page where the element should be drawn.</param>
            <param name="layoutRectangle">RectangleF structure that specifies the bounds of the element.</param>
            <returns>PdfLayoutResult that represents the layout result of the drawn element.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfLayoutElement.Draw(ComponentPro.Pdf.PdfPage,System.Single,System.Single)">
            <summary>
            Draws the element on the page with the specified page and pair of coordinates
            </summary>
            <param name="page">Current page where the element should be drawn.</param>
            <param name="x">X co-ordinate of the element on the page.</param>
            <param name="y">Y co-ordinate of the element on the page.</param>
            <returns>PdfLayoutResult that represents the layout result of the drawn element.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfLayoutElement.Draw(ComponentPro.Pdf.PdfPage,System.Drawing.PointF,ComponentPro.Pdf.Graphics.PdfLayoutSettings)">
            <summary>
            Draws the element on the page with the specified page, <see cref="T:System.Drawing.PointF" /> structure and layout format
            </summary>
            <param name="page">Current page where the element should be drawn.</param>
            <param name="location">Start location on the page.</param>
            <param name="format">PdfLayoutSettings that represents the layout settings</param>
            <returns>PdfLayoutResult that represents the layout result of the drawn element.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfLayoutElement.Draw(ComponentPro.Pdf.PdfPage,System.Drawing.RectangleF,ComponentPro.Pdf.Graphics.PdfLayoutSettings)">
            <summary>
            Draws the element on the page with the specified page, <see cref="T:System.Drawing.RectangleF" /> structure and layout format
            </summary>
            <param name="page">Current page where the element should be drawn.</param>
            <param name="layoutRectangle">RectangleF structure that specifies the bounds of the element.</param>
            <param name="format">PdfLayoutSettings that represents the layout settings</param>
            <returns>PdfLayoutResult that represents the layout result of the drawn element.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfLayoutElement.Draw(ComponentPro.Pdf.PdfPage,System.Single,System.Single,ComponentPro.Pdf.Graphics.PdfLayoutSettings)">
            <summary>
            Draws the element on the page with the specified page, pair of coordinates and layout format
            </summary>
            <param name="page">Current page where the element should be drawn.</param>
            <param name="x">X co-ordinate of the element on the page.</param>
            <param name="y">Y co-ordinate of the element on the page.</param>
            <param name="format">PdfLayoutSettings that represents the layout settings</param>
            <returns>PdfLayoutResult that represents the layout result of the drawn element.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfLayoutElement.Layout(ComponentPro.Pdf.Graphics.PdfLayoutParams)">
            <summary>
            Layouts the element.
            </summary>
            <param name="param">Layout parameters.</param>
            <returns>Returns the results of layout.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfLayoutElement.Layout(ComponentPro.Pdf.HtmlToPdf.HtmlToPdfLayoutParams)">
            <summary>
            Layouts the specified param.
            </summary>
            <param name="param">The param.</param>
            <returns>null</returns>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfLayoutElement.PdfTag">
            <summary>
            Gets or sets the tag for the element
            </summary>
        </member>
        <member name="E:ComponentPro.Pdf.Graphics.PdfLayoutElement.BeforePageLayout">
            <summary>
            Raises before the element should be printed on the page.
            </summary>
        </member>
        <member name="E:ComponentPro.Pdf.Graphics.PdfLayoutElement.AfterPageLayout">
            <summary>
            Raises after the element was printed on the page.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfShapeElement.GetBounds">
            <summary>
            Gets the bounds.
            </summary>
            <returns>rect</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfShapeElement.GetBoundsInternal">
            <summary>
            Returns a rectangle that bounds this element.
            </summary>
            <returns>Returns a rectangle that bounds this element.</returns>
            <remarks>This method doesn't take into consideration a rotation of the element.</remarks>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfShapeElement.Layout(ComponentPro.Pdf.Graphics.PdfLayoutParams)">
            <summary>
            Layouts the element.
            </summary>
            <param name="param">Lay outing parameters.</param>
            <returns>Returns lay outing results.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfDrawElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfDrawElement" /> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfDrawElement.#ctor(ComponentPro.Pdf.Graphics.PdfPen)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfDrawElement" /> class with the specified pen
            </summary>
            <param name="pen">The pen.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfDrawElement.ObtainPen">
            <summary>
            Gets the pen. If both pen and brush are not explicitly defined, default pen will be used.
            </summary>
            <returns>Gets the pen for drawing.</returns>
            <exclude />
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfDrawElement.Pen">
            <summary>
            Gets or sets a pen that will be used to draw the element.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfFillElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfFillElement" /> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfFillElement.#ctor(ComponentPro.Pdf.Graphics.PdfPen)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfFillElement" /> class.
            </summary>
            <param name="pen">The pen.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfFillElement.#ctor(ComponentPro.Pdf.Graphics.PdfBrush)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfFillElement" /> class.
            </summary>
            <param name="brush">The brush.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfFillElement.#ctor(ComponentPro.Pdf.Graphics.PdfPen,ComponentPro.Pdf.Graphics.PdfBrush)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfFillElement" /> class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfFillElement.ObtainPen">
            <summary>
            Gets the pen. If both pen and brush are not explicitly defined, default pen will be used.
            </summary>
            <exclude />
            <returns> brush </returns>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfFillElement.Brush">
            <summary>
            Gets or sets the brush of the element
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfRectangleArea.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfRectangleArea" /> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfRectangleArea.#ctor(System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfRectangleArea" /> class.
            </summary>
            <param name="rectangle">The rectangle.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfRectangleArea.#ctor(ComponentPro.Pdf.Graphics.PdfPen,ComponentPro.Pdf.Graphics.PdfBrush,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfRectangleArea" /> class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="rectangle">The rectangle.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfRectangleArea.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfRectangleArea" /> class.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfRectangleArea.#ctor(ComponentPro.Pdf.Graphics.PdfPen,ComponentPro.Pdf.Graphics.PdfBrush,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfRectangleArea" /> class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfRectangleArea.GetBoundsInternal">
            <summary>
            Overloaded. Returns a rectangle that bounds this element.
            </summary>
            <returns>Returns a rectangle that bounds this element.</returns>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfRectangleArea.Bounds">
            <summary>
            Gets or sets bounds of this element.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfRectangleArea.Height">
            <summary>
            Gets or sets the height of this element.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfRectangleArea.Size">
            <summary>
            Gets or sets the size of this element.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfRectangleArea.Width">
            <summary>
            Gets or sets the width of this element.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfRectangleArea.X">
            <summary>
            Gets or sets the X co-ordinate of the upper-left corner of this the element.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfRectangleArea.Y">
            <summary>
            Gets or sets the Y co-ordinate of the upper-left corner of this the element.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfEllipsePart.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfEllipsePart"/> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfEllipsePart.#ctor(System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfEllipsePart"/> class with the specified <see cref="T:System.Drawing.RectangleF"/> structure and sweep angle
            </summary>
            <param name="rectangle">RectangleF structure that defines the boundaries of the ellipse.</param>
            <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the starting point of the ellipse.</param>
            <param name="sweepAngle">Angle in degrees measured clockwise from the startAngle parameter to ending point of the ellipse.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfEllipsePart.#ctor(ComponentPro.Pdf.Graphics.PdfPen,ComponentPro.Pdf.Graphics.PdfBrush,System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfEllipsePart"/> class.
            </summary>
            <param name="pen">Pen that determines the color, width, and style of the ellipse.</param>
            <param name="brush">Brush that determines the color and texture of the ellipse.</param>
            <param name="rectangle">RectangleF structure that defines the boundaries of the ellipse.</param>
            <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the starting point of the ellipse.</param>
            <param name="sweepAngle">Angle in degrees measured clockwise from the startAngle parameter to ending point of the ellipse.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfEllipsePart.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfEllipsePart"/> class with the specified pair of coordinates, width, height and sweep angle
            </summary>
            <param name="x">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</param>
            <param name="y">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</param>
            <param name="width">Width of the bounding rectangle that defines the ellipse.</param>
            <param name="height">Height of the bounding rectangle that defines the ellipse.</param>
            <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the starting point of the ellipse.</param>
            <param name="sweepAngle">Angle in degrees measured clockwise from the startAngle parameter to ending point of the ellipse.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfEllipsePart.#ctor(ComponentPro.Pdf.Graphics.PdfPen,ComponentPro.Pdf.Graphics.PdfBrush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfEllipsePart"/> class with the specified pen, brush, pair of coordinates, width and height and sweep angle.
            </summary>
            <param name="pen">Pen that determines the color, width, and style of the ellipse.</param>
            <param name="brush">Brush that determines the color and texture of the ellipse.</param>
            <param name="x">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</param>
            <param name="y">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</param>
            <param name="width">Width of the bounding rectangle that defines the ellipse.</param>
            <param name="height">Height of the bounding rectangle that defines the ellipse.</param>
            <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the starting point of the ellipse.</param>
            <param name="sweepAngle">Angle in degrees measured clockwise from the startAngle parameter to ending point of the ellipse.</param>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfEllipsePart.StartAngle">
            <summary>
            Gets or sets the start angle.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfEllipsePart.SweepAngle">
            <summary>
            Gets or sets the sweep angle.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfArc.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfArc" /> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfArc.#ctor(System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfArc" /> class with the specified <see cref="T:System.Drawing.RectangleF" /> structure and sweep angle
            </summary>
            <param name="rectangle">RectangleF structure that defines the boundaries of the arc.</param>
            <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the starting point of the arc.</param>
            <param name="sweepAngle">Angle in degrees measured clockwise from the startAngle parameter to ending point of the arc.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfArc.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfArc" /> class with the specified pair of coordinates, width, height and sweep angle
            </summary>
            <param name="width">Width of the rectangle that defines the arc.</param>
            <param name="height">Height of the rectangle that defines the arc.</param>
            <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the starting point of the arc.</param>
            <param name="sweepAngle">Angle in degrees measured clockwise from the startAngle parameter to ending point of the arc.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfArc.#ctor(ComponentPro.Pdf.Graphics.PdfPen,System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfArc" /> class with the specified pen, <see cref="T:System.Drawing.RectangleF" /> structure and sweep angle
            </summary>
            <param name="pen">Pen that determines the color, width, and style of the arc.</param>
            <param name="rectangle">RectangleF structure that defines the boundaries of the arc.</param>
            <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the starting point of the arc.</param>
            <param name="sweepAngle">Angle in degrees measured clockwise from the startAngle parameter to ending point of the arc.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfArc.#ctor(ComponentPro.Pdf.Graphics.PdfPen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfArc" /> class with the specified pen, width, height and sweep angle
            </summary>
            <param name="pen">Pen that determines the color, width, and style of the arc.</param>
            <param name="width">Width of the rectangle that defines the arc.</param>
            <param name="height">Height of the rectangle that defines the arc.</param>
            <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the starting point of the arc.</param>
            <param name="sweepAngle">Angle in degrees measured clockwise from the startAngle parameter to ending point of the arc.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfArc.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfArc" /> class.
            </summary>
            <param name="x">The x-coordinate of the upper-left corner of the rectangle that defines the ellipse.</param>
            <param name="y">The y-coordinate of the upper-left corner of the rectangle that defines the ellipse.</param>
            <param name="width">Width of the rectangle that defines the arc.</param>
            <param name="height">Height of the rectangle that defines the arc.</param>
            <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the starting point of the arc.</param>
            <param name="sweepAngle">Angle in degrees measured clockwise from the startAngle parameter to ending point of the arc.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfArc.#ctor(ComponentPro.Pdf.Graphics.PdfPen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfArc" /> class with the specified pen, pair of coordinates, width, height and sweep angle
            </summary>
            <param name="pen">Pen that determines the color, width, and style of the arc.</param>
            <param name="x">The x-coordinate of the upper-left corner of the rectangle that defines the ellipse.</param>
            <param name="y">The y-coordinate of the upper-left corner of the rectangle that defines the ellipse.</param>
            <param name="width">Width of the rectangle that defines the arc.</param>
            <param name="height">Height of the rectangle that defines the arc.</param>
            <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the starting point of the arc.</param>
            <param name="sweepAngle">Angle in degrees measured clockwise from the startAngle parameter to ending point of the arc.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfArc.DrawInternal(ComponentPro.Pdf.Graphics.PdfGraphics)">
            <summary>
            Draws an element on the Graphics.
            </summary>
            <param name="graphics">Graphics context where the element should be printed.</param>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfBezierCurve">
            <summary>
            Represents Bezier curve shape.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfBezierCurve.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfBezierCurve" /> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfBezierCurve.#ctor(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfBezierCurve" /> class with the specified <see cref="T:System.Drawing.PointF" /> structure
            </summary>
            <param name="startPoint">PointF structure that represents the starting point of the curve.</param>
            <param name="firstControlPoint">PointF structure that represents the first control point for the curve.</param>
            <param name="secondControlPoint">PointF structure that represents the second control point for the curve.</param>
            <param name="endPoint">PointF structure that represents the ending point of the curve.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfBezierCurve.#ctor(ComponentPro.Pdf.Graphics.PdfPen,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfBezierCurve" /> class with the specified pen and <see cref="T:System.Drawing.PointF" /> structure.
            </summary>
            <param name="pen">Pen that determines the color, width, and style of the curve.</param>
            <param name="startPoint">PointF structure that represents the starting point of the curve.</param>
            <param name="firstControlPoint">PointF structure that represents the first control point for the curve.</param>
            <param name="secondControlPoint">PointF structure that represents the second control point for the curve.</param>
            <param name="endPoint">PointF structure that represents the ending point of the curve.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfBezierCurve.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfBezierCurve" /> class with the specified pair of coordinates and control points
            </summary>
            <param name="startPointX">The x-coordinate of the starting point of the curve.</param>
            <param name="startPointY">The y-coordinate of the starting point of the curve.</param>
            <param name="firstControlPointX">The x-coordinate of the first control point of the curve.</param>
            <param name="firstControlPointY">The y-coordinate of the first control point of the curve.</param>
            <param name="secondControlPointX">The x-coordinate of the second control point of the curve.</param>
            <param name="secondControlPointY">The y-coordinate of the second control point of the curve.</param>
            <param name="endPointX">The x-coordinate of the ending point of the curve.</param>
            <param name="endPointY">The y-coordinate of the ending point of the curve.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfBezierCurve.#ctor(ComponentPro.Pdf.Graphics.PdfPen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfBezierCurve" /> class with the specified pair of coordinates and control points
            </summary>
            <param name="pen">Pen that determines the color, width, and style of the curve.</param>
            <param name="startPointX">The x-coordinate of the starting point of the curve.</param>
            <param name="startPointY">The y-coordinate of the starting point of the curve.</param>
            <param name="firstControlPointX">The x-coordinate of the first control point of the curve.</param>
            <param name="firstControlPointY">The y-coordinate of the first control point of the curve.</param>
            <param name="secondControlPointX">The x-coordinate of the second control point of the curve.</param>
            <param name="secondControlPointY">The y-coordinate of the second control point of the curve.</param>
            <param name="endPointX">The x-coordinate of the ending point of the curve.</param>
            <param name="endPointY">The y-coordinate of the ending point of the curve.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfBezierCurve.DrawInternal(ComponentPro.Pdf.Graphics.PdfGraphics)">
            <summary>
            Draws an element on the Graphics.
            </summary>
            <param name="graphics">Graphics context where the element should be printed.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfBezierCurve.GetBoundsInternal">
            <summary>
            Overloaded. Returns a rectangle that bounds this element.
            </summary>
            <returns>Returns a rectangle that bounds this element.</returns>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBezierCurve.EndPoint">
            <summary>
            Gets or sets the ending point of the curve.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBezierCurve.FirstControlPoint">
            <summary>
            Gets or sets the first control point of the curve.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBezierCurve.SecondControlPoint">
            <summary>
            Gets or sets the second control point of the curve
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBezierCurve.StartPoint">
            <summary>
            Gets or sets the starting point of the curve
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfBitmap">
            <summary>
            The <see cref="T:ComponentPro.Pdf.Graphics.PdfBitmap" /> contains methods and properties to handle the Bitmap images
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfImage">
            <summary>
            Represents the base class for images and provides functionality for the <see cref="T:ComponentPro.Pdf.Graphics.PdfBitmap" /> class
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfImage.DrawInternal(ComponentPro.Pdf.Graphics.PdfGraphics)">
            <summary>
            Draws an element on the Graphics.
            </summary>
            <param name="graphics">Graphics context where the element should be printed.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfImage.FromFile(System.String)">
            <summary>
            Creates <see cref="T:ComponentPro.Pdf.Graphics.PdfImage" /> from the specified file..
            </summary>
            <remarks>This method is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
            <param name="path">A string that contains the name of the file from which to create the <see cref="T:ComponentPro.Pdf.Graphics.PdfImage" /></param>
            <returns>Returns a created PdfImage object.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfImage.FromImage(System.Drawing.Image)">
            <summary>
            Creates a <see cref="T:ComponentPro.Pdf.Graphics.PdfImage" /> from the existing <see cref="T:System.Drawing.Image" />.
            </summary>
            <remarks>This method is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
            <param name="image">The <see cref="T:System.Drawing.Image" /> from which to create the new <see cref="T:ComponentPro.Pdf.Graphics.PdfImage" />.</param>
            <returns>Returns a created PdfImage object.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfImage.FromRtf(System.String,System.Single,ComponentPro.Pdf.Graphics.PdfImageType)">
            <summary>
            Creates a new image instance from RTF text with the specified RTF text, width and image type
            </summary>
            <remarks>This method is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
            <param name="rtf">The RTF text from which to create the new <see cref="T:ComponentPro.Pdf.Graphics.PdfImage" /></param>
            <param name="width">Width of the image in points.</param>
            <param name="type">Type of the image that should be created.</param>
            <returns>PdfImage containing RTF text.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfImage.FromRtf(System.String,System.Single,System.Single,ComponentPro.Pdf.Graphics.PdfImageType)">
            <summary>
            Creates a new image instance from RTF text with the specified RTF text, width, height and image type
            </summary>
            <remarks>This method is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
            <param name="rtf">The RTF text from which to create the new <see cref="T:ComponentPro.Pdf.Graphics.PdfImage" />.</param>
            <param name="width">Width of the image in points.</param>
            <param name="height">Height of the image in points.</param>
            <param name="type">Type of the image that should be created.</param>
            <returns>PdfImage containing RTF text.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfImage.FromStream(System.IO.Stream)">
            <summary>
            Creates PdfImage from the specified data stream..
            </summary>
            <param name="stream">A Stream that contains the data for this <see cref="T:ComponentPro.Pdf.Graphics.PdfImage" />.</param>
            <returns>Returns a created PdfImage object.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfImage.GetBoundsInternal">
            <summary>
            Gets bounds of image.
            </summary>
            <remarks>The DPI is standard, not image DPI.</remarks>
            <returns>Bounds of image.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfImage.GetPixelSize(System.Single,System.Single)">
            <summary>
            Calculates the width and height of the image.
            </summary>
            <param name="width">Width of the image in points.</param>
            <param name="height">Height of the image in points.</param>
            <returns> Calculates the width and height of the image.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfImage.GetPointSize(System.Single,System.Single)">
            <summary>
            Calculates size of the image in points.
            </summary>
            <param name="width">Width in pixels.</param>
            <param name="height">Height in pixels.</param>
            <returns>size of the image in points.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfImage.GetPointSize(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Calculates size of the image in points.
            </summary>
            <param name="width">Width in pixels.</param>
            <param name="height">Height in pixels.</param>
            <param name="horizontalResolution">Horizontal resolution.</param>
            <param name="verticalResolution">Vertical resolution.</param>
            <returns>size of the image in points.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfImage.SetResolution(System.Single,System.Single)">
            <summary>
            Sets resolution of the image.
            </summary>
            <param name="horizontalResolution">Horizontal resolution of the image.</param>
            <param name="verticalResolution">Vertical resolution of the image.</param>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfImage.m_softmask">
            <summary>
            Holds mask type flag.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfImage.Height">
            <summary>
            Gets the height of the image in pixels (Read only).
            </summary>
            <value>The height of the image.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfImage.HorizontalResolution">
            <summary>
            Gets the horizontal resolution, in pixels per inch, of this Image (Read only). 
            </summary>
            <value>The horizontal resolution of the image.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfImage.PhysicalDimension">
            <summary>
            Gets the size of the image in points (Read only).
            </summary>
            <vakue>The size of the image in points</vakue>
            <remarks>This property uses HorizontalResolution and VerticalResolution for calculating the size in points.</remarks>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfImage.VerticalResolution">
            <summary>
            Gets the vertical resolution, in pixels per inch, of this Image (Read only).
            </summary>
            <value>The vertical resolution of the image.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfImage.Width">
            <summary>
            Gets the width of the image in pixels (Read only).
            </summary>
            <value>The width of the image.</value>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfBitmap.#ctor(System.Drawing.Image)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfBitmap" /> class from the specified existing image.
            </summary>
            <param name="image">The <see cref="T:System.Drawing.Image" /> from which to create the new Bitmap.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfBitmap.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfBitmap" /> class from the specified file.
            </summary>
            <param name="path">The bitmap file name and path.</param>
            <remarks>The file name and path can be relative to the application or an absolute path.</remarks>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfBitmap.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfBitmap" /> class from the specified data stream.
            </summary>
            <param name="stream">The data stream used to load the image.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfBitmap.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing,
            releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfBitmap.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:ComponentPro.Pdf.Graphics.PdfBitmap" /> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBitmap.ActiveFrame">
             <summary>
             Gets or sets the active frame of the image.
             </summary>
             <value>The index of the active frame.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBitmap.Encoding">
            <summary>
            Gets or sets the encoding type of the images
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.Graphics.EncodingType" /> which represents the compression type of the image</value>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBitmap.FrameCount">
            <summary>
            Gets the number of frames in the bitmap (Read only).
            </summary>
            <value>The frame count of the image.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBitmap.Mask">
            <summary>
            Gets or sets the mask of bitmap.
            </summary>
            <value>New PdfMask represents the mask image.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBitmap.Quality">
            <summary>
            Gets or sets the quality of the image.
            </summary>
            <remarks>When the image is stored into PDF not as a mask,
            you may reduce its quality, which saves the disk space.</remarks>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfBlend">
            <summary>
            Represents the blend color space
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfBlendBase">
            <summary>
            Represents the base class for PdfBlend and PdfColorBlend classes.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfBlendBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:PdfBlendBase" /> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfBlendBase.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:PdfBlendBase" /> class with the specified elements count
            </summary>
            <param name="count">The number of the elements.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfBlendBase.Gcd(System.Single[])">
            <summary>
            Calculate the GCD of the specified values.
            </summary>
            <param name="values">The values.</param>
            <returns>The calculated GCD value.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfBlendBase.Gcd(System.Single,System.Single)">
            <summary>
            Determines greatest common divisor of the specified u and v.
            </summary>
            <param name="u">The u.</param>
            <param name="v">The v.</param>
            <returns>The GCD value</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfBlendBase.Gcd(System.Int32,System.Int32)">
            <summary>
            Determines greatest common divisor of the specified u and v.
            </summary>
            <param name="u">The u.</param>
            <param name="v">The v.</param>
            <returns>The GCD value</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfBlendBase.SetArray(System.Array)">
            <summary>
            Sets the array.
            </summary>
            <param name="array">The array, which has values.</param>
            <returns>The array if it's passed all tests.</returns>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBlendBase.Count">
            <summary>
            Gets the number of elements that specify the blend.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBlendBase.Positions">
            <summary>
            Gets or sets the array of positions
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfBlend.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:PdfBlend" /> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfBlend.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:PdfBlend" /> class with the specified factor count
            </summary>
            <param name="count">The number of elements in the factors and positions arrays.</param>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBlend.Factors">
            <summary>
            Gets or sets the array of factor to the blend.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfBlendMode">
            <summary>
            Specifies the blend mode for transparency.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfBlendMode.Normal">
            <summary>
            Selects the source color, ignoring the backdrop.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfBlendMode.Multiply">
            <summary>
            Multiplies the backdrop and source color values.
            The result color is always at least as dark as either
            of the two constituent colors. Multiplying
            any color with black produces black; multiplying
            with white leaves the original color unchanged.
            Painting successive overlapping objects with a color
            other than black or white produces progressively darker colors.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfBlendMode.Screen">
            <summary>
            Multiplies the complements of the backdrop and source
            color values, then complements the result. The result
            color is always at least as light as either of the two
            constituent colors. Screening any color with white
            produces white; screening with black leaves the original
            color unchanged. The effect is similar to projecting
            multiple photographic slides simultaneously onto a single screen.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfBlendMode.Overlay">
            <summary>
            Multiplies or screens the colors, depending on
            the backdrop color value. Source colors overlay
            the backdrop while preserving its highlights and
            shadows. The backdrop color is not replaced but
            is mixed with the source color to reflect the
            lightness or darkness of the backdrop.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfBlendMode.Darken">
            <summary>
            Selects the darker of the backdrop and source colors.
            The backdrop is replaced with the source where the source
            is darker; otherwise, it is left unchanged.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfBlendMode.Lighten">
            <summary>
            Selects the lighter of the backdrop and source colors.
            The backdrop is replaced with the source where the source
            is lighter; otherwise, it is left unchanged.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfBlendMode.ColorDodge">
            <summary>
            Brightens the backdrop color to reflect the source color.
            Painting with black produces no changes.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfBlendMode.ColorBurn">
            <summary>
            Darkens the backdrop color to reflect the source color.
            Painting with white produces no change.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfBlendMode.HardLight">
            <summary>
            Multiplies or screens the colors, depending on the source color value.
            The effect is similar to shining a harsh spotlight on the backdrop.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfBlendMode.SoftLight">
            <summary>
            Darkens or lightens the colors, depending on the source color value.
            The effect is similar to shining a diffused spotlight on the backdrop.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfBlendMode.Difference">
            <summary>
            Subtracts the darker of the two constituent colors from the lighter color.
            Painting with white inverts the backdrop color; painting with black produces no change.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfBlendMode.Exclusion">
            <summary>
            Produces an effect similar to that of the Difference mode
            but lower in contrast. Painting with white inverts 
            the backdrop color; painting with black produces no change.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfBlendMode.Hue">
            <summary>
            Creates a color with the hue of the source color and 
            the saturation and luminosity of the backdrop color.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfBlendMode.Saturation">
            <summary>
            Creates a color with the saturation of the source color
            and the hue and luminosity of the backdrop color. Painting
            with this mode in an area of the backdrop that is a pure
            gray (no saturation) produces no change.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfBlendMode.Color">
            <summary>
            Creates a color with the hue and saturation of
            the source color and the luminosity of the backdrop
            color. This preserves the gray levels of the backdrop
            and is useful for coloring monochrome images or tinting color images.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfBlendMode.Luminosity">
            <summary>
            Creates a color with the luminosity of the source color
            and the hue and saturation of the backdrop color. This
            produces an inverse effect to that of the Color mode.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfBrush">
            <summary>
            Provides objects used to fill the interiors of graphical shapes such as rectangles, ellipses, pies, polygons, and paths.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfBrush.Clone">
            <summary>
            Creates a new copy of a brush.
            </summary>
            <returns>A new instance of the Brush class.</returns>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfBrushes">
            <summary>
            Brushes for all the standard colors
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.AliceBlue">
            <summary>
            Gets the AliceBlue brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.AntiqueWhite">
            <summary>
            Gets the antique white brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.Aqua">
            <summary>
            Gets the Aqua default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.Aquamarine">
            <summary>
            Gets the Aquamarine default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.Azure">
            <summary>
            Gets the Azure default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.Beige">
            <summary>
            Gets the Beige default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.Bisque">
            <summary>
            Gets the Bisque default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.Black">
            <summary>
            Gets the Black default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.BlanchedAlmond">
            <summary>
            Gets the BlanchedAlmond default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.Blue">
            <summary>
            Gets the Blue default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.BlueViolet">
            <summary>
            Gets the BlueViolet default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.Brown">
            <summary>
            Gets the Brown default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.BurlyWood">
            <summary>
            Gets the BurlyWood default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.CadetBlue">
            <summary>
            Gets the CadetBlue default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.Chartreuse">
            <summary>
            Gets the Chartreuse default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.Chocolate">
            <summary>
            Gets the Chocolate default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.Coral">
            <summary>
            Gets the Coral default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.CornflowerBlue">
            <summary>
            Gets the CornflowerBlue default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.Cornsilk">
            <summary>
            Gets the Corn silk default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.Crimson">
            <summary>
            Gets the Crimson default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.Cyan">
            <summary>
            Gets the Cyan default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.DarkBlue">
            <summary>
            Gets the DarkBlue default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.DarkCyan">
            <summary>
            Gets the DarkCyan default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.DarkGoldenrod">
            <summary>
            Gets the DarkGoldenrod default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.DarkGray">
            <summary>
            Gets the DarkGray default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.DarkGreen">
            <summary>
            Gets the DarkGreen default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.DarkKhaki">
            <summary>
            Gets the DarkKhaki default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.DarkMagenta">
            <summary>
            Gets the DarkMagenta default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.DarkOliveGreen">
            <summary>
            Gets the DarkOliveGreen default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.DarkOrange">
            <summary>
            Gets the DarkOrange default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.DarkOrchid">
            <summary>
            Gets the DarkOrchid default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.DarkRed">
            <summary>
            Gets the DarkRed default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.DarkSalmon">
            <summary>
            Gets the DarkSalmon default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.DarkSeaGreen">
            <summary>
            Gets the DarkSeaGreen default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.DarkSlateBlue">
            <summary>
            Gets the DarkSlateBlue default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.DarkSlateGray">
            <summary>
            Gets the DarkSlateGray default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.DarkTurquoise">
            <summary>
            Gets the DarkTurquoise default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.DarkViolet">
            <summary>
            Gets the DarkViolet default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.DeepPink">
            <summary>
            Gets the DeepPink default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.DeepSkyBlue">
            <summary>
            Gets the DeepSkyBlue default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.DimGray">
            <summary>
            Gets the DimGray default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.DodgerBlue">
            <summary>
            Gets the DodgerBlue default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.Firebrick">
            <summary>
            Gets the Firebrick default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.FloralWhite">
            <summary>
            Gets the FloralWhite default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.ForestGreen">
            <summary>
            Gets the ForestGreen default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.Fuchsia">
            <summary>
            Gets the Fuchsia default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.Gainsboro">
            <summary>
            Gets the Gainsborough default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.GhostWhite">
            <summary>
            Gets the GhostWhite default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.Gold">
            <summary>
            Gets the Gold default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.Goldenrod">
            <summary>
            Gets the Goldenrod default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.Gray">
            <summary>
            Gets the Gray default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.Green">
            <summary>
            Gets the Green default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.GreenYellow">
            <summary>
            Gets the GreenYellow default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.Honeydew">
            <summary>
            Gets the Honeydew default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.HotPink">
            <summary>
            Gets the HotPink default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.IndianRed">
            <summary>
            Gets the IndianRed default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.Indigo">
            <summary>
            Gets the Indigo default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.Ivory">
            <summary>
            Gets the Ivory default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.Khaki">
            <summary>
            Gets the Khaki default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.Lavender">
            <summary>
            Gets the Lavender default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.LavenderBlush">
            <summary>
            Gets the LavenderBlush default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.LawnGreen">
            <summary>
            Gets the LawnGreen default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.LemonChiffon">
            <summary>
            Gets the LemonChiffon default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.LightBlue">
            <summary>
            Gets the LightBlue default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.LightCoral">
            <summary>
            Gets the LightCoral default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.LightCyan">
            <summary>
            Gets the LightCyan default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.LightGoldenrodYellow">
            <summary>
            Gets the LightGoldenrodYellow default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.LightGray">
            <summary>
            Gets the LightGray default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.LightGreen">
            <summary>
            Gets the LightGreen default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.LightPink">
            <summary>
            Gets the LightPink default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.LightSalmon">
            <summary>
            Gets the LightSalmon default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.LightSeaGreen">
            <summary>
            Gets the LightSeaGreen default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.LightSkyBlue">
            <summary>
            Gets the LightSkyBlue default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.LightSlateGray">
            <summary>
            Gets the LightSlateGray default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.LightSteelBlue">
            <summary>
            Gets the LightSteelBlue default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.LightYellow">
            <summary>
            Gets the LightYellow default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.Lime">
            <summary>
            Gets the Lime default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.LimeGreen">
            <summary>
            Gets the LimeGreen default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.Linen">
            <summary>
            Gets the Linen default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.Magenta">
            <summary>
            Gets the Magenta default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.Maroon">
            <summary>
            Gets the Maroon default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.MediumAquamarine">
            <summary>
            Gets the MediumAquamarine default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.MediumBlue">
            <summary>
            Gets the MediumBlue default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.MediumOrchid">
            <summary>
            Gets the MediumOrchid default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.MediumPurple">
            <summary>
            Gets the MediumPurple default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.MediumSeaGreen">
            <summary>
            Gets the MediumSeaGreen default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.MediumSlateBlue">
            <summary>
            Gets the MediumSlateBlue default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.MediumSpringGreen">
            <summary>
            Gets the MediumSpringGreen default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.MediumTurquoise">
            <summary>
            Gets the MediumTurquoise default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.MediumVioletRed">
            <summary>
            Gets the MediumVioletRed default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.MidnightBlue">
            <summary>
            Gets the MidnightBlue default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.MintCream">
            <summary>
            Gets the MintCream default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.MistyRose">
            <summary>
            Gets the MistyRose default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.Moccasin">
            <summary>
            Gets the Moccasin default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.NavajoWhite">
            <summary>
            Gets the NavajoWhite default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.Navy">
            <summary>
            Gets the Navy default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.OldLace">
            <summary>
            Gets the OldLace default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.Olive">
            <summary>
            Gets the Olive default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.OliveDrab">
            <summary>
            Gets the OliveDrab default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.Orange">
            <summary>
            Gets the Orange default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.OrangeRed">
            <summary>
            Gets the OrangeRed default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.Orchid">
            <summary>
            Gets the Orchid default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.PaleGoldenrod">
            <summary>
            Gets the PaleGoldenrod default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.PaleGreen">
            <summary>
            Gets the PaleGreen default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.PaleTurquoise">
            <summary>
            Gets the PaleTurquoise default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.PaleVioletRed">
            <summary>
            Gets the PaleVioletRed default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.PapayaWhip">
            <summary>
            Gets the PapayaWhip default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.PeachPuff">
            <summary>
            Gets the PeachPuff default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.Peru">
            <summary>
            Gets the Peru default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.Pink">
            <summary>
            Gets the Pink default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.Plum">
            <summary>
            Gets the Plum default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.PowderBlue">
            <summary>
            Gets the PowderBlue default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.Purple">
            <summary>
            Gets the Purple default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.Red">
            <summary>
            Gets the Red default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.RosyBrown">
            <summary>
            Gets the RosyBrown default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.RoyalBlue">
            <summary>
            Gets the RoyalBlue default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.SaddleBrown">
            <summary>
            Gets the SaddleBrown default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.Salmon">
            <summary>
            Gets the Salmon default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.SandyBrown">
            <summary>
            Gets the SandyBrown default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.SeaGreen">
            <summary>
            Gets the SeaGreen default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.SeaShell">
            <summary>
            Gets the SeaShell default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.Sienna">
            <summary>
            Gets the Sienna default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.Silver">
            <summary>
            Gets the Silver default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.SkyBlue">
            <summary>
            Gets the SkyBlue default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.SlateBlue">
            <summary>
            Gets the SlateBlue default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.SlateGray">
            <summary>
            Gets the SlateGray default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.Snow">
            <summary>
            Gets the Snow default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.SpringGreen">
            <summary>
            Gets the SpringGreen default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.SteelBlue">
            <summary>
            Gets the SteelBlue default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.Tan">
            <summary>
            Gets the Tan default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.Teal">
            <summary>
            Gets the Teal default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.Thistle">
            <summary>
            Gets the Thistle default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.Tomato">
            <summary>
            Gets the Tomato default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.Transparent">
            <summary>
            Gets the Transparent default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.Turquoise">
            <summary>
            Gets the Turquoise default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.Violet">
            <summary>
            Gets the Violet default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.Wheat">
            <summary>
            Gets the Wheat default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.White">
            <summary>
            Gets the White default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.WhiteSmoke">
            <summary>
            Gets the WhiteSmoke default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.Yellow">
            <summary>
            Gets the Yellow default brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfBrushes.YellowGreen">
            <summary>
            Gets the YellowGreen default brush.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfCjkFontFamily">
            <summary>
            Specifies the type of CJK font.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfCjkFontFamily.HanyangSystemsGothicMedium">
            <summary>
            Represents the Hanyang Systems Gothic Medium font.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfCjkFontFamily.HanyangSystemsShinMyeongJoMedium">
            <summary>
            Represents the Hanyang Systems shin myeong Jo Medium font.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfCjkFontFamily.HeiseiKakuGothicW5">
            <summary>
            Represents the Heisei kaku GothicW5 font.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfCjkFontFamily.HeiseiMinchoW3">
            <summary>
            Represents the Heisei MinchoW3 font.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfCjkFontFamily.MonotypeHeiMedium">
            <summary>
            Represents the Monotype Hei Medium font.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfCjkFontFamily.MonotypeSungLight">
            <summary>
            Represents the monotype sung Light font.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfCjkFontFamily.SinoTypeSongLight">
            <summary>
            Represents the sinotype song light font.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfCjkStandardFont">
            <summary>
            Represents the standard CJK fonts.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfFont">
            <summary>
            Defines a particular format for text, including font face, size, and style attributes. 
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfFont.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfFont" /> class.
            </summary>
            <param name="size">The size.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfFont.#ctor(System.Single,ComponentPro.Pdf.Graphics.PdfFontStyle)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfFont" /> class.
            </summary>
            <param name="size">The size.</param>
            <param name="style">The style.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfFont.ApplyFormatSettings(System.String,ComponentPro.Pdf.Graphics.PdfStringFormat,System.Single)">
            <summary>
            Applies settings to the default line width.
            </summary>
            <param name="line">Text line.</param>
            <param name="format">String format.</param>
            <param name="width">Default line width.</param>
            <returns>Line width with settings applied.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfFont.EqualsToFont(ComponentPro.Pdf.Graphics.PdfFont)">
            <summary>
            Checks whether fonts are equals.
            </summary>
            <param name="font">Font to compare.</param>
            <returns>True if fonts are equal, False otherwise.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfFont.GetCharWidth(System.Char,ComponentPro.Pdf.Graphics.PdfStringFormat)">
            <summary>
            Returns width of the char.
            </summary>
            <param name="charCode">Char symbol.</param>
            <param name="format">String format.</param>
            <returns>Width of the symbol.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfFont.GetLineWidth(System.String,ComponentPro.Pdf.Graphics.PdfStringFormat)">
            <summary>
            Returns width of the line.
            </summary>
            <param name="line">Text line.</param>
            <param name="format">String format.</param>
            <returns>Width of the line.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfFont.MeasureString(System.String)">
            <summary>
            Measures a string by using this font.
            </summary>
            <param name="text">String to measure.</param>
            <returns>Size of the text.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfFont.MeasureString(System.String,ComponentPro.Pdf.Graphics.PdfStringFormat)">
            <summary>
            Measures a string by using this font.
            </summary>
            <param name="text">String to measure.</param>
            <param name="format">PdfStringFormat that represents formatting information, such as line spacing, for the string.</param>
            <returns>Size of the text.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfFont.MeasureString(System.String,System.Single)">
            <summary>
            Measures a string by using this font.
            </summary>
            <param name="text">String to measure.</param>
            <param name="width">Maximum width of the string in points.</param>
            <returns>Size of the text.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfFont.MeasureString(System.String,System.Drawing.SizeF)">
            <summary>
            Measures a string by using this font.
            </summary>
            <param name="text">String to measure.</param>
            <param name="layoutArea">SizeF structure that specifies the maximum layout area for the text in points.</param>
            <returns>Size of the text.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfFont.MeasureString(System.String,System.Single,ComponentPro.Pdf.Graphics.PdfStringFormat)">
            <summary>
            Measures a string by using this font.
            </summary>
            <param name="text">String to measure.</param>
            <param name="width">Maximum width of the string in points.</param>
            <param name="format">PdfStringFormat that represents formatting information, such as line spacing, for the string.</param>
            <returns>Size of the text.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfFont.MeasureString(System.String,System.Drawing.SizeF,ComponentPro.Pdf.Graphics.PdfStringFormat)">
            <summary>
            Measures a string by using this font.
            </summary>
            <param name="text">String to measure.</param>
            <param name="layoutArea">SizeF structure that specifies the maximum layout area for the text in points.</param>
            <param name="format">PdfStringFormat that represents formatting information, such as line spacing, for the string.</param>
            <returns>Size of the text.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfFont.MeasureString(System.String,ComponentPro.Pdf.Graphics.PdfStringFormat,System.Int32@,System.Int32@)">
            <summary>
            Measures a string by using this font.
            </summary>
            <param name="text">String to measure.</param>
            <param name="format">PdfStringFormat that represents formatting information, such as line spacing, for the string.</param>
            <param name="charactersFitted">Number of characters in the string.</param>
            <param name="linesFilled">Number of text lines in the string.</param>
            <returns>Size of the text.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfFont.MeasureString(System.String,System.Single,ComponentPro.Pdf.Graphics.PdfStringFormat,System.Int32@,System.Int32@)">
            <summary>
            Measures a string by using this font.
            </summary>
            <param name="text">String to measure.</param>
            <param name="width">Maximum width of the string in points.</param>
            <param name="format">PdfStringFormat that represents formatting information, such as line spacing, for the string.</param>
            <param name="charactersFitted">Number of characters in the string.</param>
            <param name="linesFilled">Number of text lines in the string.</param>
            <returns>Size of the text.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfFont.MeasureString(System.String,System.Drawing.SizeF,ComponentPro.Pdf.Graphics.PdfStringFormat,System.Int32@,System.Int32@)">
            <summary>
            Measures a string by using this font.
            </summary>
            <param name="text">String to measure.</param>
            <param name="layoutArea">SizeF structure that specifies the maximum layout area for the text in points.</param>
            <param name="format">PdfStringFormat that represents formatting information, such as line spacing, for the string.</param>
            <param name="charactersFitted">Number of characters in the string.</param>
            <param name="linesFilled">Number of text lines in the string.</param>
            <returns>Size of the text.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfFont.SetStyle(ComponentPro.Pdf.Graphics.PdfFontStyle)">
            <summary>
            Sets the style.
            </summary>
            <param name="style">The style.</param>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfFont.s_syncObject">
            <summary>
            Synchronization object.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfFont.Bold">
            <summary>
            Gets a value indicating whether this <see cref="T:ComponentPro.Pdf.Graphics.PdfFont" /> is bold.
            </summary>
            <value><c>true</c> if bold; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfFont.Height">
            <summary>
            Gets the height of the font in points.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfFont.Italic">
            <summary>
            Gets a value indicating whether this <see cref="T:ComponentPro.Pdf.Graphics.PdfFont" /> has the italic style applied.
            </summary>
            <value><c>true</c> if italic; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfFont.Name">
            <summary>
            Gets the face name of this Font.
            </summary>
            <value>A string representation of the face name of this <see cref="T:ComponentPro.Pdf.Graphics.PdfFont" />.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfFont.Size">
            <summary>
            Gets the size of this font.
            </summary>
            <value>The em-size of this Font.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfFont.Strikeout">
            <summary>
            Gets a value indicating whether this <see cref="T:ComponentPro.Pdf.Graphics.PdfFont" /> is strikeout.
            </summary>
            <value><c>true</c> if strikeout; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfFont.Style">
            <summary>
            Gets the style information for this font.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfFont.Underline">
            <summary>
            Gets a value indicating whether this <see cref="T:ComponentPro.Pdf.Graphics.PdfFont" /> is underline.
            </summary>
            <value><c>true</c> if underline; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfCjkStandardFont.#ctor(ComponentPro.Pdf.Graphics.PdfCjkFontFamily,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfCjkStandardFont" /> class with the specified <see cref="T:ComponentPro.Pdf.Graphics.PdfCjkFontFamily" /> and size 
            </summary>
            <param name="fontFamily">The font family.</param>
            <param name="size">The size.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfCjkStandardFont.#ctor(ComponentPro.Pdf.Graphics.PdfCjkStandardFont,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfCjkStandardFont" /> class with the specified <see cref="T:ComponentPro.Pdf.Graphics.PdfCjkStandardFont" /> and size 
            </summary>
            <param name="prototype">The prototype.</param>
            <param name="size">The size.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfCjkStandardFont.#ctor(ComponentPro.Pdf.Graphics.PdfCjkFontFamily,System.Single,ComponentPro.Pdf.Graphics.PdfFontStyle)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfCjkStandardFont" /> class with the specified <see cref="T:ComponentPro.Pdf.Graphics.PdfCjkFontFamily" />, size and style
            </summary>
            <param name="fontFamily">The font family.</param>
            <param name="size">The size.</param>
            <param name="style">The style.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfCjkStandardFont.#ctor(ComponentPro.Pdf.Graphics.PdfCjkStandardFont,System.Single,ComponentPro.Pdf.Graphics.PdfFontStyle)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfCjkStandardFont" /> class with the specified <see cref="T:ComponentPro.Pdf.Graphics.PdfCjkFontFamily" />, size and style
            </summary>
            <param name="prototype">The prototype.</param>
            <param name="size">The size.</param>
            <param name="style">The style.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfCjkStandardFont.EqualsToFont(ComponentPro.Pdf.Graphics.PdfFont)">
            <summary>
            Checks whether fonts are equals.
            </summary>
            <param name="font">Font to compare.</param>
            <returns>
            True if fonts are equal, False otherwise.
            </returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfCjkStandardFont.GetCharWidth(System.Char,ComponentPro.Pdf.Graphics.PdfStringFormat)">
            <summary>
            Returns width of the char.
            </summary>
            <param name="charCode">Char symbol.</param>
            <param name="format">String format.</param>
            <returns>Width of the symbol.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfCjkStandardFont.GetLineWidth(System.String,ComponentPro.Pdf.Graphics.PdfStringFormat)">
            <summary>
            Returns width of the line.
            </summary>
            <param name="line">Text line.</param>
            <param name="format">String format.</param>
            <returns>Width of the line.</returns>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfCjkStandardFont.FontFamily">
            <summary>
            Gets the CJK font family.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfColor">
            <summary>
            Implements structures and routines working with color.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfColor.#ctor(ComponentPro.Pdf.Graphics.PdfColor)">
            <summary>
            Initializes a new instance of the <see cref="T:PdfColor" /> class with source color 
            </summary>
            <param name="color">Source color object.</param>
            <property name="flag" value="Finished" />
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfColor.#ctor(System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:PdfColor" /> class with <see cref="T:System.Drawing.Color" /> object
            </summary>
            <param name="color">Source color object.</param>
            <property name="flag" value="Finished" />
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfColor.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:PdfColor" /> class with gray value
            </summary>
            <param name="gray">Gray value.</param>
            <property name="flag" value="Finished" />
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfColor.#ctor(System.Byte,System.Byte,System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:PdfColor" /> class with Red,Green and Blue values.
            </summary>
            <param name="red">Red channel value.</param>
            <param name="green">Green channel value.</param>
            <param name="blue">Blue channel value.</param>
            <property name="flag" value="Finished" />
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfColor.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:PdfColor" /> class with Cyan,Magenta,Yellow and Black channels.
            </summary>
            <param name="cyan">Cyan channel value.</param>
            <param name="magenta">Magenta channel value.</param>
            <param name="yellow">Yellow channel value.</param>
            <param name="black">Black channel value.</param>
            <property name="flag" value="Finished" />
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfColor.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />
            is equal to the current <see cref="T:System.Object" />.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to
            compare with the current <see cref="T:System.Object" />.</param>
            <returns>
            True if the specified <see cref="T:System.Object" /> is equal
            to the current <see cref="T:System.Object" />; otherwise -
            False.
            </returns>
            <property name="flag" value="Finished" />
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfColor.Equals(ComponentPro.Pdf.Graphics.PdfColor)">
            <summary>
            Determines if the specified color is equal to this one.
            </summary>
            <param name="colour">The color.</param>
            <returns>
            True if the color is equal; otherwise - False.
            </returns>
            <property name="flag" value="Finished" />
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfColor.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for
            use in hashing algorithms and data structures like a hash
            table.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object" />.
            </returns>
            <property name="flag" value="Finished" />
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfColor.op_Equality(ComponentPro.Pdf.Graphics.PdfColor,ComponentPro.Pdf.Graphics.PdfColor)">
            <summary>
            Operator ==.
            </summary>
            <param name="colour1">The color 1.</param>
            <param name="colour2">The color 2.</param>
            <returns>
            True if color 1 is equal to color 2; otherwise False.
            </returns>
            <property name="flag" value="Finished" />
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfColor.op_Implicit(System.Drawing.Color)~ComponentPro.Pdf.Graphics.PdfColor">
            <summary>
            Implicit operator.
            </summary>
            <param name="color">System.Drawing.Color.</param>
            <returns>PDFColor.</returns>
            <property name="flag" value="Finished" />
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfColor.op_Implicit(ComponentPro.Pdf.Graphics.PdfColor)~System.Drawing.Color">
            <summary>
            Implicit operator.
            </summary>
            <param name="color">System.Drawing.Color.</param>
            <returns>PDFColor.</returns>
            <property name="flag" value="Finished" />
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfColor.op_Inequality(ComponentPro.Pdf.Graphics.PdfColor,ComponentPro.Pdf.Graphics.PdfColor)">
            <summary>
            Operator !=.
            </summary>
            <param name="colour1">The color 1.</param>
            <param name="colour2">The color 2.</param>
            <returns>
            True if color 1 is not equal to color 2; otherwise False.
            </returns>
            <property name="flag" value="Finished" />
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfColor.ToArgb">
            <summary>
            Creates the Alpha ,Red ,Green, and Blue value of this PDFColor structure.
            </summary>
            <returns>ARGB value.</returns>
            <property name="flag" value="Finished" />
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfColor.B">
            <summary>
            Gets or sets Blue channel value.
            </summary>
            <value>The B.</value>
            <property name="flag" value="Finished" />
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfColor.Blue">
            <summary>
            Gets the blue color
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfColor.C">
            <summary>
            Gets or sets Cyan channel value.
            </summary>
            <value>The C.</value>
            <property name="flag" value="Finished" />
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfColor.Empty">
            <summary>
            Gets a null color.
            </summary>
            <value>The empty.</value>
            <property name="flag" value="Finished" />
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfColor.G">
            <summary>
            Gets or sets Green channel value.
            </summary>
            <value>The G.</value>
            <property name="flag" value="Finished" />
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfColor.Gray">
            <summary>
            Gets or sets Gray channel value.
            </summary>
            <value>The gray.</value>
            <property name="flag" value="Finished" />
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfColor.Green">
            <summary>
            Gets the green value
            </summary>
            <value>The green.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfColor.IsEmpty">
            <summary>
            Gets whether the PDFColor is Empty or not.
            </summary>
            <value><c>true</c> if this instance is empty; otherwise, <c>false</c>.</value>
            <property name="flag" value="Finished" />
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfColor.K">
            <summary>
            Gets or sets Black channel value.
            </summary>
            <value>The K.</value>
            <property name="flag" value="Finished" />
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfColor.M">
            <summary>
            Gets or sets Magenta channel value.
            </summary>
            <value>The M.</value>
            <property name="flag" value="Finished" />
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfColor.R">
            <summary>
            Gets or sets Red channel value.
            </summary>
            <value>The R.</value>
            <property name="flag" value="Finished" />
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfColor.Red">
            <summary>
            Gets the red color
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfColor.Y">
            <summary>
            Gets or sets Yellow channel value.
            </summary>
            <value>The Y.</value>
            <property name="flag" value="Finished" />
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfColorBlend">
            <summary>
            Represents the arrays of colors and positions used for
            interpolating color blending in a multicolor gradient.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfColorBlend.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfColorBlend" /> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfColorBlend.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfColorBlend" /> class with the specified elements count
            </summary>
            <param name="count">The count of the element.</param>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfColorBlend.Colors">
            <summary>
            Gets or sets the array of colors.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfColorMask">
            <summary>
            Represents the color mask for Bitmap images.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfMask">
            <summary>
            Base class for bitmap masking objects.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfColorMask.#ctor(ComponentPro.Pdf.Graphics.PdfColor,ComponentPro.Pdf.Graphics.PdfColor)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfColorMask" /> class with the specified start and end color
            </summary>
            <param name="startColor">The start color of the color mask.</param>
            <param name="endColor">The end color of the color mask.</param>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfColorMask.EndColor">
            <summary>
            Gets or sets the end color of the mask.
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.Graphics.PdfColor" /> which represents the ending color of the color mask.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfColorMask.StartColor">
            <summary>
            Gets or sets the start color of the mask.
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.Graphics.PdfColor" /> which represents the starting color of the color mask.</value>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfColorSpace">
             <property name="flag" value="Finished" />
            
             <summary>
             Defines set of color spaces.
             </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfColorSpace.RGB">
             <property name="flag" value="Finished" />
            
             <summary>
             RGB color space.
             </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfColorSpace.CMYK">
             <property name="flag" value="Finished" />
            
             <summary>
             CMYK color space.
             </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfColorSpace.GrayScale">
             <property name="flag" value="Finished" />
            
             <summary>
             GrayScale color space.
             </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfColorSpace.Indexed">
            <summary>
            Indexed color space used internally.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfDashStyle">
            <summary>
            Possible dash styles of the pen.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfDashStyle.Solid">
            <summary>
            Solid line.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfDashStyle.Dash">
            <summary>
            Dashed line.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfDashStyle.Dot">
            <summary>
            Dotted line.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfDashStyle.DashDot">
            <summary>
            Dash-dot line.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfDashStyle.DashDotDot">
            <summary>
            Dash-dot-dot line.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfDashStyle.Custom">
            <summary>
            User defined dash style.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfEllipse">
            <summary>
            Represents an ellipse shape.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfEllipse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfEllipse" /> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfEllipse.#ctor(System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfEllipse" /> class with the rectangle.
            </summary>
            <param name="rectangle">RectangleF structure that defines the boundaries of the ellipse.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfEllipse.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfEllipse" /> class with the specified width and height
            </summary>
            <param name="width">Width of the bounding rectangle that defines the ellipse.</param>
            <param name="height">Height of the bounding rectangle that defines the ellipse.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfEllipse.#ctor(ComponentPro.Pdf.Graphics.PdfPen,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfEllipse" /> class with the specified pen and <see cref="T:System.Drawing.RectangleF" /> structure
            </summary>
            <param name="pen">Pen that determines the color, width, and style of the ellipse.</param>
            <param name="rectangle">RectangleF structure that defines the boundaries of the ellipse.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfEllipse.#ctor(ComponentPro.Pdf.Graphics.PdfBrush,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfEllipse" /> class with the specified brush and <see cref="T:System.Drawing.RectangleF" /> structure
            </summary>
            <param name="brush">Brush that determines the color and texture of the ellipse.</param>
            <param name="rectangle">RectangleF structure that defines the boundaries of the ellipse.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfEllipse.#ctor(ComponentPro.Pdf.Graphics.PdfPen,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfEllipse" /> class with the specified pen, width and height.
            </summary>
            <param name="pen">Pen that determines the color, width, and style of the ellipse.</param>
            <param name="width">Width of the bounding rectangle that defines the ellipse.</param>
            <param name="height">Height of the bounding rectangle that defines the ellipse.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfEllipse.#ctor(ComponentPro.Pdf.Graphics.PdfBrush,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfEllipse" /> class with the specified brush, width and height.
            </summary>
            <param name="brush">Brush that determines the color and texture of the ellipse.</param>
            <param name="width">Width of the bounding rectangle that defines the ellipse.</param>
            <param name="height">Height of the bounding rectangle that defines the ellipse.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfEllipse.#ctor(ComponentPro.Pdf.Graphics.PdfPen,ComponentPro.Pdf.Graphics.PdfBrush,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfEllipse" /> class with the specified pen, brush and <see cref="T:System.Drawing.RectangleF" /> structure
            </summary>
            <param name="pen">Pen that determines the color, width, and style of the ellipse.</param>
            <param name="brush">Brush that determines the color and texture of the ellipse.</param>
            <param name="rectangle">RectangleF structure that defines the boundaries of the ellipse.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfEllipse.#ctor(ComponentPro.Pdf.Graphics.PdfPen,ComponentPro.Pdf.Graphics.PdfBrush,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfEllipse" /> class with the specified pen, brush, width and height
            </summary>
            <param name="pen">Pen that determines the color, width, and style of the ellipse.</param>
            <param name="brush">Brush that determines the color and texture of the ellipse.</param>
            <param name="width">Width of the bounding rectangle that defines the ellipse.</param>
            <param name="height">Height of the bounding rectangle that defines the ellipse.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfEllipse.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfEllipse" /> class with the specified pair of coordinates, width and height
            </summary>
            <param name="x">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</param>
            <param name="y">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</param>
            <param name="width">Width of the bounding rectangle that defines the ellipse.</param>
            <param name="height">Height of the bounding rectangle that defines the ellipse.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfEllipse.#ctor(ComponentPro.Pdf.Graphics.PdfPen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfEllipse" /> class with the specified pen, pair of coordinates, width and height
            </summary>
            <param name="pen">Pen that determines the color, width, and style of the ellipse.</param>
            <param name="x">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</param>
            <param name="y">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</param>
            <param name="width">Width of the bounding rectangle that defines the ellipse.</param>
            <param name="height">Height of the bounding rectangle that defines the ellipse.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfEllipse.#ctor(ComponentPro.Pdf.Graphics.PdfBrush,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfEllipse" /> class with the specified brush, pair of coordinates, width and height
            </summary>
            <param name="brush">Brush that determines the color and texture of the ellipse.</param>
            <param name="x">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</param>
            <param name="y">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</param>
            <param name="width">Width of the bounding rectangle that defines the ellipse.</param>
            <param name="height">Height of the bounding rectangle that defines the ellipse.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfEllipse.#ctor(ComponentPro.Pdf.Graphics.PdfPen,ComponentPro.Pdf.Graphics.PdfBrush,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfEllipse" /> class with the specified pen, brush, pair of coordinates, width and height
            </summary>
            <param name="pen">Pen that determines the color, width, and style of the ellipse.</param>
            <param name="brush">Brush that determines the color and texture of the ellipse.</param>
            <param name="x">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</param>
            <param name="y">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</param>
            <param name="width">Width of the bounding rectangle that defines the ellipse.</param>
            <param name="height">Height of the bounding rectangle that defines the ellipse.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfEllipse.DrawInternal(ComponentPro.Pdf.Graphics.PdfGraphics)">
            <summary>
            Draws an element on the Graphics.
            </summary>
            <param name="graphics">Graphics context where the element should be printed.</param>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfEllipse.Center">
            <summary>
            Gets the center point.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfEllipse.RadiusX">
            <summary>
            Gets the radius X.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfEllipse.RadiusY">
            <summary>
            Gets the radius Y.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfExtend">
            <summary>
            Specifies the constant values specifying whether to extend the shading
            beyond the starting and ending points of the axis.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfExtend.None">
            <summary>
            Do not extend any point.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfExtend.Start">
            <summary>
            Extend start point.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfExtend.End">
            <summary>
            Extend end point.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfExtend.Both">
            <summary>
            Extend both start and end points.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfFillMode">
             <property name="flag" value="Finished" />
            
             <summary>
             Specifies how the shapes are filled. 
             </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfFillMode.Winding">
             <property name="flag" value="Finished" />
            
             <summary>
             Nonzero winding number rule of determining "insideness"
             of point.
             </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfFillMode.Alternate">
             <property name="flag" value="Finished" />
            
             <summary>
             Even odd rule of determining "insideness" of point.
             </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfFontFamily">
            <summary>
            Indicates type of standard PDF fonts.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfFontFamily.Helvetica">
            <summary>
            Represents the Helvetica font.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfFontFamily.Courier">
            <summary>
            Represents the Courier font.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfFontFamily.TimesRoman">
            <summary>
            Represents the Times Roman font.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfFontFamily.Symbol">
            <summary>
            Represents the Symbol font.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfFontFamily.ZapfDingbats">
            <summary>
            Represents the ZapfDingbats font.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfFontStyle">
            <summary>
            Specifies style information applied to text.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfFontStyle.Regular">
            <summary>
            Normal text.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfFontStyle.Bold">
            <summary>
            Bold text.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfFontStyle.Italic">
            <summary>
            Italic text.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfFontStyle.Underline">
            <summary>
            Represents the underline text.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfFontStyle.Strikeout">
            <summary>
            Strikeout text.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfFontType">
            <summary>
            Specifies the type of the font.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfFontType.Standard">
            <summary>
            Indicates the standard Adobe fonts.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfFontType.TrueType">
            <summary>
            Indicates the non-embedded TrueType fonts.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfFontType.TrueTypeEmbedded">
            <summary>
            Indicates the Embedded TrueType fonts.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfGradientBrush">
            <summary>
            Encapsulates a <see cref="T:ComponentPro.Pdf.Graphics.PdfBrush" /> with a gradient brush.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGradientBrush.CloneAntiAliasingValue(ComponentPro.Pdf.Graphics.PdfGradientBrush)">
            <summary>
            Clones the anti aliasing value.
            </summary>
            <param name="brush">The brush.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGradientBrush.CloneBackgroundValue(ComponentPro.Pdf.Graphics.PdfGradientBrush)">
            <summary>
            Clones the background value.
            </summary>
            <param name="brush">The brush.</param>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfGradientBrush.AntiAlias">
            <summary>
            Gets or sets a value indicating whether use anti aliasing algorithm.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfGradientBrush.Background">
            <summary>
            Gets or sets the background color of the brush.
            </summary>
            <remarks>This value is optional. If null is assigned to it,
            the associated entry is removed from the appropriate dictionary.</remarks>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfGraphics">
            <summary>
            Represents a graphics context of the objects.
            It's used for performing all the graphics operations.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGraphics.DrawArc(ComponentPro.Pdf.Graphics.PdfPen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws an arc representing a portion of an ellipse specified by a pair of coordinates, a width, and a height.
            </summary>
            <param name="pen">Pen that determines the color, width, and style of the arc.</param>
            <param name="x">The x-coordinate of the upper-left corner of the rectangle that defines the ellipse.</param>
            <param name="y">The y-coordinate of the upper-left corner of the rectangle that defines the ellipse.</param>
            <param name="width">Width of the rectangle that defines the ellipse.</param>
            <param name="height">Height of the rectangle that defines the ellipse.</param>
            <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the starting point of the arc.</param>
            <param name="sweepAngle">Angle in degrees measured clockwise from the startAngle parameter to ending point of the arc.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGraphics.DrawBezier(ComponentPro.Pdf.Graphics.PdfPen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a B�zier spline defined by four ordered pairs of coordinates that represent points.
            </summary>
            <param name="pen">Pen structure that determines the color, width, and style of the curve.</param>
            <param name="startPointX">The x-coordinate of the starting point of the curve.</param>
            <param name="startPointY">The y-coordinate of the starting point of the curve.</param>
            <param name="firstControlPointX">The x-coordinate of the first control point of the curve.</param>
            <param name="firstControlPointY">The y-coordinate of the first control point of the curve.</param>
            <param name="secondControlPointX">The x-coordinate of the second control point of the curve.</param>
            <param name="secondControlPointY">The y-coordinate of the second control point of the curve.</param>
            <param name="endPointX">The x-coordinate of the ending point of the curve.</param>
            <param name="endPointY">The y-coordinate of the ending point of the curve.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGraphics.DrawEllipse(ComponentPro.Pdf.Graphics.PdfPen,System.Drawing.RectangleF)">
            <summary>
            Draws an ellipse specified by a pen, a bounding Rectangle structure.
            </summary>
            <param name="pen">Pen that determines the color, width, and style of the ellipse.</param>
            <param name="rectangle">RectangleF structure that defines the boundaries of the ellipse.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGraphics.DrawEllipse(ComponentPro.Pdf.Graphics.PdfPen,ComponentPro.Pdf.Graphics.PdfBrush,System.Drawing.RectangleF)">
            <summary>
            Draws an ellipse specified by a bounding Rectangle structure.
            </summary>
            <param name="pen">Pen that determines the color, width, and style of the ellipse.</param>
            <param name="brush">Brush that determines the color and texture of the ellipse.</param>
            <param name="rectangle">RectangleF structure that defines the boundaries of the ellipse.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGraphics.DrawEllipse(ComponentPro.Pdf.Graphics.PdfPen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws an ellipse defined by a bounding rectangle specified by coordinates for the upper-left corner of the rectangle, a height, and a width.
            </summary>
            <param name="pen">Pen that determines the color, width, and style of the ellipse.</param>
            <param name="x">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</param>
            <param name="y">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</param>
            <param name="width">Width of the bounding rectangle that defines the ellipse.</param>
            <param name="height">Height of the bounding rectangle that defines the ellipse.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGraphics.DrawEllipse(ComponentPro.Pdf.Graphics.PdfBrush,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws an ellipse defined by a bounding rectangle specified by coordinates for the upper-left corner of the rectangle, a height, and a width.
            </summary>
            <param name="brush">Brush that determines the color and texture of the ellipse.</param>
            <param name="x">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</param>
            <param name="y">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</param>
            <param name="width">Width of the bounding rectangle that defines the ellipse.</param>
            <param name="height">Height of the bounding rectangle that defines the ellipse.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGraphics.DrawEllipse(ComponentPro.Pdf.Graphics.PdfPen,ComponentPro.Pdf.Graphics.PdfBrush,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws an ellipse specified by a pen, a brush and coordinates for the upper-left corner of the rectangle, a height, and a width.
            </summary>
            <param name="pen">Pen that determines the color, width, and style of the ellipse.</param>
            <param name="brush">Brush that determines the color and texture of the ellipse.</param>
            <param name="x">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</param>
            <param name="y">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</param>
            <param name="width">Width of the bounding rectangle that defines the ellipse.</param>
            <param name="height">Height of the bounding rectangle that defines the ellipse.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGraphics.DrawImage(ComponentPro.Pdf.Graphics.PdfImage,System.Drawing.PointF)">
            <summary>
            Draws the specified PdfImage, using its original physical size, at the specified location..
            </summary>
            <param name="image">PdfImage to draw.</param>
            <param name="point">Point structure that represents the location of the upper-left corner of the drawn image.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGraphics.DrawImage(ComponentPro.Pdf.Graphics.PdfImage,System.Drawing.RectangleF)">
            <summary>
            Draws the specified Image at the specified location and with the specified size.
            </summary>
            <param name="image">PdfImage to draw.</param>
            <param name="rectangle">RectangleF structure that specifies the location and size of the drawn image.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGraphics.DrawImage(ComponentPro.Pdf.Graphics.PdfImage,System.Single,System.Single)">
            <summary>
            Draws the specified image, using its original physical size, at the location specified by a coordinate pair.
            </summary>
            <param name="image">PdfImage to draw.</param>
            <param name="x">The x-coordinate of the upper-left corner of the drawn image.</param>
            <param name="y">The y-coordinate of the upper-left corner of the drawn image.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGraphics.DrawImage(ComponentPro.Pdf.Graphics.PdfImage,System.Drawing.PointF,System.Drawing.SizeF)">
            <summary>
            Draws the specified Image at the specified location and with the specified shape and size.
            </summary>
            <param name="image">PdfImage to draw.</param>
            <param name="point">Point structure that represents the location of the upper-left corner of the drawn image.</param>
            <param name="size">SizeF structure that represents the height and width of the drawn image.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGraphics.DrawImage(ComponentPro.Pdf.Graphics.PdfImage,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws the specified image, using its original physical size, at the location specified by a coordinate pair.
            </summary>
            <param name="image">PdfImage to draw.</param>
            <param name="x">The x-coordinate of the upper-left corner of the drawn image.</param>
            <param name="y">The y-coordinate of the upper-left corner of the drawn image.</param>
            <param name="width">Width of the drawn image.</param>
            <param name="height">Height of the drawn image.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGraphics.DrawLine(ComponentPro.Pdf.Graphics.PdfPen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a line connecting the two points specified by the coordinate pairs.
            </summary>
            <param name="pen">Pen that determines the color, width, and style of the line.</param>
            <param name="x1">The x-coordinate of the first point.</param>
            <param name="y1">The y-coordinate of the first point.</param>
            <param name="x2">The x-coordinate of the second point.</param>
            <param name="y2">The y-coordinate of the second point.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGraphics.DrawPath(ComponentPro.Pdf.Graphics.PdfPen,ComponentPro.Pdf.Graphics.PdfPath)">
            <summary>
            Draws a GraphicsPath defined by a pen and path
            </summary>
            <param name="pen">Pen that determines the color, width, and style of the path.</param>
            <param name="path">GraphicsPath to draw.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGraphics.DrawPath(ComponentPro.Pdf.Graphics.PdfPen,ComponentPro.Pdf.Graphics.PdfBrush,ComponentPro.Pdf.Graphics.PdfPath)">
            <summary>
            Draws a GraphicsPath defined by a pen, a brush and path
            </summary>
            <param name="pen">Pen that determines the color, width, and style of the path.</param>
            <param name="brush">Brush that determines the color and texture of the path.</param>
            <param name="path">GraphicsPath to draw.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGraphics.DrawPdfTemplate(ComponentPro.Pdf.Graphics.PdfTemplate,System.Drawing.PointF)">
            <summary>
            Draws a template using its original size, at the specified location.
            </summary>
            <param name="template"><see cref="T:ComponentPro.Pdf.Graphics.PdfTemplate" /> object.</param>
            <param name="location">PointF structure that specifies the upper-left corner of the drawn template.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGraphics.DrawPdfTemplate(ComponentPro.Pdf.Graphics.PdfTemplate,System.Drawing.PointF,System.Drawing.SizeF)">
            <summary>
            Draws a template at the specified location and size.
            </summary>
            <param name="template"><see cref="T:ComponentPro.Pdf.Graphics.PdfTemplate" /> object.</param>
            <param name="location">PointF structure that specifies the upper-left corner of the drawn template.</param>
            <param name="size">Size of the template.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGraphics.DrawPie(ComponentPro.Pdf.Graphics.PdfPen,System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
            Draws a pie shape defined by an ellipse specified by a Rectangle structure and two radial lines.
            </summary>
            <param name="pen">Pen that determines the color, width, and style of the pie shape.</param>
            <param name="rectangle">Rectangle structure that represents the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
            <param name="startAngle">Angle measured in degrees clockwise from the x-axis to the first side of the pie shape.</param>
            <param name="sweepAngle">Angle measured in degrees clockwise from the startAngle parameter to the second side of the pie shape.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGraphics.DrawPie(ComponentPro.Pdf.Graphics.PdfPen,ComponentPro.Pdf.Graphics.PdfBrush,System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
            Draws a pie shape defined by an ellipse specified by a Rectangle structure and two radial lines.
            </summary>
            <param name="pen">Pen that determines the color, width, and style of the pie shape.</param>
            <param name="brush">Brush that determines the color and texture of the pie.</param>
            <param name="rectangle">Rectangle structure that represents the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
            <param name="startAngle">Angle measured in degrees clockwise from the x-axis to the first side of the pie shape.</param>
            <param name="sweepAngle">Angle measured in degrees clockwise from the startAngle parameter to the second side of the pie shape.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGraphics.DrawPie(ComponentPro.Pdf.Graphics.PdfPen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a pie shape defined by an ellipse specified by a coordinate pair, a width, a height, and two radial lines.
            </summary>
            <param name="pen">Pen that determines the color, width, and style of the pie shape.</param>
            <param name="x">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
            <param name="y">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
            <param name="width">Width of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
            <param name="height">Height of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
            <param name="startAngle">Angle measured in degrees clockwise from the x-axis to the first side of the pie shape.</param>
            <param name="sweepAngle">Angle measured in degrees clockwise from the startAngle parameter to the second side of the pie shape.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGraphics.DrawPie(ComponentPro.Pdf.Graphics.PdfBrush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a pie shape defined by an ellipse specified by a coordinate pair, a width, a height, and two radial lines.
            </summary>
            <param name="brush">Brush that determines the color and texture of the pie.</param>
            <param name="x">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
            <param name="y">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
            <param name="width">Width of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
            <param name="height">Height of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
            <param name="startAngle">Angle measured in degrees clockwise from the x-axis to the first side of the pie shape.</param>
            <param name="sweepAngle">Angle measured in degrees clockwise from the startAngle parameter to the second side of the pie shape.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGraphics.DrawPie(ComponentPro.Pdf.Graphics.PdfPen,ComponentPro.Pdf.Graphics.PdfBrush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a pie shape defined by an ellipse specified by a Rectangle structure and two radial lines.
            </summary>
            <param name="pen">Pen that determines the color, width, and style of the pie shape.</param>
            <param name="brush">Brush that determines the color and texture of the pie.</param>
            <param name="x">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
            <param name="y">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
            <param name="width">Width of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
            <param name="height">Height of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
            <param name="startAngle">Angle measured in degrees clockwise from the x-axis to the first side of the pie shape.</param>
            <param name="sweepAngle">Angle measured in degrees clockwise from the startAngle parameter to the second side of the pie shape.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGraphics.DrawPolygon(ComponentPro.Pdf.Graphics.PdfPen,System.Drawing.PointF[])">
            <summary>
            Draws a polygon defined by a pen, an array of Point structures.
            </summary>
            <param name="pen">Pen that determines the color, width, and style of the polygon.</param>
            <param name="points">Array of PointF structures that represent the vertices of the polygon.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGraphics.DrawPolygon(ComponentPro.Pdf.Graphics.PdfPen,ComponentPro.Pdf.Graphics.PdfBrush,System.Drawing.PointF[])">
            <summary>
            Draws a polygon defined by a pen, a brush, an array of Point structures.
            </summary>
            <param name="pen">Pen that determines the color, width, and style of the polygon.</param>
            <param name="brush">Brush that determines the color and texture of the pie.</param>
            <param name="points">Array of Point structures that represent the vertices of the polygon.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGraphics.DrawRectangle(ComponentPro.Pdf.Graphics.PdfPen,System.Drawing.RectangleF)">
            <summary>
            Draws a rectangle specified by a pen, a Rectangle structure.
            </summary>
            <param name="pen">A Pen that determines the color, width, and style of the rectangle.</param>
            <param name="rectangle">A Rectangle structure that represents the rectangle to draw.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGraphics.DrawRectangle(ComponentPro.Pdf.Graphics.PdfPen,ComponentPro.Pdf.Graphics.PdfBrush,System.Drawing.RectangleF)">
            <summary>
            Draws a rectangle specified by a pen, a brush and a Rectangle structure.
            </summary>
            <param name="pen">A Pen that determines the color, width, and style of the rectangle.</param>
            <param name="brush">Brush that determines the color and texture of the rectangle.</param>
            <param name="rectangle">A Rectangle structure that represents the rectangle to draw.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGraphics.DrawRectangle(ComponentPro.Pdf.Graphics.PdfPen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a rectangle specified by a pen, a coordinate pair, a width, and a height.
            </summary>
            <param name="pen">A Pen that determines the color, width, and style of the rectangle.</param>
            <param name="x">The x-coordinate of the upper-left corner of the rectangle to draw.</param>
            <param name="y">The y-coordinate of the upper-left corner of the rectangle to draw.</param>
            <param name="width">Width of the rectangle to draw.</param>
            <param name="height">Height of the rectangle to draw.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGraphics.DrawRectangle(ComponentPro.Pdf.Graphics.PdfBrush,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a rectangle specified by a brush, coordinate pair, a width, and a height.
            </summary>
            <param name="brush">Brush that determines the color and texture of the rectangle.</param>
            <param name="x">The x-coordinate of the upper-left corner of the rectangle to draw.</param>
            <param name="y">The y-coordinate of the upper-left corner of the rectangle to draw.</param>
            <param name="width">Width of the rectangle to draw.</param>
            <param name="height">Height of the rectangle to draw.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGraphics.DrawRectangle(ComponentPro.Pdf.Graphics.PdfPen,ComponentPro.Pdf.Graphics.PdfBrush,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a rectangle specified by a pen, a coordinate pair, a width, and a height.
            </summary>
            <param name="pen">A Pen that determines the color, width, and style of the rectangle.</param>
            <param name="brush">Brush that determines the color and texture of the rectangle.</param>
            <param name="x">The x-coordinate of the upper-left corner of the rectangle to draw.</param>
            <param name="y">The y-coordinate of the upper-left corner of the rectangle to draw.</param>
            <param name="width">Width of the rectangle to draw.</param>
            <param name="height">Height of the rectangle to draw.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGraphics.DrawString(System.String,ComponentPro.Pdf.Graphics.PdfFont,ComponentPro.Pdf.Graphics.PdfBrush,System.Drawing.PointF)">
            <summary>
            Draws the specified text string at the specified location with the specified Brush and Font objects. 
            </summary>
            <param name="s">String to draw.</param>
            <param name="font">Font that defines the text format of the string.</param>
            <param name="brush">Brush that determines the color and texture of the drawn text.</param>
            <param name="point">PointF structure that specifies the upper-left corner of the drawn text.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGraphics.DrawString(System.String,ComponentPro.Pdf.Graphics.PdfFont,ComponentPro.Pdf.Graphics.PdfPen,System.Drawing.PointF)">
            <summary>
            Draws the specified text string at the specified location
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">String to draw.</param>
            <param name="font">Font that defines the text format of the string.</param>
            <param name="pen">Pen that determines the color, width, and style of the path.</param>
            <param name="point">PointF structure that specifies the upper-left corner of the drawn text.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGraphics.DrawString(System.String,ComponentPro.Pdf.Graphics.PdfFont,ComponentPro.Pdf.Graphics.PdfBrush,System.Drawing.RectangleF)">
            <summary>
            Draws the specified text string at the specified location and size
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">Font that defines the text format of the string.</param>
            <param name="brush">Brush that determines the color and texture of the drawn text.</param>
            <param name="layoutRectangle">RectangleF structure that specifies the bounds of the drawn text.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGraphics.DrawString(System.String,ComponentPro.Pdf.Graphics.PdfFont,ComponentPro.Pdf.Graphics.PdfPen,System.Drawing.RectangleF)">
            <summary>
            Draws the specified text string at the specified location and size
            with the specified Pen and Font objects. 
            </summary>
            <param name="s">String to draw.</param>
            <param name="font">Font that defines the text format of the string.</param>
            <param name="pen">Pen that determines the color, width, and style of the path.</param>
            <param name="layoutRectangle">RectangleF structure that specifies the bounds of the drawn text.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGraphics.DrawString(System.String,ComponentPro.Pdf.Graphics.PdfFont,ComponentPro.Pdf.Graphics.PdfBrush,System.Drawing.PointF,ComponentPro.Pdf.Graphics.PdfStringFormat)">
            <summary>
            Draws the specified text string at the specified location
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">String to draw.</param>
            <param name="font">Font that defines the text format of the string.</param>
            <param name="brush">Brush that determines the color and texture of the drawn text.</param>
            <param name="point">PointF structure that specifies the upper-left corner of the drawn text.</param>
            <param name="format">The text string format.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGraphics.DrawString(System.String,ComponentPro.Pdf.Graphics.PdfFont,ComponentPro.Pdf.Graphics.PdfBrush,System.Single,System.Single)">
            <summary>
            Draws the specified text string at the specified location
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">String to draw.</param>
            <param name="font">Font that defines the text format of the string.</param>
            <param name="brush">Brush that determines the color and texture of the drawn text.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGraphics.DrawString(System.String,ComponentPro.Pdf.Graphics.PdfFont,ComponentPro.Pdf.Graphics.PdfPen,System.Drawing.PointF,ComponentPro.Pdf.Graphics.PdfStringFormat)">
            <summary>
            Draws the specified text string at the specified location
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">String to draw.</param>
            <param name="font">Font that defines the text format of the string.</param>
            <param name="pen">Pen that determines the color, width, and style of the path.</param>
            <param name="point">PointF structure that specifies the upper-left corner of the drawn text.</param>
            <param name="format">The text string format.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGraphics.DrawString(System.String,ComponentPro.Pdf.Graphics.PdfFont,ComponentPro.Pdf.Graphics.PdfPen,System.Single,System.Single)">
            <summary>
            Draws the specified text string at the specified location
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">String to draw.</param>
            <param name="font">Font that defines the text format of the string.</param>
            <param name="pen">Pen that determines the color, width, and style of the path.</param>
            <param name="x">The x-coordinate of the upper-left corner of the drawn text.</param>
            <param name="y">The y-coordinate of the upper-left corner of the drawn text.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGraphics.DrawString(System.String,ComponentPro.Pdf.Graphics.PdfFont,ComponentPro.Pdf.Graphics.PdfPen,ComponentPro.Pdf.Graphics.PdfBrush,System.Drawing.PointF)">
            <summary>
            Draws the specified text string at the specified location
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">String to draw.</param>
            <param name="font">Font that defines the text format of the string.</param>
            <param name="pen">Pen that determines the color, width, and style of the path.</param>
            <param name="brush">Brush that determines the color and texture of the drawn text.</param>
            <param name="point">PointF structure that specifies the upper-left corner of the drawn text.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGraphics.DrawString(System.String,ComponentPro.Pdf.Graphics.PdfFont,ComponentPro.Pdf.Graphics.PdfBrush,System.Drawing.RectangleF,ComponentPro.Pdf.Graphics.PdfStringFormat)">
            <summary>
            Draws the specified text string at the specified location and size
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">String to draw.</param>
            <param name="font">Font that defines the text format of the string.</param>
            <param name="brush">Brush that determines the color and texture of the drawn text.</param>
            <param name="layoutRectangle">RectangleF structure that specifies the bounds of the drawn text.</param>
            <param name="format">StringFormat that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGraphics.DrawString(System.String,ComponentPro.Pdf.Graphics.PdfFont,ComponentPro.Pdf.Graphics.PdfPen,System.Drawing.RectangleF,ComponentPro.Pdf.Graphics.PdfStringFormat)">
            <summary>
            Draws the specified text string at the specified location and size
            with the specified Pen and Font objects. 
            </summary>
            <param name="s">String to draw.</param>
            <param name="font">Font that defines the text format of the string.</param>
            <param name="pen">Pen that determines the color, width, and style of the path.</param>
            <param name="layoutRectangle">RectangleF structure that specifies the bounds of the drawn text.</param>
            <param name="format">StringFormat that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGraphics.DrawString(System.String,ComponentPro.Pdf.Graphics.PdfFont,ComponentPro.Pdf.Graphics.PdfBrush,System.Single,System.Single,ComponentPro.Pdf.Graphics.PdfStringFormat)">
            <summary>
            Draws the specified text string at the specified location
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">String to draw.</param>
            <param name="font">Font that defines the text format of the string.</param>
            <param name="brush">Brush that determines the color and texture of the drawn text.</param>
            <param name="x">The x-coordinate of the upper-left corner of the drawn text.</param>
            <param name="y">The y-coordinate of the upper-left corner of the drawn text.</param>
            <param name="format">The text string format.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGraphics.DrawString(System.String,ComponentPro.Pdf.Graphics.PdfFont,ComponentPro.Pdf.Graphics.PdfPen,System.Single,System.Single,ComponentPro.Pdf.Graphics.PdfStringFormat)">
            <summary>
            Draws the specified text string at the specified location
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">String to draw.</param>
            <param name="font">Font that defines the text format of the string..</param>
            <param name="pen">Pen that determines the color, width, and style of the path.</param>
            <param name="x">The x-coordinate of the upper-left corner of the drawn text.</param>
            <param name="y">The y-coordinate of the upper-left corner of the drawn text.</param>
            <param name="format">The text string format.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGraphics.DrawString(System.String,ComponentPro.Pdf.Graphics.PdfFont,ComponentPro.Pdf.Graphics.PdfPen,ComponentPro.Pdf.Graphics.PdfBrush,System.Drawing.PointF,ComponentPro.Pdf.Graphics.PdfStringFormat)">
            <summary>
            Draws the specified text string at the specified location
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">String to draw.</param>
            <param name="font">Font that defines the text format of the string.</param>
            <param name="pen">Pen that determines the color, width, and style of the path.</param>
            <param name="brush">Brush that determines the color and texture of the drawn text.</param>
            <param name="point">PointF structure that specifies the upper-left corner of the drawn text.</param>
            <param name="format">StringFormat that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGraphics.DrawString(System.String,ComponentPro.Pdf.Graphics.PdfFont,ComponentPro.Pdf.Graphics.PdfPen,ComponentPro.Pdf.Graphics.PdfBrush,System.Single,System.Single)">
            <summary>
            Draws the specified text string at the specified location
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">Font that defines the text format of the string.</param>
            <param name="pen">Pen that determines the color, width, and style of the path.</param>
            <param name="brush">Brush that determines the color and texture of the drawn text.</param>
            <param name="x">The x-coordinate of the upper-left corner of the drawn text.</param>
            <param name="y">The y-coordinate of the upper-left corner of the drawn text.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGraphics.DrawString(System.String,ComponentPro.Pdf.Graphics.PdfFont,ComponentPro.Pdf.Graphics.PdfPen,ComponentPro.Pdf.Graphics.PdfBrush,System.Drawing.RectangleF,ComponentPro.Pdf.Graphics.PdfStringFormat)">
            <summary>
            Draws the specified text string at the specified location and size
            with the specified Pen, Brush and Font objects. 
            </summary>
            <param name="s">String to draw.</param>
            <param name="font">Font that defines the text format of the string.</param>
            <param name="pen">Pen that determines the color, width, and style of the path.</param>
            <param name="brush">The brush.</param>
            <param name="layoutRectangle">RectangleF structure that specifies the bounds of the drawn text.</param>
            <param name="format">StringFormat that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGraphics.DrawString(System.String,ComponentPro.Pdf.Graphics.PdfFont,ComponentPro.Pdf.Graphics.PdfPen,ComponentPro.Pdf.Graphics.PdfBrush,System.Single,System.Single,ComponentPro.Pdf.Graphics.PdfStringFormat)">
            <summary>
            Draws the specified text string at the specified location
            with the specified Brush and Font objects. 
            </summary>
            <param name="s">The text string.</param>
            <param name="font">Font that defines the text format of the string.</param>
            <param name="pen">Pen that determines the color, width, and style of the path.</param>
            <param name="brush">Brush that determines the color and texture of the drawn text.</param>
            <param name="x">The x-coordinate of the upper-left corner of the drawn text.</param>
            <param name="y">The y-coordinate of the upper-left corner of the drawn text.</param>
            <param name="format">The text string format.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGraphics.Flush">
            <summary>
            Forces execution of all pending graphics operations and returns immediately without waiting for the operations to finish.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGraphics.OnStructElementChanged(ComponentPro.Pdf.PdfTag)">
            <summary>
            Raise the event on property changed.
            </summary>
            <param name="tag"></param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGraphics.Restore">
            <summary>
            Restores the state of this System.Drawing.Graphics to the state represented by a GraphicsState.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGraphics.Restore(ComponentPro.Pdf.Graphics.PdfGraphicsState)">
            <summary>
            Restores the state of this System.Drawing.Graphics to the state represented by a GraphicsState.
            </summary>
            <param name="state">GraphicsState that represents the state to which to restore this Graphics.</param>
            <remarks>This method works similar to <see cref="M:System.Drawing.Graphics.Restore(System.Drawing.Drawing2D.GraphicsState)" /> method.</remarks>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGraphics.RotateTransform(System.Single)">
            <summary>
            Applies the specified rotation to the transformation matrix of this Graphics.
            </summary>
            <param name="angle">Angle of rotation in degrees.</param>
            <property name="flag" value="Finished" />
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGraphics.Save">
            <summary>
            Saves the current state of this System.Drawing.Graphics and identifies the saved state with a GraphicsState.
            </summary>
            <returns>This method returns a GraphicsState that represents the saved state of this Graphics. </returns>
            <remarks>This method works similar to <see cref="M:System.Drawing.Graphics.Save" /> method.</remarks>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGraphics.ScaleTransform(System.Single,System.Single)">
            <summary>
            Applies the specified scaling operation to the transformation matrix of this System.Drawing.Graphics by prepending it to the object's transformation matrix.
            </summary>
            <param name="scaleX">Scale factor in the x direction.</param>
            <param name="scaleY">Scale factor in the y direction.</param>
            <property name="flag" value="Finished" />
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGraphics.SetClip">
            <summary>
            Sets clip region.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGraphics.SetClip(System.Drawing.RectangleF)">
            <summary>
            Sets the clipping region of this System.Drawing.Graphics to the rectangle specified by a RectangleF structure.
            </summary>
            <param name="rectangle">RectangleF structure that represents the new clip region.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGraphics.SetClip(ComponentPro.Pdf.Graphics.PdfPath)">
            <summary>
            Sets the clipping region of this System.Drawing.Graphics to the result of the specified operation combining the current clip region and the specified PdfPath.
            </summary>
            <param name="path">PdfPath to clip.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGraphics.SetClip(System.Drawing.RectangleF,ComponentPro.Pdf.Graphics.PdfFillMode)">
            <summary>
            Sets the clipping region of this System.Drawing.Graphics to the result of the specified operation combining the current clip region and the rectangle specified by a RectangleF structure.
            </summary>
            <param name="rectangle">RectangleF structure to combine.</param>
            <param name="mode">Member of the PdfFillMode enumeration that specifies the filling operation to use.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGraphics.SetClip(ComponentPro.Pdf.Graphics.PdfPath,ComponentPro.Pdf.Graphics.PdfFillMode)">
            <summary>
            Modifying the current clipping path by intersecting it with the current path.
            </summary>
            <param name="path">PdfPath to fill.</param>
            <param name="mode">Member of the PdfFillMode enumeration that specifies the filling operation to use.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGraphics.SetTransparency(System.Single)">
            <summary>
            Sets the transparency of this System.Drawing.Graphics with the specified value for pen
            </summary>
            <param name="alpha">The alpha value for both pen
            and brush operations.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGraphics.SetTransparency(System.Single,System.Single)">
            <summary>
            Sets the transparency of this System.Drawing.Graphics with the specified value for pen and brush
            </summary>
            <param name="alphaPen">The alpha value for pen operations.</param>
            <param name="alphaBrush">The alpha value for brush operations.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGraphics.SetTransparency(System.Single,System.Single,ComponentPro.Pdf.Graphics.PdfBlendMode)">
            <summary>
            Sets the transparency of this System.Drawing.Graphics with the specified PdfBlendMode
            </summary>
            <param name="alphaPen">The alpha value for pen operations.</param>
            <param name="alphaBrush">The alpha value for brush operations.</param>
            <param name="blendMode">The blend mode.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGraphics.SkewTransform(System.Single,System.Single)">
            <summary>
            Skews the coordinate system axes.
            </summary>
            <param name="angleX">Skews the X axis by this angle (in
            degrees).</param>
            <param name="angleY">Skews the Y axis by this angle (in
            degrees).</param>
            <property name="flag" value="Finished" />
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfGraphics.TranslateTransform(System.Single,System.Single)">
            <summary>
            Changes the origin of the coordinate system by prepending the specified translation to the transformation matrix of this Graphics.
            </summary>
            <param name="offsetX">The x-coordinate of the translation.</param>
            <param name="offsetY">The y-coordinate of the translation.</param>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfGraphics.ClientSize">
            <summary>
            Gets the size of the canvas reduced by margins and page templates.
            </summary>
            <remarks>It indicates a size of the canvas reduced by margins and template dimensions.
            This value doesn't change when any custom clip is set.</remarks>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfGraphics.ColorSpace">
            <summary>
            Gets or sets the current color space of the document
            </summary>
            <remarks>The value change of this property has impact on the objects
            which will be drawn after the change.</remarks>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfGraphics.Size">
            <summary>
            Gets the size of the canvas.
            </summary>
            <remarks>Usually, this value is equal to the size of the object this graphics belongs to.</remarks>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfGraphicsState">
            <summary>
            Represents the state of a Graphics object. This object is returned by a call to the Save methods.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfGraphicsUnit">
            <summary>
            Specifies the types of the page's logical units.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfGraphicsUnit.Centimeter">
            <summary>
            Specifies the Measurement is in centimeters.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfGraphicsUnit.Pica">
            <summary>
            Specifies the Measurement is in picas. A pica represents 12 points.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfGraphicsUnit.Pixel">
            <summary>
            Specifies the unit of measurement is 1 pixel.
            </summary>
            <remarks>Pixel unit is device dependent unit. The result depends on the default Dpi on the machine.</remarks>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfGraphicsUnit.Point">
            <summary>
            Specifies a printer's point (1/72 inch) as the unit of measure. 
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfGraphicsUnit.Inch">
            <summary>
            Specifies the inch as the unit of measure. 
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfGraphicsUnit.Document">
            <summary>
            Specifies the document unit (1/300 inch) as the unit of measure.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfGraphicsUnit.Millimeter">
            <summary>
            Specifies the Measurement is in millimeters.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfGridImagePosition">
            <summary>
            Specifies the alignment type.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfTilingBrush">
            <summary>
            Implements a colored tiling brush.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfTilingBrush.#ctor(System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the <see cref="T:PdfTilingBrush" /> class.
            </summary>
            <param name="rectangle">The boundaries of the smallest brush cell.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfTilingBrush.#ctor(System.Drawing.SizeF)">
            <summary>
            Initializes a new instance of the <see cref="T:PdfTilingBrush" /> class.
            </summary>
            <param name="size">The size of the smallest brush cell.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfTilingBrush.#ctor(System.Drawing.RectangleF,ComponentPro.Pdf.PdfPage)">
            <summary>
            Initializes a new instance of the <see cref="T:PdfTilingBrush" /> class.
            </summary>
            <param name="rectangle">The boundaries of the smallest brush cell.</param>
            <param name="page">The Current Page Object.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfTilingBrush.#ctor(System.Drawing.SizeF,ComponentPro.Pdf.PdfPage)">
            <summary>
            Initializes a new instance of the <see cref="T:PdfTilingBrush" /> class.
            </summary>
            <param name="size">The size of the smallest brush cell.</param>
            <param name="page">The Current Page Object.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfTilingBrush.Clone">
            <summary>
            Creates a new copy of a brush.
            </summary>
            <returns>A new instance of the Brush class.</returns>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfTilingBrush.Graphics">
            <summary>
            Gets Graphics context of the brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfTilingBrush.Rectangle">
            <summary>
            Gets the boundary box of the smallest brush cell.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfTilingBrush.Size">
            <summary>
            Gets the size of the smallest brush cell.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfHorizontalAlignment">
            <summary>
            Specifies the type of Horizontal alignment.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfHorizontalAlignment.Left">
            <summary>
            Specifies the element is aligned to Left.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfHorizontalAlignment.Center">
            <summary>
            Specifies the element is aligned to Center.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfHorizontalAlignment.Right">
            <summary>
            Specifies the element is aligned to Right.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfHtmlElement">
            <summary>
            Represents a HTML text area with the ability to span several pages.
            </summary>
            <remarks>This API is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfHtmlElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfHtmlElement" /> class.
            </summary>
            <remarks>This Constructor is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfHtmlElement.#ctor(System.String,ComponentPro.Pdf.Graphics.PdfFont,ComponentPro.Pdf.Graphics.PdfBrush)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfHtmlElement" /> class with the specified HTML text, font and brush
            </summary>
            <remarks>This Constructor is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
            <param name="htmlText">The HTML text.</param>
            <param name="font">The font.</param>
            <param name="brush">The brush.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfHtmlElement.Draw(ComponentPro.Pdf.Graphics.PdfGraphics,System.Drawing.RectangleF)">
            <summary>
            Draws the text on the graphics.
            </summary>
            <remarks>This method is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
            <param name="page">Graphics context where the text should be drawn</param>
            <param name="layoutRectangle">RectangleF structure that specifies the bounds of the text.</param>       
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfHtmlElement.Draw(ComponentPro.Pdf.PdfPage,System.Drawing.RectangleF,ComponentPro.Pdf.Graphics.PdfMetafileLayoutSettings)">
            <summary>
            Draws the text on the page.
            </summary>
            <remarks>This method is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
            <param name="page">Current page where the text should be drawn.</param>
            <param name="layoutRectangle">RectangleF structure that specifies the bounds of the text.</param>
            <param name="format">Layout format.</param>
            <returns>Layout result.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfHtmlElement.Draw(ComponentPro.Pdf.PdfPage,System.Drawing.PointF,System.Single,ComponentPro.Pdf.Graphics.PdfMetafileLayoutSettings)">
            <summary>
            Draws the text on the page.
            </summary>
            <remarks>This method is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
            <param name="page">Current page where the text should be drawn.</param>
            <param name="location">Start location on the page.</param>
            <param name="width">Width of the text bounds.</param>
            <param name="format">Layout format.</param>
            <returns>Lay outing result.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfHtmlElement.Draw(ComponentPro.Pdf.Graphics.PdfGraphics,System.Drawing.PointF,System.Single,System.Single)">
            <summary>
            Draws the text on the graphics.
            </summary>
            <remarks>This method is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
            <param name="page">Graphics context where the text should be drawn.</param>
            <param name="location">Start location on the page.</param>
            <param name="width">Width of the text bounds.</param>
            <param name="height">Height of the text bounds.</param>      
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfHtmlElement.Draw(ComponentPro.Pdf.PdfPage,System.Drawing.PointF,System.Single,System.Single,ComponentPro.Pdf.Graphics.PdfMetafileLayoutSettings)">
            <summary>
            Draws the text on the page.
            </summary>
            <remarks>This method is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
            <param name="page">Current page where the text should be drawn.</param>
            <param name="location">Start location on the page.</param>
            <param name="width">Width of the text bounds.</param>
            <param name="height">Height of the text bounds.</param>
            <param name="format">Lay outing format.</param>
            <returns>Lay outing result.</returns>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfHtmlElement.Brush">
            <summary>
            Gets or sets the brush for the text element.
            </summary>
            <remarks>This property is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfHtmlElement.Font">
            <summary>
            Gets or sets the base font for the text element.
            </summary>
            <remarks>This property is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfHtmlElement.HTMLText">
            <summary>
            Gets or sets the HTML Text.
            </summary>
            <remarks>This property is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfHtmlElement.TextAlign">
            <summary>
            Gets or sets the text alignment.
            </summary>
            <remarks>This property is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
        </member>
        <member name="E:ComponentPro.Pdf.Graphics.PdfHtmlElement.BeforePageLayout">
            <summary>
            Event. Raises before the element should be printed on the page.
            </summary>
        </member>
        <member name="E:ComponentPro.Pdf.Graphics.PdfHtmlElement.AfterPageLayout">
            <summary>
            Event. Raises after the element was printed on the page.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfImageMask">
            <summary>
            Represents the image mask object for bitmap images.
            </summary>
            <remarks>This API is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfImageMask.#ctor(ComponentPro.Pdf.Graphics.PdfBitmap)">
            <summary>
            Initializes a new instance of the PdfImageMask class from the specified <see cref="T:ComponentPro.Pdf.Graphics.PdfBitmap" />
            </summary>
            <remarks>This property is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
            <param name="imageMask">The PdfBitmap which represents the image</param>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfImageMask.Mask">
            <summary>
            Gets the image mask for the bitmap (Read only).
            </summary>
            <remarks>This property is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
            <value>The <see cref="T:ComponentPro.Pdf.Graphics.PdfBitmap" /> represents the image mask.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfImageMask.SoftMask">
            <summary>
            Gets the mask type for the bitmap (Read only).
            </summary>
            <remarks>This property is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
            <value><c>true</c> if soft mask; otherwise, hard mask <c>false</c>.</value>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfImageType">
            <summary>
            Specifies the type of the PdfImage.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfImageType.Bitmap">
            <summary>
            Specifies the image is bitmap.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfImageType.Metafile">
            <summary>
            Specifies the image is metafile.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfLayoutBreakType">
            <summary>
            Specifies how the element should be contained on the page.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfLayoutBreakType.FitPage">
            <summary>
            Fit the element according to the bounds specified or the page bounds.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfLayoutBreakType.FitElement">
            <summary>
            If the element doesn't fit at the first page, don't draw it on this page.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfLayoutBreakType.FitColumnsToPage">
            <summary>
            Fit the columns withtin the page.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfLayoutParams">
            <summary>
            Represents the layouting parameters.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfLayoutParams.Bounds">
            <summary>
            Gets or sets layouting bounds for the element.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfLayoutParams.Format">
            <summary>
            Gets or sets layouting settings for the element.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfLayoutParams.Page">
            <summary>
            Gets or sets the layouting page for the element.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfLayoutResult">
            <summary>
            Represents the layouting result format.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfLayoutResult.Bounds">
            <summary>
            Gets the bounds of the element on the last page where it was drawn.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfLayoutResult.Page">
            <summary>
            Gets the last page where the element was drawn.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfLayoutSettings">
            <summary>
            Represents a layouting format
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfLayoutSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:PdfLayoutSettings" /> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfLayoutSettings.#ctor(ComponentPro.Pdf.Graphics.PdfLayoutSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:PdfLayoutSettings" /> class from the specified layout format
            </summary>
            <param name="baseFormat">The base format.</param>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfLayoutSettings.Break">
            <summary>
            Gets or sets break type of the element.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfLayoutSettings.Layout">
            <summary>
            Gets or sets layout type of the element.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfLayoutSettings.PaginateBounds">
            <summary>
            Gets or sets the bounds on the next page.
            </summary>
            <remarks>If this property is set, the element will use it for the layouting on the next pages,
            otherwise, the element will be layout according to the bounds, used on the first page.</remarks>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfLayoutType">
            <summary>
            Specifies type of paginating.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfLayoutType.Paginate">
            <summary>
            If the element exceeds the page, proceed it on the next page.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfLayoutType.OnePage">
            <summary>
            Draw the element on the one page only.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfLine">
            <summary>
            Represents a line shape.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfLine.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfLine" /> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfLine.#ctor(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfLine" /> class.
            </summary>
            <param name="point1">The point1.</param>
            <param name="point2">The point2.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfLine.#ctor(ComponentPro.Pdf.Graphics.PdfPen,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfLine" /> class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="point1">The point1.</param>
            <param name="point2">The point2.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfLine.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfLine" /> class from the specified two pair fo coordinates.
            </summary>
            <param name="x1">The x-coordinate of the first point.</param>
            <param name="y1">The y1.</param>
            <param name="x2">The x2.</param>
            <param name="y2">The y2.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfLine.#ctor(ComponentPro.Pdf.Graphics.PdfPen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfLine" /> class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="x1">The x1.</param>
            <param name="y1">The y1.</param>
            <param name="x2">The x2.</param>
            <param name="y2">The y2.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfLine.DrawInternal(ComponentPro.Pdf.Graphics.PdfGraphics)">
            <summary>
            Draws an element on the Graphics.
            </summary>
            <param name="graphics">Graphics context where the element should be printed.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfLine.GetBoundsInternal">
            <summary>
            Overloaded. Returns a rectangle that bounds this element.
            </summary>
            <returns>Returns a rectangle that bounds this element.</returns>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfLine.X1">
            <summary>
            Gets or sets the x coordinate of the start point.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfLine.X2">
            <summary>
            Gets or sets the x coordinate of the end point.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfLine.Y1">
            <summary>
            Gets or sets the y coordinate of the start point.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfLine.Y2">
            <summary>
            Gets or sets the y coordinate of the end point.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfLinearGradientBrush">
            <summary>
            Implements linear gradient brush by using PDF axial shading pattern.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfLinearGradientBrush.#ctor(System.Drawing.PointF,System.Drawing.PointF,ComponentPro.Pdf.Graphics.PdfColor,ComponentPro.Pdf.Graphics.PdfColor)">
            <summary>
            Initializes a new instance of the <see cref="T:PdfLinearGradientBrush" /> class.
            </summary>
            <param name="point1">The starting point of the gradient.</param>
            <param name="point2">The end point of the gradient.</param>
            <param name="color1">The starting color of the gradient.</param>
            <param name="color2">The end color of the gradient.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfLinearGradientBrush.#ctor(System.Drawing.RectangleF,ComponentPro.Pdf.Graphics.PdfColor,ComponentPro.Pdf.Graphics.PdfColor,ComponentPro.Pdf.Graphics.PdfLinearGradientMode)">
            <summary>
            Initializes a new instance of the <see cref="T:PdfLinearGradientBrush" /> class.
            </summary>
            <param name="rect">A RectangleF structure that specifies the bounds of the linear gradient. </param>
            <param name="color1">The starting color for the gradient.</param>
            <param name="color2">The ending color for the gradient.</param>
            <param name="mode">The mode.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfLinearGradientBrush.#ctor(System.Drawing.RectangleF,ComponentPro.Pdf.Graphics.PdfColor,ComponentPro.Pdf.Graphics.PdfColor,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:PdfLinearGradientBrush" /> class.
            </summary>
            <param name="rect">A RectangleF structure that specifies the bounds of the linear gradient.</param>
            <param name="color1">The starting color for the gradient.</param>
            <param name="color2">The ending color for the gradient.</param>
            <param name="angle">The angle, measured in degrees clockwise from the x-axis,
            of the gradient's orientation line.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfLinearGradientBrush.Clone">
            <summary>
            Creates a new copy of a brush.
            </summary>
            <returns>A new instance of the Brush class.</returns>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfLinearGradientBrush.Blend">
            <summary>
            Gets or sets a PdfBlend that specifies positions
            and factors that define a custom falloff for the gradient.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfLinearGradientBrush.Extend">
            <summary>
            Gets or sets the value indicating whether the gradient
            should extend starting and ending points.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfLinearGradientBrush.InterpolationColors">
            <summary>
            Gets or sets a ColorBlend that defines a multicolor linear gradient.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfLinearGradientBrush.LinearColors">
            <summary>
            Gets or sets the starting and ending colors of the gradient.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfLinearGradientBrush.Rectangle">
            <summary>
            Gets a rectangular region that defines
            the boundaries of the gradient.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfLinearGradientMode">
            <summary>
            Specifies the gradient direction of the linear gradient brush.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfLinearGradientMode.BackwardDiagonal">
            <summary>
            Specifies a gradient from upper right to lower left.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfLinearGradientMode.ForwardDiagonal">
            <summary>
            Specifies a gradient from upper left to lower right.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfLinearGradientMode.Horizontal">
            <summary>
            Specifies a gradient from left to right.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfLinearGradientMode.Vertical">
            <summary>
            Specifies a gradient from top to bottom.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfLineCap">
            <summary>
                        Specifies the line cap style to be used at the ends of the lines.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfLineCap.Flat">
            <summary>
            The stroke is squared off at the endpoint of the path. There is no
            projection beyond the end of the path.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfLineCap.Round">
            <summary>
            A semicircular arc with a diameter equal to the line width is
            drawn around the endpoint and filled in.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfLineCap.Square">
            <summary>
             The stroke continues beyond the endpoint of the path
            for a distance equal to half the line width and is squared off.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfLineJoin">
            <summary>
            Specifies the corner style of the shapes.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfLineJoin.Miter">
            <summary>
            The outer edges for the two segments are extended
            until they meet at an angle.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfLineJoin.Round">
            <summary>
            An arc of a circle with a diameter equal to the line width is drawn
            around the point where the two segments meet, connecting the outer edges for the two segments.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfLineJoin.Bevel">
            <summary>
            The two segments are finished with caps
            and the resulting notch beyond the ends of the segments is filled
            with a triangle.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfMargins">
            <summary>
            A class representing PDF page margins.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfMargins.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:PdfMargins" /> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfMargins.Clone">
            <summary>
            Clones the object.
            </summary>
            <returns>The cloned object.</returns>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfMargins.All">
            <summary>
            Sets margin of each side of the page
            </summary>
            <value>Margin of each side.</value>
            <remarks>Default value: 40 pixels</remarks>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfMargins.Bottom">
            <summary>
            Gets or sets the bottom margin size.
            </summary>
            <remarks>Default value: 40 pixels</remarks>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfMargins.Left">
            <summary>
            Gets or sets the left margin size.
            </summary>
            <remarks>Default value: 40 pixels</remarks>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfMargins.Right">
            <summary>
            Gets or sets the right margin size.
            </summary>
            <remarks>Default value: 40 pixels</remarks>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfMargins.Top">
            <summary>
            Gets or sets the top margin size.
            </summary>
            <remarks>Default value: 40 pixels</remarks>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfMetafile">
            <summary>
            Class representing metafile image
            </summary>
            <remarks>This API is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfMetafile.#ctor(System.Drawing.Imaging.Metafile)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfMetafile" /> class with <see cref="T:System.Drawing.Imaging.Metafile" />
            </summary>
            <remarks>This constructor is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
            <param name="metafile">The metafile.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfMetafile.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfMetafile" /> class with metafile path
            </summary>
            <remarks>This constructor is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
            <param name="path">The metafile path.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfMetafile.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfMetafile" /> class from stream of the metafile
            </summary>
            <remarks>This API is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfMetafile.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing,
            releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfMetafile.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:ComponentPro.Pdf.Graphics.PdfMetafile" /> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfMetafile.Layout(ComponentPro.Pdf.Graphics.PdfLayoutParams)">
            <summary>
            Layouts the element.
            </summary>
            <param name="param">Layout parameters.</param>
            <returns>Returns lay outing results.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfMetafile.Layout(ComponentPro.Pdf.HtmlToPdf.HtmlToPdfLayoutParams)">
            <summary>
            Layouts the HtmlToPdf element.
            </summary>
            <param name="param">Layout parameters.</param>
            <returns>Returns lay outing results.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfMetafile.SetTransparency(System.Single,System.Single,ComponentPro.Pdf.Graphics.PdfBlendMode,System.Boolean)">
            <summary>
            Sets the transparency.
            </summary>
            <remarks>This API is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
            <param name="alphaPen">The alpha value for pen operations.</param>
            <param name="alphaBrush">The alpha value for brush operations.</param>
            <param name="blendMode">The blend mode.</param>
            <param name="transparency">Transparency is applied or not.</param>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfMetafile.ImageResolution">
            <summary>
            Gets or sets the resolution of the image
            </summary>
            <remarks>This property is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfMetafile.PageScale">
            <summary>
            Gets or sets the page scale.
            </summary>
            <remarks>This property is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
            <value>The page scale.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfMetafile.PageUnit">
            <summary>
            Gets or sets the page graphics unit.
            </summary>
            <remarks>This property is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
            <value>The page unit.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfMetafile.Quality">
            <summary>
            Gets or sets the quality of the image.
            </summary>
            <remarks>When the image is stored into PDF not as a mask,
            you may reduce its quality, which saves the disk space.</remarks>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfMetafileLayoutSettings">
            <summary>
            Represents the Class which defines metafile lay outing settings.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfMetafileLayoutSettings.SplitImages">
            <summary>
            Gets or sets a value indicating whether [split images].
            </summary>
            <value><c>true</c> if [split images]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfMetafileLayoutSettings.SplitTextLines">
            <summary>
            Gets or sets a value indicating whether [split text lines].
            </summary>
            <value><c>true</c> if [split text lines]; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfPath">
            <summary>
            Implements graphics path, which is a sequence of primitive graphics elements.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfPath.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfPath" /> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfPath.#ctor(ComponentPro.Pdf.Graphics.PdfPen)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfPath" /> class.
            </summary>
            <param name="pen">The pen.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfPath.#ctor(ComponentPro.Pdf.Graphics.PdfBrush)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfPath" /> class.
            </summary>
            <param name="brush">The brush.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfPath.#ctor(System.Drawing.PointF[],System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfPath" /> class.
            </summary>
            <param name="points">The points.</param>
            <param name="pathTypes">The path types.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfPath.#ctor(ComponentPro.Pdf.Graphics.PdfBrush,ComponentPro.Pdf.Graphics.PdfFillMode)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfPath" /> class.
            </summary>
            <param name="brush">The brush.</param>
            <param name="fillMode">The fill mode.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfPath.#ctor(ComponentPro.Pdf.Graphics.PdfPen,System.Drawing.PointF[],System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfPath" /> class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="points">The points.</param>
            <param name="pathTypes">The path types.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfPath.#ctor(ComponentPro.Pdf.Graphics.PdfPen,ComponentPro.Pdf.Graphics.PdfBrush,ComponentPro.Pdf.Graphics.PdfFillMode)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfPath" /> class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="fillMode">The fill mode.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfPath.#ctor(ComponentPro.Pdf.Graphics.PdfBrush,ComponentPro.Pdf.Graphics.PdfFillMode,System.Drawing.PointF[],System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfPath" /> class.
            </summary>
            <param name="brush">The brush.</param>
            <param name="fillMode">The fill mode.</param>
            <param name="points">The points.</param>
            <param name="pathTypes">The path types.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
            Adds an arc.
            </summary>
            <param name="rectangle">The boundaries of the arc.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Adds an arc.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfPath.AddBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Adds a bezier curve.
            </summary>
            <param name="startPoint">The start point.</param>
            <param name="firstControlPoint">The first control point.</param>
            <param name="secondControlPoint">The second control point.</param>
            <param name="endPoint">The end point.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Adds a bezier curve.
            </summary>
            <param name="startPointX">The start point X.</param>
            <param name="startPointY">The start point Y.</param>
            <param name="firstControlPointX">The first control point X.</param>
            <param name="firstControlPointY">The first control point Y.</param>
            <param name="secondControlPointX">The second control point X.</param>
            <param name="secondControlPointY">The second control point Y.</param>
            <param name="endPointX">The end point X.</param>
            <param name="endPointY">The end point Y.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfPath.AddEllipse(System.Drawing.RectangleF)">
            <summary>
            Adds an ellipse.
            </summary>
            <param name="rectangle">The boundaries of the ellipse.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfPath.AddEllipse(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Adds an ellipse.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfPath.AddLine(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Adds a line.
            </summary>
            <param name="point1">The point1.</param>
            <param name="point2">The point2.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfPath.AddLine(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Adds a line.
            </summary>
            <param name="x1">The x1.</param>
            <param name="y1">The y1.</param>
            <param name="x2">The x2.</param>
            <param name="y2">The y2.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfPath.AddPath(ComponentPro.Pdf.Graphics.PdfPath)">
            <summary>
            Appends the path specified to this one.
            </summary>
            <param name="path">The path, which should be appended.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfPath.AddPath(System.Drawing.PointF[],System.Byte[])">
            <summary>
            Appends the path specified by the points and their types to this one.
            </summary>
            <param name="pathPoints">The points.</param>
            <param name="pathTypes">The path point types.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfPath.AddPie(System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
            Appends the pie to this path.
            </summary>
            <param name="rectangle">The rectangle.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Appends the pie to this path.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfPath.AddPolygon(System.Drawing.PointF[])">
            <summary>
            Append the closed polygon to this path.
            </summary>
            <param name="points">The points of the polygon.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfPath.AddRectangle(System.Drawing.RectangleF)">
            <summary>
            Appends the rectangle to this path.
            </summary>
            <param name="rectangle">The rectangle.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfPath.AddRectangle(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Appends the rectangle to this path.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfPath.CloseAllFigures">
            <summary>
            Closes all non-closed figures.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfPath.CloseFigure">
            <summary>
            Closes the last figure.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfPath.DrawInternal(ComponentPro.Pdf.Graphics.PdfGraphics)">
            <summary>
            Draws an element on the Graphics.
            </summary>
            <param name="graphics">Graphics context where the element should be printed.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfPath.GetBoundsInternal">
            <summary>
            Overloaded. Returns a rectangle that bounds this element.
            </summary>
            <returns>Returns a rectangle that bounds this element.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfPath.GetLastPoint">
            <summary>
            Gets the last point.
            </summary>
            <returns>The last point.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfPath.StartFigure">
            <summary>
            Starts a new figure.
            </summary>
            <remarks>The next added primitive will start a new figure.</remarks>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPath.FillMode">
            <summary>
            Gets or sets the fill mode.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPath.LastPoint">
            <summary>
            Gets the last point.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPath.PathPoints">
            <summary>
            Gets the path points.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPath.PathTypes">
            <summary>
            Gets the path point types.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPath.PointCount">
            <summary>
            Gets the point count.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfPen">
            <summary>
            A class defining settings for drawing operations, that determines the color, width, and style of the drawing elements.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfPen.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:PdfPen" /> class.
            </summary>
            <remarks>Doesn't change current colour.</remarks>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfPen.#ctor(ComponentPro.Pdf.Graphics.PdfColor)">
            <summary>
            Initializes a new instance of the <see cref="T:PdfPen" /> class.
            </summary>
            <param name="color">The color.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfPen.#ctor(System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:PdfPen" /> class.
            </summary>
            <param name="color">The system color.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfPen.#ctor(ComponentPro.Pdf.Graphics.PdfBrush)">
            <summary>
            Initializes a new instance of the <see cref="T:PdfPen" /> class with <see cref="T:ComponentPro.Pdf.Graphics.PdfBrush" />
            </summary>
            <param name="brush">The <see cref="T:ComponentPro.Pdf.Graphics.PdfBrush" /> provides color and texture to the pen.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfPen.#ctor(ComponentPro.Pdf.Graphics.ColorSpaces.PdfExtendedColor)">
            <summary>
            Initializes a new instance of the <see cref="T:PdfPen" /> class with color.
            </summary>
            <param name="color">The <see cref="T:ComponentPro.Pdf.Graphics.PdfColor" /> provides color to the pen.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfPen.#ctor(ComponentPro.Pdf.Graphics.PdfColor,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:PdfPen" /> class with color and width of the pen
            </summary>
            <param name="color">The <see cref="T:ComponentPro.Pdf.Graphics.PdfColor" /> provides color to the pen.</param>
            <param name="width">Width of the pen's line.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfPen.#ctor(System.Drawing.Color,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:PdfPen" /> class with color and width of the pen
            </summary>
            <param name="color">The <see cref="P:ComponentPro.Pdf.Graphics.PdfPen.Color" /> provides color to the pen.</param>
            <param name="width">Width of the pen's line.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfPen.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>A new pen with the same properties.</returns>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPen.Brush">
            <summary>
            Gets or sets the brush, which specifies the pen behavior.
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.Graphics.PdfBrush" /> that determines the color and texture</value>
            <remarks>If the brush is set, the color values are ignored,
            except for PdfSolidBrush.</remarks>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPen.Color">
            <summary>
            Gets or sets the color of the pen.
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.Graphics.PdfColor" /> provide the color to pen</value>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPen.DashOffset">
            <summary>
            Gets or sets the dash offset of the pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPen.DashPattern">
            <summary>
            Gets or sets the dash pattern of the pen.
            </summary>
            <remarks>we can't set the Dash pattern for solid dash style </remarks>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPen.DashStyle">
            <summary>
            Gets or sets the dash style of the pen.
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.Graphics.PdfDashStyle" /> provides the various dash styles</value>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPen.LineCap">
            <summary>
            Gets or sets the line cap of the pen.
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.Graphics.PdfLineCap" /> gives various line cap options</value>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPen.LineJoin">
            <summary>
            Gets or sets the line join style of the pen.
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.Graphics.PdfLineJoin" /> provides various line join options.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPen.MiterLimit">
            <summary>
            Gets or sets the miter limit.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPen.Width">
            <summary>
            Gets or sets the width of the pen.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfPens">
            <summary>
            The collection of the default pens.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.AliceBlue">
            <summary>
            Gets the AliceBlue pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.AntiqueWhite">
            <summary>
            Gets the antique white pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.Aqua">
            <summary>
            Gets the Aqua default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.Aquamarine">
            <summary>
            Gets the Aquamarine default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.Azure">
            <summary>
            Gets the Azure default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.Beige">
            <summary>
            Gets the Beige default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.Bisque">
            <summary>
            Gets the Bisque default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.Black">
            <summary>
            Gets the Black default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.BlanchedAlmond">
            <summary>
            Gets the BlanchedAlmond default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.Blue">
            <summary>
            Gets the Blue default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.BlueViolet">
            <summary>
            Gets the BlueViolet default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.Brown">
            <summary>
            Gets the Brown default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.BurlyWood">
            <summary>
            Gets the BurlyWood default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.CadetBlue">
            <summary>
            Gets the CadetBlue default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.Chartreuse">
            <summary>
            Gets the Chartreuse default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.Chocolate">
            <summary>
            Gets the Chocolate default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.Coral">
            <summary>
            Gets the Coral default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.CornflowerBlue">
            <summary>
            Gets the CornflowerBlue default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.Cornsilk">
            <summary>
            Gets the Corn silk default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.Crimson">
            <summary>
            Gets the Crimson default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.Cyan">
            <summary>
            Gets the Cyan default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.DarkBlue">
            <summary>
            Gets the DarkBlue default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.DarkCyan">
            <summary>
            Gets the DarkCyan default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.DarkGoldenrod">
            <summary>
            Gets the DarkGoldenrod default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.DarkGray">
            <summary>
            Gets the DarkGray default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.DarkGreen">
            <summary>
            Gets the DarkGreen default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.DarkKhaki">
            <summary>
            Gets the DarkKhaki default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.DarkMagenta">
            <summary>
            Gets the DarkMagenta default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.DarkOliveGreen">
            <summary>
            Gets the DarkOliveGreen default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.DarkOrange">
            <summary>
            Gets the DarkOrange default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.DarkOrchid">
            <summary>
            Gets the DarkOrchid default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.DarkRed">
            <summary>
            Gets the DarkRed default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.DarkSalmon">
            <summary>
            Gets the DarkSalmon default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.DarkSeaGreen">
            <summary>
            Gets the DarkSeaGreen default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.DarkSlateBlue">
            <summary>
            Gets the DarkSlateBlue default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.DarkSlateGray">
            <summary>
            Gets the DarkSlateGray default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.DarkTurquoise">
            <summary>
            Gets the DarkTurquoise default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.DarkViolet">
            <summary>
            Gets the DarkViolet default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.DeepPink">
            <summary>
            Gets the DeepPink default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.DeepSkyBlue">
            <summary>
            Gets the DeepSkyBlue default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.DimGray">
            <summary>
            Gets the DimGray default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.DodgerBlue">
            <summary>
            Gets the DodgerBlue default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.Firebrick">
            <summary>
            Gets the Firebrick default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.FloralWhite">
            <summary>
            Gets the FloralWhite default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.ForestGreen">
            <summary>
            Gets the ForestGreen default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.Fuchsia">
            <summary>
            Gets the Fuchsia default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.Gainsboro">
            <summary>
            Gets the Gainsborough default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.GhostWhite">
            <summary>
            Gets the GhostWhite default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.Gold">
            <summary>
            Gets the Gold default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.Goldenrod">
            <summary>
            Gets the Goldenrod default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.Gray">
            <summary>
            Gets the Gray default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.Green">
            <summary>
            Gets the Green default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.GreenYellow">
            <summary>
            Gets the GreenYellow default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.Honeydew">
            <summary>
            Gets the Honeydew default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.HotPink">
            <summary>
            Gets the HotPink default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.IndianRed">
            <summary>
            Gets the IndianRed default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.Indigo">
            <summary>
            Gets the Indigo default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.Ivory">
            <summary>
            Gets the Ivory default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.Khaki">
            <summary>
            Gets the Khaki default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.Lavender">
            <summary>
            Gets the Lavender default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.LavenderBlush">
            <summary>
            Gets the LavenderBlush default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.LawnGreen">
            <summary>
            Gets the LawnGreen default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.LemonChiffon">
            <summary>
            Gets the LemonChiffon default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.LightBlue">
            <summary>
            Gets the LightBlue default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.LightCoral">
            <summary>
            Gets the LightCoral default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.LightCyan">
            <summary>
            Gets the LightCyan default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.LightGoldenrodYellow">
            <summary>
            Gets the LightGoldenrodYellow default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.LightGray">
            <summary>
            Gets the LightGray default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.LightGreen">
            <summary>
            Gets the LightGreen default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.LightPink">
            <summary>
            Gets the LightPink default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.LightSalmon">
            <summary>
            Gets the LightSalmon default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.LightSeaGreen">
            <summary>
            Gets the LightSeaGreen default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.LightSkyBlue">
            <summary>
            Gets the LightSkyBlue default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.LightSlateGray">
            <summary>
            Gets the LightSlateGray default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.LightSteelBlue">
            <summary>
            Gets the LightSteelBlue default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.LightYellow">
            <summary>
            Gets the LightYellow default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.Lime">
            <summary>
            Gets the Lime default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.LimeGreen">
            <summary>
            Gets the LimeGreen default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.Linen">
            <summary>
            Gets the Linen default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.Magenta">
            <summary>
            Gets the Magenta default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.Maroon">
            <summary>
            Gets the Maroon default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.MediumAquamarine">
            <summary>
            Gets the MediumAquamarine default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.MediumBlue">
            <summary>
            Gets the MediumBlue default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.MediumOrchid">
            <summary>
            Gets the MediumOrchid default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.MediumPurple">
            <summary>
            Gets the MediumPurple default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.MediumSeaGreen">
            <summary>
            Gets the MediumSeaGreen default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.MediumSlateBlue">
            <summary>
            Gets the MediumSlateBlue default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.MediumSpringGreen">
            <summary>
            Gets the MediumSpringGreen default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.MediumTurquoise">
            <summary>
            Gets the MediumTurquoise default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.MediumVioletRed">
            <summary>
            Gets the MediumVioletRed default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.MidnightBlue">
            <summary>
            Gets the MidnightBlue default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.MintCream">
            <summary>
            Gets the MintCream default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.MistyRose">
            <summary>
            Gets the MistyRose default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.Moccasin">
            <summary>
            Gets the Moccasin default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.NavajoWhite">
            <summary>
            Gets the NavajoWhite default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.Navy">
            <summary>
            Gets the Navy default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.OldLace">
            <summary>
            Gets the OldLace default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.Olive">
            <summary>
            Gets the Olive default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.OliveDrab">
            <summary>
            Gets the OliveDrab default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.Orange">
            <summary>
            Gets the Orange default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.OrangeRed">
            <summary>
            Gets the OrangeRed default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.Orchid">
            <summary>
            Gets the Orchid default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.PaleGoldenrod">
            <summary>
            Gets the PaleGoldenrod default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.PaleGreen">
            <summary>
            Gets the PaleGreen default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.PaleTurquoise">
            <summary>
            Gets the PaleTurquoise default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.PaleVioletRed">
            <summary>
            Gets the PaleVioletRed default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.PapayaWhip">
            <summary>
            Gets the PapayaWhip default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.PeachPuff">
            <summary>
            Gets the PeachPuff default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.Peru">
            <summary>
            Gets the Peru default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.Pink">
            <summary>
            Gets the Pink default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.Plum">
            <summary>
            Gets the Plum default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.PowderBlue">
            <summary>
            Gets the PowderBlue default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.Purple">
            <summary>
            Gets the Purple default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.Red">
            <summary>
            Gets the Red default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.RosyBrown">
            <summary>
            Gets the RosyBrown default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.RoyalBlue">
            <summary>
            Gets the RoyalBlue default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.SaddleBrown">
            <summary>
            Gets the SaddleBrown default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.Salmon">
            <summary>
            Gets the Salmon default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.SandyBrown">
            <summary>
            Gets the SandyBrown default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.SeaGreen">
            <summary>
            Gets the SeaGreen default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.SeaShell">
            <summary>
            Gets the SeaShell default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.Sienna">
            <summary>
            Gets the Sienna default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.Silver">
            <summary>
            Gets the Silver default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.SkyBlue">
            <summary>
            Gets the SkyBlue default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.SlateBlue">
            <summary>
            Gets the SlateBlue default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.SlateGray">
            <summary>
            Gets the SlateGray default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.Snow">
            <summary>
            Gets the Snow default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.SpringGreen">
            <summary>
            Gets the SpringGreen default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.SteelBlue">
            <summary>
            Gets the SteelBlue default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.Tan">
            <summary>
            Gets the Tan default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.Teal">
            <summary>
            Gets the Teal default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.Thistle">
            <summary>
            Gets the Thistle default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.Tomato">
            <summary>
            Gets the Tomato default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.Transparent">
            <summary>
            Gets the Transparent default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.Turquoise">
            <summary>
            Gets the Turquoise default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.Violet">
            <summary>
            Gets the Violet default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.Wheat">
            <summary>
            Gets the Wheat default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.White">
            <summary>
            Gets the White default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.WhiteSmoke">
            <summary>
            Gets the WhiteSmoke default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.Yellow">
            <summary>
            Gets the Yellow default pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPens.YellowGreen">
            <summary>
            Gets the YellowGreen default pen.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfPie">
            <summary>
            Represents a pie shape.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfPie.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfPie" /> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfPie.#ctor(System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfPie" /> class.
            </summary>
            <param name="rectangle">The rectangle.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfPie.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfPie" /> class.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfPie.#ctor(ComponentPro.Pdf.Graphics.PdfPen,System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfPie" /> class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="rectangle">The rectangle.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfPie.#ctor(ComponentPro.Pdf.Graphics.PdfBrush,System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfPie" /> class.
            </summary>
            <param name="brush">The brush.</param>
            <param name="rectangle">The rectangle.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfPie.#ctor(ComponentPro.Pdf.Graphics.PdfPen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfPie" /> class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfPie.#ctor(ComponentPro.Pdf.Graphics.PdfBrush,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfPie" /> class.
            </summary>
            <param name="brush">The brush.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfPie.#ctor(ComponentPro.Pdf.Graphics.PdfPen,ComponentPro.Pdf.Graphics.PdfBrush,System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfPie" /> class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="rectangle">The rectangle.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfPie.#ctor(ComponentPro.Pdf.Graphics.PdfPen,ComponentPro.Pdf.Graphics.PdfBrush,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfPie" /> class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfPie.#ctor(ComponentPro.Pdf.Graphics.PdfPen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfPie" /> class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfPie.#ctor(ComponentPro.Pdf.Graphics.PdfBrush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfPie" /> class.
            </summary>
            <param name="brush">The brush.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfPie.#ctor(ComponentPro.Pdf.Graphics.PdfPen,ComponentPro.Pdf.Graphics.PdfBrush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfPie" /> class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfPie.DrawInternal(ComponentPro.Pdf.Graphics.PdfGraphics)">
            <summary>
            Draws an element on the Graphics.
            </summary>
            <param name="graphics">Graphics context where the element should be printed.</param>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfPolygon">
            <summary>
            Represents a set of points connected with lines, could be drawn and filled.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfPolygon.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfPolygon" /> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfPolygon.#ctor(System.Drawing.PointF[])">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfPolygon" /> class.
            </summary>
            <param name="points">The points.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfPolygon.#ctor(ComponentPro.Pdf.Graphics.PdfPen,System.Drawing.PointF[])">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfPolygon" /> class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="points">The points.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfPolygon.#ctor(ComponentPro.Pdf.Graphics.PdfBrush,System.Drawing.PointF[])">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfPolygon" /> class.
            </summary>
            <param name="brush">The brush.</param>
            <param name="points">The points.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfPolygon.#ctor(ComponentPro.Pdf.Graphics.PdfPen,ComponentPro.Pdf.Graphics.PdfBrush,System.Drawing.PointF[])">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfPolygon" /> class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="points">The points.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfPolygon.AddPoint(System.Drawing.PointF)">
            <summary>
            Adds a point to the polygon.
            </summary>
            <param name="point">The last point of the polygon.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfPolygon.DrawInternal(ComponentPro.Pdf.Graphics.PdfGraphics)">
            <summary>
            Draws an element on the Graphics.
            </summary>
            <param name="graphics">Graphics context where the element should be printed.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfPolygon.GetBoundsInternal">
            <summary>
            Overloaded. Returns a rectangle that bounds this element.
            </summary>
            <returns>Returns a rectangle that bounds this element.</returns>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPolygon.Count">
            <summary>
            Gets a number of the points in the polygon.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfPolygon.Points">
            <summary>
            Gets or sets the points of the polygon.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfRadialGradientBrush">
            <summary>
            Represent radial gradient brush.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfRadialGradientBrush.#ctor(System.Drawing.PointF,System.Single,System.Drawing.PointF,System.Single,ComponentPro.Pdf.Graphics.PdfColor,ComponentPro.Pdf.Graphics.PdfColor)">
            <summary>
            Initializes a new instance of the <see cref="T:PdfRadialGradientBrush" /> class.
            </summary>
            <param name="centreStart">The start centre.</param>
            <param name="radiusStart">The start radius.</param>
            <param name="centreEnd">The end centre.</param>
            <param name="radiusEnd">The end radius.</param>
            <param name="colorStart">The start color.</param>
            <param name="colorEnd">The end color.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfRadialGradientBrush.Clone">
            <summary>
            Creates a new copy of a brush.
            </summary>
            <returns>A new instance of the Brush class.</returns>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfRadialGradientBrush.Blend">
            <summary>
            Gets or sets a PdfBlend that specifies positions
            and factors that define a custom falloff for the gradient.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfRadialGradientBrush.Extend">
            <summary>
            Gets or sets the value indicating whether the gradient
            should extend starting and ending points.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfRadialGradientBrush.InterpolationColors">
            <summary>
            Gets or sets a ColorBlend that defines a multicolor linear gradient.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfRadialGradientBrush.LinearColors">
            <summary>
            Gets or sets the starting and ending colors of the gradient.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfRadialGradientBrush.Rectangle">
            <summary>
            Gets or sets the rectangle.
            </summary>
            <value>The rectangle.</value>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfRectangle">
            <summary>
            Represents a simple rectangle that could be drawn and/or filled.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfRectangle.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfRectangle" /> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfRectangle.#ctor(System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfRectangle" /> class.
            </summary>
            <param name="rectangle">The rectangle.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfRectangle.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfRectangle" /> class.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfRectangle.#ctor(ComponentPro.Pdf.Graphics.PdfPen,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfRectangle" /> class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="rectangle">The rectangle.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfRectangle.#ctor(ComponentPro.Pdf.Graphics.PdfBrush,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfRectangle" /> class.
            </summary>
            <param name="brush">The brush.</param>
            <param name="rectangle">The rectangle.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfRectangle.#ctor(ComponentPro.Pdf.Graphics.PdfPen,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfRectangle" /> class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfRectangle.#ctor(ComponentPro.Pdf.Graphics.PdfBrush,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfRectangle" /> class.
            </summary>
            <param name="brush">The brush.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfRectangle.#ctor(ComponentPro.Pdf.Graphics.PdfPen,ComponentPro.Pdf.Graphics.PdfBrush,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfRectangle" /> class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="rectangle">The rectangle.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfRectangle.#ctor(ComponentPro.Pdf.Graphics.PdfPen,ComponentPro.Pdf.Graphics.PdfBrush,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfRectangle" /> class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfRectangle.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfRectangle" /> class.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfRectangle.#ctor(ComponentPro.Pdf.Graphics.PdfPen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfRectangle" /> class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfRectangle.#ctor(ComponentPro.Pdf.Graphics.PdfBrush,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfRectangle" /> class.
            </summary>
            <param name="brush">The brush.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfRectangle.#ctor(ComponentPro.Pdf.Graphics.PdfPen,ComponentPro.Pdf.Graphics.PdfBrush,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfRectangle" /> class.
            </summary>
            <param name="pen">The pen.</param>
            <param name="brush">The brush.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfRectangle.DrawInternal(ComponentPro.Pdf.Graphics.PdfGraphics)">
            <summary>
            Draws an element on the Graphics.
            </summary>
            <param name="graphics">Graphics context where the element should be printed.</param>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfSolidBrush">
            <summary>
            Represents a brush that fills any object with a solid colour.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfSolidBrush.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfSolidBrush" /> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfSolidBrush.#ctor(ComponentPro.Pdf.Graphics.PdfColor)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfSolidBrush" /> class.
            </summary>
            <param name="color">The color.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfSolidBrush.#ctor(ComponentPro.Pdf.Graphics.ColorSpaces.PdfExtendedColor)">
            <summary>
            Initializes a new instance of the <see cref="T:PdfSolidBrush" /> class.
            </summary>
            <param name="color">color</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfSolidBrush.Clone">
            <summary>
            Creates a new copy of a brush.
            </summary>
            <returns>A new instance of the Brush class.</returns>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfSolidBrush.Color">
            <summary>
            Gets or sets the color of the brush.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfStandardFont">
            <summary>
            Represents one of the 14 standard PDF fonts.
            It's used to create a standard PDF font to draw the text in to the PDF
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfStandardFont.#ctor(ComponentPro.Pdf.Graphics.PdfFontFamily,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfStandardFont" /> class with font family and it's size
            </summary>
            <param name="fontFamily">The font family.</param>
            <param name="size">The size of the font.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfStandardFont.#ctor(ComponentPro.Pdf.Graphics.PdfStandardFont,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfStandardFont" /> class with <see cref="T:ComponentPro.Pdf.Graphics.PdfStandardFont" /> as prototype and font size
            </summary>
            <param name="prototype">The <see cref="T:ComponentPro.Pdf.Graphics.PdfStandardFont" /> using as prototype.</param>
            <param name="size">The size of the font.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfStandardFont.#ctor(ComponentPro.Pdf.Graphics.PdfFontFamily,System.Single,ComponentPro.Pdf.Graphics.PdfFontStyle)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfStandardFont" /> class with font family, size and font style
            </summary>
            <param name="fontFamily">The font family.</param>
            <param name="size">The size of the font.</param>
            <param name="style">The style of the font.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfStandardFont.#ctor(ComponentPro.Pdf.Graphics.PdfStandardFont,System.Single,ComponentPro.Pdf.Graphics.PdfFontStyle)">
            <summary>Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfStandardFont" /> class <span>with</span><see cref="T:ComponentPro.Pdf.Graphics.PdfStandardFont" /> as prototype,font size and font style</summary>
            <param name="prototype">The <see cref="T:ComponentPro.Pdf.Graphics.PdfStandardFont" /> using as prototype..</param>
            <param name="size">The size of the font.</param>
            <param name="style">The style of the font.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfStandardFont.EqualsToFont(ComponentPro.Pdf.Graphics.PdfFont)">
            <summary>
            Checks whether fonts are equals.
            </summary>
            <param name="font">Font to compare.</param>
            <returns>True if fonts are equal, False otherwise.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfStandardFont.GetCharWidth(System.Char,ComponentPro.Pdf.Graphics.PdfStringFormat)">
            <summary>
            Returns the width of the char.
            </summary>
            <param name="charCode">Char symbol.</param>
            <param name="format">String format.</param>
            <returns>Width of the symbol.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfStandardFont.GetLineWidth(System.String,ComponentPro.Pdf.Graphics.PdfStringFormat)">
            <summary>
            Returns width of the line.
            </summary>
            <param name="line">Text line.</param>
            <param name="format">String format.</param>
            <returns>Width of the line.</returns>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfStandardFont.FontFamily">
            <summary>
            Gets the FontFamily.
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.Graphics.PdfFontFamily" /> </value>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfStringFormat">
            <summary>
            Represents the text layout information on PDF
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfStringFormat.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfStringFormat" /> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfStringFormat.#ctor(ComponentPro.Pdf.Graphics.PdfTextAlignment)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfStringFormat" /> class with horizontal alignment of a text
            </summary>
            <param name="alignment">The <see cref="T:ComponentPro.Pdf.Graphics.PdfTextAlignment" /> represents the horizontal alignment of a text in PDF .</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfStringFormat.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfStringFormat" /> class with column format
            </summary>
            <param name="columnFormat">The column format.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfStringFormat.#ctor(ComponentPro.Pdf.Graphics.PdfTextAlignment,ComponentPro.Pdf.Graphics.PdfVerticalAlignment)">
            <summary>Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfStringFormat" /> class with horizontal and vertical alignment</summary>
            <param name="alignment">The <see cref="T:ComponentPro.Pdf.Graphics.PdfTextAlignment" /> represents the horizontal alignment of a text in PDF .</param>
            <param name="lineAlignment">The <see cref="T:ComponentPro.Pdf.Graphics.PdfVerticalAlignment" /> represents the vertical alignment of a text in PDF</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfStringFormat.Clone">
            <summary>
            Clones the object.
            </summary>
            <returns>The new created object.</returns>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfStringFormat.Alignment">
            <summary>
            Gets or sets the horizontal text alignment
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.Graphics.PdfTextAlignment" /> represents the horizontal alignment of a text in PDF </value>
            <remarks>Default value: PdfTextAlignment.Left </remarks>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfStringFormat.CharacterSpacing">
            <summary>
            Gets or sets value that indicates a size among the characters in the text.
            When the glyph for each character in the string is rendered, this value is
            added to the glyph�s displacement.
            </summary>
            <remarks>
            Default value is 0.</remarks>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfStringFormat.ClipPath">
            <summary>
            Gets or sets a value indicating whether the text
            should be a part of the clipping path.
            </summary>
            <value><c>true</c> if ClipPath; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfStringFormat.LineAlignment">
            <summary>
            Gets or sets the vertical text alignment.
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.Graphics.PdfVerticalAlignment" /> represents the vertical alignment of a text in PDF </value>
            <remarks> Default Value: PdfVerticalAlignment.Top </remarks>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfStringFormat.LineLimit">
            <summary>
            Gets or sets a value indicating whether [line limit].
            </summary>
            <value><c>true</c> if [line limit]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfStringFormat.LineSpacing">
            <summary>
            Gets or sets value that indicates the vertical distance between the baselines of adjacent lines of text.
            </summary>
            <remarks>Default value is 0.</remarks>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfStringFormat.MeasureTrailingSpaces">
            <summary>
            Gets or sets a value indicating whether [measure trailing spaces].
            </summary>
            <value>
            	<c>true</c> if [measure trailing spaces]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfStringFormat.NoClip">
            <summary>
            Gets or sets a value indicating whether [no clip].
            </summary>
            <value><c>true</c> if [no clip]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfStringFormat.ParagraphIndent">
            <summary>
            Gets or sets the indent of the first line in the paragraph.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfStringFormat.RightToLeft">
            <summary>
            Gets or sets the value that indicates text direction mode.
            </summary>
            <value><c>true</c> if RightToLeft; otherwise, <c>false</c>.</value>
            <remarks>Note, that this property doesn't change any alignment of the text. 
            <see cref="P:ComponentPro.Pdf.Graphics.PdfStringFormat.Alignment" /> property should be set manually to align the text. This property just enables or disables
            support of right to left approach. 
            If the value is False, the text won't be checked for right to left symbols occurrence. This property is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfStringFormat.SubSuperScript">
            <summary>
            Gets or sets value indicating whether the text is in subscript or superscript mode.
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.Graphics.PdfSubSuperScript" /> indicating whether the text is in subscript or superscript mode</value>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfStringFormat.WordSpacing">
            <summary>
            Gets or sets value that indicates a size among the words in the text.
            Word spacing works the same way as character spacing but applies only to the
            space character, code 32.
            </summary>
            <remarks>Default value is 0.</remarks>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfStringFormat.WordWrap">
            <summary>
            Gets or sets value indicating type of the text wrapping.
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.Graphics.PdfWordWrap" /> indicating type of the text wrapping</value>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfStringLayouter">
            <summary>
            Class lay outing the text.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfStringLayoutResult">
            <summary>
            Layouter result.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfStringLayoutResult.ActualSize">
            <summary>
            Gets the actual layouted text bounds
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfStringLayoutResult.LineHeight">
            <summary>
            Gets the height of the line.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfStringLayoutResult.Lines">
            <summary>
            Gets layouted lines information.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfStringLayoutResult.Remainder">
            <summary>
            Gets the text which is not lay outed
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfSubSuperScript">
            <summary>
            Specifies type of the SubSuperScript.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfSubSuperScript.None">
            <summary>
            Specifies no subscript or superscript.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfSubSuperScript.SuperScript">
            <summary>
            Specifies superscript format.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfSubSuperScript.SubScript">
            <summary>
            Specifies subscript format.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfTemplate">
            <summary>
            Represents Pdf Template object.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfTemplate.#ctor(System.Drawing.SizeF)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfTemplate" /> class.
            </summary>
            <param name="size">The size.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfTemplate.#ctor(System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfTemplate" /> class.
            </summary>
            <param name="rect">The rect.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfTemplate.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfTemplate" /> class.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfTemplate.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfTemplate" /> class.
            </summary>
            <param name="x">The X.</param>
            <param name="y">The Y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfTemplate.DrawInternal(ComponentPro.Pdf.Graphics.PdfGraphics)">
            <summary>
            Draws an element on the Graphics.
            </summary>
            <param name="graphics">Graphics context where the element should be printed.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfTemplate.GetBoundsInternal">
            <summary>
            Returns a rectangle that bounds this element.
            </summary>
            <returns>Returns a rectangle that bounds this element.</returns>
            <remarks>This method doesn't take into consideration a rotation of the element.</remarks>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfTemplate.Reset">
            <summary>
            Resets an instance.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfTemplate.Reset(System.Drawing.SizeF)">
            <summary>
            Resets the template and sets the specified size.
            </summary>
            <param name="size">The size.</param>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfTemplate.Graphics">
            <summary>
            Gets graphics context of the template.
            </summary>
            <remarks>It will return null, if the template is read-only.</remarks>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfTemplate.Height">
            <summary>
            Gets the height of the template.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfTemplate.ReadOnly">
            <summary>
            Gets a value indicating whether the template is read-only.
            </summary>
            <value><c>true</c> if the template is read-only; otherwise, <c>false</c>.</value>
            <remarks>Read-only templates does not expose graphics. They just return null.</remarks>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfTemplate.Size">
            <summary>
            Gets the size of the template.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfTemplate.Width">
            <summary>
            Gets the width of the template.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfTextAlignment">
            <summary>
            Specifies the type of horizontal text alignment.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfTextAlignment.Left">
            <summary>
            Specifies the text is aligned to Left.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfTextAlignment.Center">
            <summary>
            Specifies the text is aligned to Center.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfTextAlignment.Right">
            <summary>
            Specifies the text is aligned to Right.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfTextAlignment.Justify">
            <summary>
            Specifies the text as Justified text.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfTextElement">
            <summary>
            Represents the text area with the ability to span several pages and inherited from the <see cref="T:ComponentPro.Pdf.Graphics.PdfLayoutElement" /> class
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfTextElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfTextElement" /> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfTextElement.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfTextElement" /> class with text to draw into the PDF.
            </summary>
            <param name="text">The text to draw into the PDF.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfTextElement.#ctor(System.String,ComponentPro.Pdf.Graphics.PdfFont)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfTextElement" /> class with the text and <see cref="T:ComponentPro.Pdf.Graphics.PdfFont" />.
            </summary>
            <param name="text">The text to draw into the PDF.</param>
            <param name="font">The <see cref="T:ComponentPro.Pdf.Graphics.PdfFont" /> that defines the text format.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfTextElement.#ctor(System.String,ComponentPro.Pdf.Graphics.PdfFont,ComponentPro.Pdf.Graphics.PdfPen)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfTextElement" /> class with text,<see cref="T:ComponentPro.Pdf.Graphics.PdfFont" /> and <see cref="T:ComponentPro.Pdf.Graphics.PdfPen" />.
            </summary>
            <param name="text">The text to draw into the PDF.</param>
            <param name="font">The <see cref="T:ComponentPro.Pdf.Graphics.PdfFont" /> that defines the text format.</param>
            <param name="pen">The <see cref="T:ComponentPro.Pdf.Graphics.PdfPen" /> that determines the color, width, and style of the text</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfTextElement.#ctor(System.String,ComponentPro.Pdf.Graphics.PdfFont,ComponentPro.Pdf.Graphics.PdfBrush)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfTextElement" /> class with text,<see cref="T:ComponentPro.Pdf.Graphics.PdfFont" /> and <see cref="T:ComponentPro.Pdf.Graphics.PdfBrush" />.
            </summary>
            <param name="text">The text to draw into the PDF.</param>
            <param name="font">The <see cref="T:ComponentPro.Pdf.Graphics.PdfFont" /> that defines the text format.</param>
            <param name="brush">The <see cref="T:ComponentPro.Pdf.Graphics.PdfBrush" />  that determines the color and texture of the drawn text.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfTextElement.#ctor(System.String,ComponentPro.Pdf.Graphics.PdfFont,ComponentPro.Pdf.Graphics.PdfPen,ComponentPro.Pdf.Graphics.PdfBrush,ComponentPro.Pdf.Graphics.PdfStringFormat)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfTextElement" /> class with text,<see cref="T:ComponentPro.Pdf.Graphics.PdfFont" />,<see cref="T:ComponentPro.Pdf.Graphics.PdfPen" />,<see cref="T:ComponentPro.Pdf.Graphics.PdfBrush" /> and <see cref="T:ComponentPro.Pdf.Graphics.PdfStringFormat" />.
            </summary>
            <param name="text">The text to draw into the PDF.</param>
            <param name="font">The <see cref="T:ComponentPro.Pdf.Graphics.PdfFont" /> that defines the text format.</param>
            <param name="pen">The <see cref="T:ComponentPro.Pdf.Graphics.PdfPen" /> that determines the color, width, and style of the text</param>
            <param name="brush">The <see cref="T:ComponentPro.Pdf.Graphics.PdfBrush" />  that determines the color and texture of the drawn text.</param>
            <param name="format">The <see cref="T:ComponentPro.Pdf.Graphics.PdfStringFormat" /> that determines string format.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfTextElement.Draw(ComponentPro.Pdf.PdfPage,System.Drawing.PointF,ComponentPro.Pdf.Graphics.PdfLayoutSettings)">
            <summary>
            Draws the text on the page in the specified location with <see cref="T:ComponentPro.Pdf.Graphics.PdfLayoutSettings" />.
            It returns the <see cref="T:ComponentPro.Pdf.Graphics.PdfTextLayoutResult" /> which contains last page and bounds where the text element drawn.
            </summary>
            <param name="page">Current page where the text should be drawn.</param>
            <param name="location">PointF structure that specifies the start location on the page.</param>
            <param name="format">The <see cref="T:ComponentPro.Pdf.Graphics.PdfLayoutSettings" /> that represents the layout settings</param>
            <returns>The <see cref="T:ComponentPro.Pdf.Graphics.PdfTextLayoutResult" /> that represents the layout result of the drawn text.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfTextElement.Draw(ComponentPro.Pdf.PdfPage,System.Drawing.RectangleF,ComponentPro.Pdf.Graphics.PdfLayoutSettings)">
            <summary>
            Draws the text on the page with specified layout rectangle and <see cref="T:ComponentPro.Pdf.Graphics.PdfLayoutSettings" />.
            It returns the <see cref="T:ComponentPro.Pdf.Graphics.PdfTextLayoutResult" /> which contains last page and bounds where the text element drawn.
            </summary>
            <param name="page">Current page where the text should be drawn.</param>
            <param name="layoutRectangle">RectangleF structure that specifies the bounds of the text.</param>
            <param name="format">The <see cref="T:ComponentPro.Pdf.Graphics.PdfLayoutSettings" /> that represents the layout settings</param>
            <returns>The <see cref="T:ComponentPro.Pdf.Graphics.PdfTextLayoutResult" /> that represents the layout result of the drawn text.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfTextElement.Draw(ComponentPro.Pdf.PdfPage,System.Drawing.PointF,System.Single,ComponentPro.Pdf.Graphics.PdfLayoutSettings)">
            <summary>Draws the text on the page in the specified location,width and <see cref="T:ComponentPro.Pdf.Graphics.PdfLayoutSettings" />.
            It returns the <see cref="T:ComponentPro.Pdf.Graphics.PdfTextLayoutResult" /> which contains last page and bounds where the text element drawn
            </summary>
            <param name="page">Current page where the text should be drawn.</param>
            <param name="location">PointF structure that specifies the start location on the page.</param>
            <param name="width">Width of the text bounds.</param>
            <param name="format">The <see cref="T:ComponentPro.Pdf.Graphics.PdfLayoutSettings" /> that represents the layout settings</param>
            <returns>The <see cref="T:ComponentPro.Pdf.Graphics.PdfTextLayoutResult" /> that represents the layout result of the drawn text.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfTextElement.DrawInternal(ComponentPro.Pdf.Graphics.PdfGraphics)">
            <summary>
            Draws an element on the Graphics.
            </summary>
            <param name="graphics">Graphics context where the element should be printed.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfTextElement.Layout(ComponentPro.Pdf.Graphics.PdfLayoutParams)">
            <summary>
            Layouts the element.
            </summary>
            <param name="param">Lay outing parameters.</param>
            <returns>Returns lay outing results.</returns>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfTextElement.Brush">
            <summary>
            Gets or sets the <see cref="T:ComponentPro.Pdf.Graphics.PdfBrush" /> that will be used to draw the text with color and texture.
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.Graphics.PdfBrush" /> that determines the color and texture of the drawn text </value>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfTextElement.Font">
            <summary>
            Gets or sets a <see cref="T:ComponentPro.Pdf.Graphics.PdfFont" /> that defines the text format.
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.Graphics.PdfFont" /> that defines the text format</value>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfTextElement.Pen">
            <summary>
            Gets or sets a <see cref="T:ComponentPro.Pdf.Graphics.PdfPen" /> that determines the color, width, and style of the text
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.Graphics.PdfPen" /> that determines the color, width, and style of the text </value>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfTextElement.StringFormat">
            <summary>
            Gets or sets the <see cref="T:ComponentPro.Pdf.Graphics.PdfStringFormat" /> that will be used to set the string format
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.Graphics.PdfStringFormat" /> used to set the string format</value>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfTextElement.Text">
            <summary>
            Gets or sets a value indicating the text that should be printed.
            </summary>
            <value>The <see cref="T:System.String" /> to draw to the PDF </value>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfTextLayoutResult">
            <summary>
            Represents the text lay outing result settings.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfTextLayoutResult.LastLineBounds">
            <summary>
            Gets a value that indicates the bounds of the last line that was printed on the page.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfTextLayoutResult.Remainder">
            <summary>
            Gets a value that contains the text that was not printed.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfTrueTypeFont">
            <summary>
            Represents TrueType font.
            </summary>
                        [System.Security.Permissions.PermissionSet( System.Security.Permissions.SecurityAction.Assert, Name = "FullTrust" )]
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfTrueTypeFont.#ctor(System.Drawing.Font)">
            <summary>Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfTrueTypeFont" /> class with specified Font</summary>
            <param name="font">The system font that defines the text format of the string</param>
            <remarks>This constructor is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfTrueTypeFont.#ctor(System.Drawing.Font,System.Boolean)">
            <summary>Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfTrueTypeFont" /> class with font and Boolean flag to set the Unicode of the PDF font</summary>
            <remarks>This Constructor is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
            <param name="font">The system font that defines the text format of the string</param>
            <param name="unicode">The boolean flag represents the support of unicode text</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfTrueTypeFont.#ctor(System.Drawing.Font,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfTrueTypeFont" /> class with font and it's size
            </summary>
            <remarks>This constructor is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
            <param name="font">The system font that defines the text format of the string</param>
            <param name="size">The size of the font.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfTrueTypeFont.#ctor(System.String,System.Single)">
            <summary>Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfTrueTypeFont" /> class with the path of the font file which has the extension of .ttf and it's size</summary>
            <remarks>This constructor is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
            <param name="fontFile">The font file path which has the extension of .ttf.</param>
            <param name="size">The size of the font.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfTrueTypeFont.#ctor(System.IO.Stream,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfTrueTypeFont" /> class.
            </summary>
            <param name="fontStream">The font stream.</param>
            <param name="size">The size.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfTrueTypeFont.#ctor(ComponentPro.Pdf.Graphics.PdfTrueTypeFont,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfTrueTypeFont" /> class with prototype and it's size
            </summary>
            <param name="prototype">The PdfTrutypeFont using as a prototype.</param>
            <param name="size">The size of the font.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfTrueTypeFont.#ctor(System.Drawing.Font,System.Single,System.Boolean)">
            <summary>Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfTrueTypeFont" /> class with font, size and Boolean flag to set Unicode.</summary>
            <remarks>This constructor is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
            <param name="font">The system font that defines the text format of the string</param>
            <param name="size">The size of the font.</param>
            <param name="unicode">The boolean flag represents the support of unicode text</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfTrueTypeFont.#ctor(System.String,System.Single,ComponentPro.Pdf.Graphics.PdfFontStyle)">
            <summary>Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfTrueTypeFont" /> class with the path of the font file which has the extension of .ttf, size and font style</summary>
            <remarks>This constructor is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
            <param name="fontFile">The font file path.</param>
            <param name="size">The size of the font.</param>
            <param name="style">The style of the font.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfTrueTypeFont.#ctor(System.Drawing.Font,System.Drawing.FontStyle,System.Single,System.Boolean,System.Boolean)">
            <summary>Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfTrueTypeFont" /> class with font,font style,size,Boolean flag to set Unicode and Boolean flag to embed the font into the PDF</summary>
            <remarks>This constructor is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
            <param name="font">the system font that defines the text format of the string</param>
            <param name="style">The style of the font.</param>
            <param name="size">The size of the font.</param>
            <param name="unicode">the boolean flag represents the support of unicode text</param>
            <param name="embed">the boolean flag represents to embed the font into the pdf</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfTrueTypeFont.Dispose">
            <summary>
            Releases all resources of the font.
            </summary>
            <remarks>Don't dispose the font until the corresponding document is closed.</remarks>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfTrueTypeFont.EqualsToFont(ComponentPro.Pdf.Graphics.PdfFont)">
            <summary>
            Checks whether fonts are equals.
            </summary>
            <param name="font">Font to compare.</param>
            <returns>True if fonts are equal, False otherwise.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfTrueTypeFont.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:ComponentPro.Pdf.Graphics.PdfTrueTypeFont" /> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfTrueTypeFont.GetCharWidth(System.Char,ComponentPro.Pdf.Graphics.PdfStringFormat)">
            <summary>
            Returns width of the char.
            </summary>
            <param name="charCode">Char symbol.</param>
            <param name="format">String format.</param>
            <returns>Width of the symbol.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfTrueTypeFont.GetLineWidth(System.String,ComponentPro.Pdf.Graphics.PdfStringFormat)">
            <summary>
            Returns width of the line.
            </summary>
            <param name="line">Text line.</param>
            <param name="format">String format.</param>
            <returns>Width of the line.</returns>
        </member>
        <member name="P:ComponentPro.Pdf.Graphics.PdfTrueTypeFont.Unicode">
            <summary>Gets a value indicating whether this <see cref="T:ComponentPro.Pdf.Graphics.PdfTrueTypeFont" /> is Unicode enabled (Read only).</summary>
            <value>
            <c>true</c> if Unicode; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfUnitConvertor">
            <summary>
            Class allowing to convert different unit metrics. Converting is 
            based on Graphics object DPI settings that is why for differ
            graphics settings must be created new instance. For example:
            printers often has 300 and greater dpi resolution, for compare
            default display screen dpi is 96.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfUnitConvertor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Graphics.PdfUnitConvertor" /> class with default DPI value of 96.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfUnitConvertor.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:UnitConvertor" /> class with DPI value
            </summary>
            <param name="dpi">The dpi.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfUnitConvertor.#ctor(System.Drawing.Graphics)">
            <summary>
            Initializes a new instance of the <see cref="T:UnitConvertor" /> class with System.Drawing.Graphics.
            </summary>
            <remarks>This constructor is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
            <param name="g">Graphics for measuring the DPI value</param>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfUnitConvertor.ConvertFromPixels(System.Single,ComponentPro.Pdf.Graphics.PdfGraphicsUnit)">
            <summary>
            Converts value, to specified graphics unit from Pixel.
            </summary>
            <param name="value">Value to convert</param>
            <param name="to">Indicates units to convert to</param>
            <returns>Value stored in "to" units</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfUnitConvertor.ConvertFromPixels(System.Drawing.RectangleF,ComponentPro.Pdf.Graphics.PdfGraphicsUnit)">
            <summary>
            Converts rectangle in Pixels into rectangle with specified 
            measure units
            </summary>
            <param name="rect">source rectangle in pixels units</param>
            <param name="to">convert to units</param>
            <returns>output Rectangle in specified units</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfUnitConvertor.ConvertFromPixels(System.Drawing.PointF,ComponentPro.Pdf.Graphics.PdfGraphicsUnit)">
            <summary>
            Converts rectangle from pixels to specified units
            </summary>
            <param name="point">point in pixels units</param>
            <param name="to">convert to units</param>
            <returns>output Point in specified units</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfUnitConvertor.ConvertFromPixels(System.Drawing.SizeF,ComponentPro.Pdf.Graphics.PdfGraphicsUnit)">
            <summary>
            Converts Size in pixels to size in specified measure units
            </summary>
            <param name="size">source size</param>
            <param name="to">convert to units</param>
            <returns>output size in specified measure units</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfUnitConvertor.ConvertToPixels(System.Single,ComponentPro.Pdf.Graphics.PdfGraphicsUnit)">
            <summary>
            Converts the value to pixel from specified graphics unit.
            </summary>
            <param name="value">Value to convert</param>
            <param name="from">Indicates units to convert from</param>
            <returns>Value stored in pixels</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfUnitConvertor.ConvertToPixels(System.Drawing.RectangleF,ComponentPro.Pdf.Graphics.PdfGraphicsUnit)">
            <summary>
            Converts the rectangle location and size to Pixels from specified 
            measure units
            </summary>
            <param name="rect">source rectangle</param>
            <param name="from">source rectangle measure units</param>
            <returns>Rectangle with Pixels</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfUnitConvertor.ConvertToPixels(System.Drawing.PointF,ComponentPro.Pdf.Graphics.PdfGraphicsUnit)">
            <summary>
            Converts point from specified graphics units to pixels
            </summary>
            <param name="point">source point for convert</param>
            <param name="from">measure units</param>
            <returns>point in pixels coordinates</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfUnitConvertor.ConvertToPixels(System.Drawing.SizeF,ComponentPro.Pdf.Graphics.PdfGraphicsUnit)">
            <summary>
            Converts size from specified graphics units to pixels
            </summary>
            <param name="size">source size</param>
            <param name="from">measure units</param>
            <returns>size in pixels</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Graphics.PdfUnitConvertor.ConvertUnits(System.Single,ComponentPro.Pdf.Graphics.PdfGraphicsUnit,ComponentPro.Pdf.Graphics.PdfGraphicsUnit)">
            <summary>
            Converts the value, from one graphics unit to another graphics unit.
            </summary>
            <param name="value">Value to convert</param>
            <param name="from">Indicates units to convert from</param>
            <param name="to">Indicates units to convert to</param>
            <returns>Value stored in "to" units</returns>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfVerticalAlignment">
            <summary>
            Specifies the type of Vertical alignment.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfVerticalAlignment.Top">
            <summary>
            Specifies the element is aligned to Top.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfVerticalAlignment.Middle">
            <summary>
            Specifies the element is aligned to Middle.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfVerticalAlignment.Bottom">
            <summary>
            Specifies the element is aligned to Bottom.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.PdfWordWrap">
            <summary>
            Specifies the types of text wrapping.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfWordWrap.None">
            <summary>
            Text wrapping between lines when formatting within a rectangle is disabled.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfWordWrap.Word">
            <summary>
            Text is wrapped by words. If there is a word that is longer than bounds' width, this word is wrapped by characters.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfWordWrap.WordOnly">
            <summary>
            Text is wrapped by words. If there is a word that is longer than bounds' width, it won't be wrapped at all
            and the process will be finished.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.PdfWordWrap.Character">
            <summary>
            Text is wrapped by characters. In this case the word at the end of the text line can be split.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Graphics.TextAlign">
            <summary>
            Specifies how text in a <see cref="T:ComponentPro.Pdf.Graphics.PdfHtmlElement"/> is
            horizontally aligned.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.TextAlign.Left">
            <summary>
            The text is aligned to the left.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.TextAlign.Right">
            <summary>
            The text is aligned to the right.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.TextAlign.Center">
            <summary>
            The text is aligned in the center.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Graphics.TextAlign.Justify">
            <summary>
            The text is justified.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Grid.GridCellLayoutEventArgs.Bounds">
            <summary>
            Gets the bounds of the cell.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Grid.GridCellLayoutEventArgs.CellIndex">
            <summary>
            Gets the index of the cell.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Grid.GridCellLayoutEventArgs.Graphics">
            <summary>
            Gets the graphics, on which the cell should be drawn.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Grid.GridCellLayoutEventArgs.RowIndex">
            <summary>
            Gets the index of the row.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Grid.GridCellLayoutEventArgs.Value">
            <summary>
            Gets the value.
            </summary>
            <remarks>The value might be null or an empty string,
            which means that either no text were acquired or all
            text was on the previous page.</remarks>
        </member>
        <member name="T:ComponentPro.Pdf.Grid.PdfGrid">
            <summary>
            Represents a flexible grid that consists of columns and rows.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Grid.PdfGrid.ApplyBuiltinStyle(ComponentPro.Pdf.PdfGridBuiltinStyle,ComponentPro.Pdf.Grid.PdfGridBuiltinStyleSettings)">
            <summary>
            Apply built-in table style to the table
            </summary>
            <param name="gridStyle">enum of PdfGridBuiltinStyle</param>
            <param name="gridStyleSetting">The PdfGridBuiltinStyleSettings</param>
        </member>
        <member name="M:ComponentPro.Pdf.Grid.PdfGrid.Draw(ComponentPro.Pdf.Graphics.PdfGraphics,System.Drawing.RectangleF)">
            <summary>
            Draws the <see cref="T:ComponentPro.Pdf.Grid.PdfGrid" /> in the specified graphics.
            </summary>
            <param name="graphics">The graphics.</param>
            <param name="bounds">The bounds.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Grid.PdfGrid.Draw(ComponentPro.Pdf.PdfPage,System.Drawing.PointF)">
            <summary>
            Draws the <see cref="T:ComponentPro.Pdf.Grid.PdfGrid" /> in the specified <see cref="T:ComponentPro.Pdf.PdfPage" />.
            </summary>
            <param name="page">The page.</param>
            <param name="location">The location.</param>
            <returns>The grid layout result</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Grid.PdfGrid.Draw(ComponentPro.Pdf.PdfPage,System.Drawing.RectangleF)">
            <summary>
            Draws the <see cref="T:ComponentPro.Pdf.Grid.PdfGrid" /> in the specified <see cref="T:ComponentPro.Pdf.PdfPage" />.
            </summary>
            <param name="page">The page.</param>
            <param name="bounds">The bounds.</param>
            <returns>The grid layout result</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Grid.PdfGrid.Draw(ComponentPro.Pdf.Graphics.PdfGraphics,System.Drawing.PointF,System.Single)">
            <summary>
            Draws the <see cref="T:ComponentPro.Pdf.Grid.PdfGrid" /> in the specified graphics.
            </summary>
            <param name="graphics">The graphics.</param>
            <param name="location">The location.</param>
            <param name="width">The width.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Grid.PdfGrid.Draw(ComponentPro.Pdf.PdfPage,System.Drawing.PointF,ComponentPro.Pdf.Grid.PdfGridLayoutFormat)">
            <summary>
            Draws the <see cref="T:ComponentPro.Pdf.Grid.PdfGrid" /> in the specified <see cref="T:ComponentPro.Pdf.PdfPage" />.
            </summary>
            <param name="page">The page.</param>
            <param name="location">The location.</param>
            <param name="format">The format.</param>
            <returns>The grid layout result</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Grid.PdfGrid.Draw(ComponentPro.Pdf.PdfPage,System.Drawing.RectangleF,ComponentPro.Pdf.Grid.PdfGridLayoutFormat)">
            <summary>
            Draws the <see cref="T:ComponentPro.Pdf.Grid.PdfGrid" /> in the specified <see cref="T:ComponentPro.Pdf.PdfPage" />.
            </summary>
            <param name="page">The page.</param>
            <param name="bounds">The bounds.</param>
            <param name="format">The format.</param>
            <returns>The grid layout result</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Grid.PdfGrid.Draw(ComponentPro.Pdf.PdfPage,System.Single,System.Single)">
            <summary>
            Draws the <see cref="T:ComponentPro.Pdf.Grid.PdfGrid" /> in the specified <see cref="T:ComponentPro.Pdf.PdfPage" />.
            </summary>
            <param name="page">The page.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns>The grid layout result</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Grid.PdfGrid.Draw(ComponentPro.Pdf.Graphics.PdfGraphics,System.Single,System.Single,System.Single)">
            <summary>
            Draws the <see cref="T:ComponentPro.Pdf.Grid.PdfGrid" /> in the specified graphics.
            </summary>
            <param name="graphics">The graphics.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Grid.PdfGrid.Draw(ComponentPro.Pdf.PdfPage,System.Single,System.Single,ComponentPro.Pdf.Grid.PdfGridLayoutFormat)">
            <summary>
            Draws the <see cref="T:ComponentPro.Pdf.Grid.PdfGrid" /> in the specified <see cref="T:ComponentPro.Pdf.PdfPage" />.
            </summary>
            <param name="page">The page.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="format">The format.</param>
            <returns>The grid layout result</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Grid.PdfGrid.Draw(ComponentPro.Pdf.PdfPage,System.Single,System.Single,System.Single)">
            <summary>
            Draws the <see cref="T:ComponentPro.Pdf.Grid.PdfGrid" /> in the specified <see cref="T:ComponentPro.Pdf.PdfPage" />.
            </summary>
            <param name="page">The page.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <returns>The grid layout result</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Grid.PdfGrid.Draw(ComponentPro.Pdf.PdfPage,System.Single,System.Single,System.Single,ComponentPro.Pdf.Grid.PdfGridLayoutFormat)">
            <summary>
            Draws the <see cref="T:ComponentPro.Pdf.Grid.PdfGrid" /> in the specified <see cref="T:ComponentPro.Pdf.PdfPage" />.
            </summary>
            <param name="page">The page.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="format">The format.</param>
            <returns>The grid layout result</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Grid.PdfGrid.DrawInternal(ComponentPro.Pdf.Graphics.PdfGraphics)">
            <summary>
            Draws an element on the Graphics.
            </summary>
            <param name="graphics">Graphics context where the element should be printed.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Grid.PdfGrid.Layout(ComponentPro.Pdf.Graphics.PdfLayoutParams)">
            <summary>
            Layouts the element.
            </summary>
            <param name="param">Layout parameters.</param>
            <returns>Returns the results of layout.</returns>
        </member>
        <member name="P:ComponentPro.Pdf.Grid.PdfGrid.AllowRowBreakAcrossPages">
            <summary>
            Gets or sets a value indicating whether to split or cut rows that overflow a page.
            </summary>
            <remarks>Default Value: true </remarks>
        </member>
        <member name="P:ComponentPro.Pdf.Grid.PdfGrid.Columns">
            <summary>
            Gets the column collection of the PdfGrid.[Read-Only]
            </summary>
            <value>Represents the columns collection of the PdfGrid.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Grid.PdfGrid.DataMember">
            <summary>
            Gets or sets the data member.
            </summary>
            <value>The data member.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Grid.PdfGrid.DataSource">
            <summary>
            Gets or sets the data bind to the PdfGrid by associating it with an external data source.
            </summary>
            <value>The data source.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Grid.PdfGrid.Headers">
            <summary>
            Gets the headers collection from the PdfGrid.[Read-Only]
            </summary>
            <value>Represents the headers of the PdfGrid.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Grid.PdfGrid.Rows">
            <summary>
            Gets the row collection from the PdfGrid.[Read-Only]
            </summary>
            <value>Represents the rows collection of the PdfGrid.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Grid.PdfGrid.Style">
            <summary>
            Gets or sets the grid style.
            </summary>
            <value>Represents the style information applied to a PdfGrid.</value>
        </member>
        <member name="E:ComponentPro.Pdf.Grid.PdfGrid.BeforeCellLayout">
            <summary>
            The event raised on starting cell lay outing.
            </summary>
        </member>
        <member name="E:ComponentPro.Pdf.Grid.PdfGrid.AfterCellLayout">
            <summary>
            The event raised on finished cell layout.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Grid.PdfGridBeforeCellLayoutEventArgs">
            <summary>
            Represents arguments of StartCellLayout Event.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class
            <seealso cref="T:ComponentPro.Pdf.Grid.PdfGrid" /> Class
        </member>
        <member name="P:ComponentPro.Pdf.Grid.PdfGridBeforeCellLayoutEventArgs.Skip">
            <summary>
            Gets or sets a value indicating whether the value of this cell should be skipped.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Grid.PdfGridBeforeCellLayoutEventHandler">
            <summary>
            Delegate for handling StartCellLayoutEvent.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="args">The arguments of the event.</param>
            <remarks>This event is raised when laying out a cell on a page.</remarks>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class
            <seealso cref="T:ComponentPro.Pdf.Grid.PdfGrid" /> Class
        </member>
        <member name="T:ComponentPro.Pdf.Grid.PdfGridBeforePageLayoutEventArgs">
            <summary>
            Arguments of BeforePageLayoutEvent.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Graphics.BeforePageLayoutEventArgs" /> Class    
        </member>
        <member name="P:ComponentPro.Pdf.Grid.PdfGridBeforePageLayoutEventArgs.StartRowIndex">
            <summary>
            Gets the start row index.[Read-Only]
            </summary>
            <value>The start row.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Grid.PdfGridBuiltinStyleSettings.ApplyStyleForBandedColumns">
            <summary>
            Gets or sets a value indicating whether to apply style bands to the columns in a table,
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Grid.PdfGridBuiltinStyleSettings.ApplyStyleForBandedRows">
            <summary>
            Gets or sets a value indicating whether to apply style bands to the rows in a table
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Grid.PdfGridBuiltinStyleSettings.ApplyStyleForFirstColumn">
            <summary>
            Gets or sets a value indicating whether to apply first-column formatting to the first column of the specified table
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Grid.PdfGridBuiltinStyleSettings.ApplyStyleForHeaderRow">
            <summary>
             Gets or sets a value indicating whether to apply heading-row formatting to the first row of the table.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Grid.PdfGridBuiltinStyleSettings.ApplyStyleForLastColumn">
            <summary>
            Gets or sets a value indicating whether to apply first-column formatting to the first column of the specified table.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Grid.PdfGridBuiltinStyleSettings.ApplyStyleForLastRow">
            <summary>
            Gets or sets a value indicating whether to apply last-row formatting to the last row of the specified table.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Grid.PdfGridCell">
            <summary>
            Represents the schema of a cell in a <see cref="T:ComponentPro.Pdf.Grid.PdfGrid" />.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Grid.PdfGridCell.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Grid.PdfGridCell" /> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Grid.PdfGridCell.#ctor(ComponentPro.Pdf.Grid.PdfGridRow)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Grid.PdfGridCell" /> class with the row.
            </summary>
            <param name="row">The row of the cell.</param>
        </member>
        <member name="P:ComponentPro.Pdf.Grid.PdfGridCell.ColumnSpan">
            <summary>
            Gets or sets a value that indicates the total number of columns that cell spans within a PdfGrid.
            </summary>
            <value>The number of columns that cell should span. The default value is 1.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Grid.PdfGridCell.Height">
            <summary>
            Gets the height of the PdfGrid cell.[Read-Only]
            </summary>
            <value>The height.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Grid.PdfGridCell.ImagePosition">
            <summary>
            Gets or sets the image alignment type of the PdfGridCell background image.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Grid.PdfGridCell.IsHtmlText">
            <summary>
            Gets or sets the cell content is HTML text or not
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Grid.PdfGridCell.PdfTag">
            <summary>
            Get or set the tag for the element
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Grid.PdfGridCell.RowSpan">
            <summary>
            Gets or sets a value that indicates the total number of rows that cell spans within a PdfGrid.
            </summary>
            <value>The number of rows that cell should span. The default value is 1.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Grid.PdfGridCell.StringFormat">
            <summary>
            Gets or sets the string format.
            </summary>
            <value>The string format.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Grid.PdfGridCell.Style">
            <summary>
            Gets or sets the cell style.
            </summary>
            <value>Represents the style information applied to individual cells within a PdfGrid.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Grid.PdfGridCell.Value">
            <summary>
            Gets or sets the value of the cell.
            </summary>
            <value>Value can be string or PdfGrid, PdfGrid will create a nested grid.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Grid.PdfGridCell.Width">
            <summary>
            Gets the width of the PdfGrid cell.[Read-Only]
            </summary>
            <value>The width of the cell which is set by the column width.</value>
        </member>
        <member name="T:ComponentPro.Pdf.Grid.PdfGridCellCollection">
            <summary>
            Provides access to an ordered, strongly typed collection of <see cref="T:ComponentPro.Pdf.Grid.PdfGridCell" /> objects.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Grid.PdfGridCellCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"></see> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:ComponentPro.Pdf.Grid.PdfGridCellCollection.IndexOf(ComponentPro.Pdf.Grid.PdfGridCell)">
            <summary>
            Returns the index of a particular cell in the collection.
            </summary>
            <param name="cell">The cell.</param>
            <returns>Index of the particular cell.</returns>
        </member>
        <member name="P:ComponentPro.Pdf.Grid.PdfGridCellCollection.Count">
            <summary>
            Gets the cells count.[Read-Only]
            </summary>
            <value>The count representing the number of cells present in a Row.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Grid.PdfGridCellCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ComponentPro.Pdf.Grid.PdfGridCell" /> at the specified index.[Read-Only]
            </summary>
            <value>The index of the required PdfGridCell</value>
        </member>
        <member name="T:ComponentPro.Pdf.Grid.PdfGridCellStyle">
            <summary>
            Provides customization of the appearance for the <see cref="T:ComponentPro.Pdf.Grid.PdfGridCell" /> 
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Grid.PdfGridRowStyle">
            <summary>
            Provides customization of the appearance for the <see cref="T:ComponentPro.Pdf.Grid.PdfGridRow" />
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Grid.PdfGridStyleBase">
            <summary>
            Base class for the grid style
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Grid.PdfGridStyleBase.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="P:ComponentPro.Pdf.Grid.PdfGridStyleBase.BackgroundBrush">
            <summary>
            Gets or sets the background brush.
            </summary>
            <value>The background brush of the PdfGrid.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Grid.PdfGridStyleBase.Font">
            <summary>
            Gets or sets the font.
            </summary>
            <value>The font.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Grid.PdfGridStyleBase.TextBrush">
            <summary>
            Gets or sets the text brush.
            </summary>
            <value>The text brush of the PdfGrid.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Grid.PdfGridStyleBase.TextPen">
            <summary>
            Gets or sets the text pen.
            </summary>
            <value>The text pen.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Grid.PdfGridCellStyle.BackgroundImage">
            <summary>
            Gets or sets the background image in the <see cref="T:ComponentPro.Pdf.Grid.PdfGridCell" />
            </summary>
            <value>The background image.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Grid.PdfGridCellStyle.Borders">
            <summary>
            Gets or sets the border of the <see cref="T:ComponentPro.Pdf.Grid.PdfGridCell" />.
            </summary>
            <value>The border.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Grid.PdfGridCellStyle.CellPadding">
            <summary>
            Gets or sets the cell padding.
            </summary>
            <value>The cell padding.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Grid.PdfGridCellStyle.StringFormat">
            <summary>
            Gets the string format of the <see cref="T:ComponentPro.Pdf.Grid.PdfGridCell" />.
            </summary>
            <value>The string format.</value>
        </member>
        <member name="T:ComponentPro.Pdf.Grid.PdfGridColumn">
            <summary>
            Represents the schema of a column in a <see cref="T:ComponentPro.Pdf.Grid.PdfGrid" />.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Grid.PdfGridColumn.#ctor(ComponentPro.Pdf.Grid.PdfGrid)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Grid.PdfGridColumn" /> class with the parent grid.
            </summary>
            <param name="grid">The parent grid.</param>
        </member>
        <member name="P:ComponentPro.Pdf.Grid.PdfGridColumn.Format">
            <summary>
            Gets or sets the information about the text formatting.
            </summary>
            <value>The format.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Grid.PdfGridColumn.Grid">
            <summary>
            Gets the parent <see cref="T:ComponentPro.Pdf.Grid.PdfGrid" />.[Read-Only]
            </summary>
            <value>The grid.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Grid.PdfGridColumn.Width">
            <summary>
            Gets or sets the width of the <see cref="T:ComponentPro.Pdf.Grid.PdfGridColumn" />.
            </summary>
            <value>The width.</value>
        </member>
        <member name="T:ComponentPro.Pdf.Grid.PdfGridColumnCollection">
            <summary>
            Provides access to an ordered, strongly typed collection of <see cref="T:ComponentPro.Pdf.Grid.PdfGridColumn" /> objects.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Grid.PdfGridColumnCollection.#ctor(ComponentPro.Pdf.Grid.PdfGrid)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Grid.PdfGridColumnCollection" /> class with the parent grid.
            </summary>
            <param name="grid">The parent grid.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Grid.PdfGridColumnCollection.Add">
            <summary>
            Add a new column to the <see cref="T:ComponentPro.Pdf.Grid.PdfGrid" />.
            </summary>
            <returns>The added column</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Grid.PdfGridColumnCollection.Add(System.Int32)">
            <summary>
            Adds the number of specified count.
            </summary>
            <param name="count">The count.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Grid.PdfGridColumnCollection.Add(ComponentPro.Pdf.Grid.PdfGridColumn)">
            <summary>
            Adds the specified column.
            </summary>
            <param name="column">The column.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Grid.PdfGridColumnCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"></see> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:ComponentPro.Pdf.Grid.PdfGridColumnCollection.Count">
            <summary>
            Gets the number of columns in the <see cref="T:ComponentPro.Pdf.Grid.PdfGrid" />.[Read-Only]
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Grid.PdfGridColumnCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ComponentPro.Pdf.Grid.PdfGridColumn" /> at the specified index.[Read-Only]
            </summary>
            <value></value>
        </member>
        <member name="T:ComponentPro.Pdf.Grid.PdfGridAfterCellLayoutEventArgs">
            <summary>
            Represents arguments of AfterCellLayout Event.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class
            <seealso cref="T:ComponentPro.Pdf.Grid.PdfGrid" /> Class
        </member>
        <member name="T:ComponentPro.Pdf.Grid.PdfGridAfterCellLayoutEventHandler">
            <summary>
            Delegate for handling AfterCellLayoutEvent.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="args">The arguments of the event.</param>
            <remarks>This event is raised when you have finished laying out a page.</remarks>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class
            <seealso cref="T:ComponentPro.Pdf.Grid.PdfGrid" /> Class
        </member>
        <member name="T:ComponentPro.Pdf.Grid.PdfGridAfterPageLayoutEventArgs">
            <summary>
            Arguments of AfterPageLayoutEvent.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Graphics.AfterPageLayoutEventArgs" /> Class    
        </member>
        <member name="T:ComponentPro.Pdf.Grid.PdfGridHeaderCollection">
            <summary>
            Provides customization of the settings for the header.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Grid.PdfGridHeaderCollection.#ctor(ComponentPro.Pdf.Grid.PdfGrid)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Grid.PdfGridHeaderCollection" /> class with the parent grid.
            </summary>
            <param name="grid">The parent grid.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Grid.PdfGridHeaderCollection.Add(System.Int32)">
            <summary>
            <see cref="T:ComponentPro.Pdf.Grid.PdfGrid" /> enables you to quickly and easily add rows to the header at run time.
            </summary>
            <param name="count">The count.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Grid.PdfGridHeaderCollection.ApplyStyle(ComponentPro.Pdf.Grid.PdfGridStyleBase)">
            <summary>
            Enables you to set the appearance of the header row in a <see cref="T:ComponentPro.Pdf.Grid.PdfGrid" />.
            </summary>
            <param name="style">The style.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Grid.PdfGridHeaderCollection.Clear">
            <summary>
            Removes all the header information in the <see cref="T:ComponentPro.Pdf.Grid.PdfGrid" />.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Grid.PdfGridHeaderCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"></see> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:ComponentPro.Pdf.Grid.PdfGridHeaderCollection.Count">
            <summary>
             Gets the number of header in the <see cref="T:ComponentPro.Pdf.Grid.PdfGrid" />.[Read-Only]
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Grid.PdfGridHeaderCollection.Item(System.Int32)">
            <summary>
            Gets a <see cref="T:ComponentPro.Pdf.Grid.PdfGridRow" /> object that represents the header row in a <see cref="T:ComponentPro.Pdf.Grid.PdfGridHeaderCollection" /> control.[Read-Only]
            </summary>
            <value></value>
        </member>
        <member name="T:ComponentPro.Pdf.Grid.PdfGridLayoutFormat">
            <summary>
            Provides parameters definition for PdfGrid layout.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Grid.PdfGridLayoutFormat.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Grid.PdfGridLayoutFormat" /> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Grid.PdfGridLayoutFormat.#ctor(ComponentPro.Pdf.Graphics.PdfLayoutSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Grid.PdfGridLayoutFormat" /> class with a base format.
            </summary>
            <param name="baseFormat">The base format.</param>
        </member>
        <member name="T:ComponentPro.Pdf.Grid.PdfGridLayoutResult">
            <summary>
            Represents the results of the PdfGrid including bounds and resultant page.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Grid.PdfGridLayoutResult.#ctor(ComponentPro.Pdf.PdfPage,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Grid.PdfGridLayoutResult" /> class with the current page and bounds.
            </summary>
            <param name="page">The current page.</param>
            <param name="bounds">The current bounds.</param>
            <remarks>The page might be null, which means that
            lay outing was performed on PdfGraphics.</remarks>
        </member>
        <member name="T:ComponentPro.Pdf.Grid.PdfGridRow">
            <summary>
            Provides customization of the settings for the particular row.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Grid.PdfGridRow.#ctor(ComponentPro.Pdf.Grid.PdfGrid)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Grid.PdfGridRow" /> class with the parent grid.
            </summary>
            <param name="parentGrid">The parent grid.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Grid.PdfGridRow.ApplyStyle(ComponentPro.Pdf.Grid.PdfGridCellStyle)">
            <summary>
            Enables you to set the appearance of the row in a <see cref="T:ComponentPro.Pdf.Grid.PdfGrid" />.
            </summary>
            <param name="cellStyle">The cell style.</param>
        </member>
        <member name="P:ComponentPro.Pdf.Grid.PdfGridRow.Cells">
            <summary>
            Gets the cells from the selected row.[Read-Only]
            </summary>
            <value>The cells.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Grid.PdfGridRow.Height">
            <summary>
            Gets or sets the height of the row.
            </summary>
            <value>The height.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Grid.PdfGridRow.PdfTag">
            <summary>
            Get or set the tag for the element
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Grid.PdfGridRow.Style">
            <summary>
            Gets or sets the row style.
            </summary>
            <value>The row style.</value>
        </member>
        <member name="T:ComponentPro.Pdf.Grid.PdfGridRowCollection">
            <summary>
            Provides access to an ordered, strongly typed collection of <see cref="T:ComponentPro.Pdf.Grid.PdfGridRow" /> objects.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Grid.PdfGridRowCollection.Add">
            <summary>
            Add new row to the grid.
            </summary>
            <returns>The added row</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Grid.PdfGridRowCollection.Add(ComponentPro.Pdf.Grid.PdfGridRow)">
            <summary>
            Add the row to the grid.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Grid.PdfGridRowCollection.ApplyStyle(ComponentPro.Pdf.Grid.PdfGridStyleBase)">
            <summary>
            Applies the style to all the rows in the grid.
            </summary>
            <param name="cellStyle">The style.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Grid.PdfGridRowCollection.SetSpan(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the row span and column span to a cell.
            </summary>
            <param name="rowIndex">Index of the row.</param>
            <param name="cellIndex">Index of the cell.</param>
            <param name="rowSpan">The row span.</param>
            <param name="colSpan">The col span.</param>
        </member>
        <member name="T:ComponentPro.Pdf.Grid.PdfGridStyle">
            <summary>
            Provides customization of the appearance for the <see cref="T:ComponentPro.Pdf.Grid.PdfGrid" />.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Grid.PdfGridStyle.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Grid.PdfGridStyle" /> class.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Grid.PdfGridStyle.AllowHorizontalOverflow">
            <summary>
            Gets or sets a value indicating whether to allow horizontal overflow.
            </summary>
            <value>
            	<c>true</c> if [allow horizontal overflow]; otherwise, <c>false</c>.
            </value>
            <remarks>Defalult Value: false </remarks>
        </member>
        <member name="P:ComponentPro.Pdf.Grid.PdfGridStyle.BorderOverlapStyle">
            <summary>
            Gets or sets the border overlap style of the <see cref="T:ComponentPro.Pdf.Grid.PdfGrid" />.
            </summary>
            <value>The border overlap style.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Grid.PdfGridStyle.CellPadding">
            <summary>
            Gets or sets the cell padding.
            </summary>
            <value>The cell padding.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Grid.PdfGridStyle.CellSpacing">
            <summary>
            Gets or sets the cell spacing of the <see cref="T:ComponentPro.Pdf.Grid.PdfGrid" />.
            </summary>
            <value>The cell spacing.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Grid.PdfGridStyle.HorizontalOverflowType">
            <summary>
            Gets or sets the type of the horizontal overflow of the <see cref="T:ComponentPro.Pdf.Grid.PdfGrid" />.
            </summary>
            <value>The type of the horizontal overflow.</value>
            <remarks>Default value: PdfHorizontalOverflowType.LastPage</remarks>
        </member>
        <member name="T:ComponentPro.Pdf.Grid.PdfHorizontalOverflowType">
            <summary>
            Describe the possible values of PdfHorizontalOverflowType. If a grid is drawn which doesn't fits within a single page, it will be splited to several pages.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Grid.PdfHorizontalOverflowType.NextPage">
            <summary>
            Draws the overflowing grid as next page
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Grid.PdfHorizontalOverflowType.LastPage">
            <summary>
            Draws the overflowing grid as last page
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.HtmlToPdf.HtmlToPdfLayoutParams">
            <summary>
            Represents the layout parameters.
            </summary>
            <remarks>This API is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
        </member>
        <member name="P:ComponentPro.Pdf.HtmlToPdf.HtmlToPdfLayoutParams.Bounds">
            <summary>
            Gets or sets the lay outing bounds.
            </summary>
            <remarks>This property is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
        </member>
        <member name="P:ComponentPro.Pdf.HtmlToPdf.HtmlToPdfLayoutParams.Format">
            <summary>
            Gets or sets the lay outing settings.
            </summary>
            <remarks>This property is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
        </member>
        <member name="P:ComponentPro.Pdf.HtmlToPdf.HtmlToPdfLayoutParams.Page">
            <summary>
            Gets or sets the starting layout page.
            </summary>
            <remarks>This property is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
        </member>
        <member name="P:ComponentPro.Pdf.HtmlToPdf.HtmlToPdfLayoutParams.VerticalOffsets">
            <summary>
            Gets or sets the vertical offsets.
            </summary>
            <remarks>This property is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
            <value>The vertical offsets.</value>
        </member>
        <member name="T:ComponentPro.Pdf.HtmlToPdf.HtmlToPdfResult">
            <summary>
            Represents the result of html to PDF conversion.
            </summary>
            <remarks>This API is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
        </member>
        <member name="M:ComponentPro.Pdf.HtmlToPdf.HtmlToPdfResult.#ctor">
            <remarks>This constructor is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
        </member>
        <member name="M:ComponentPro.Pdf.HtmlToPdf.HtmlToPdfResult.#ctor(System.IO.Stream)">
            <remarks>This API is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
        </member>
        <member name="M:ComponentPro.Pdf.HtmlToPdf.HtmlToPdfResult.#ctor(System.Drawing.Image[],System.Collections.ArrayList,System.Collections.ArrayList,System.Collections.ArrayList)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.HtmlToPdf.HtmlToPdfResult" /> class.
            </summary>
            <remarks>This constructor is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
            <param name="image">The image.</param>
            <param name="pageBreaks">The page breaks.</param>
            <param name="anchors">The anchors.</param>
            <param name="anchors">The document links.</param>
        </member>
        <member name="M:ComponentPro.Pdf.HtmlToPdf.HtmlToPdfResult.Render(ComponentPro.Pdf.PdfDocument)">
            <summary>
            Draw the rendered HTML image to the PDF document
            </summary>
            <remarks>This method is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
            <param name="document">The PDF document where the output should be drawn.</param>
        </member>
        <member name="M:ComponentPro.Pdf.HtmlToPdf.HtmlToPdfResult.Render(ComponentPro.Pdf.PdfPageBase,ComponentPro.Pdf.Graphics.PdfLayoutSettings)">
            <summary>
            Draw the rendered HTML image to the PDF document
            </summary>
            <remarks>This method is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
            <param name="page">The page where the output will draw.</param>
            <param name="format">The Metafile layout format.</param>
        </member>
        <member name="M:ComponentPro.Pdf.HtmlToPdf.HtmlToPdfResult.Render(ComponentPro.Pdf.PdfPageBase,ComponentPro.Pdf.Graphics.PdfLayoutSettings,ComponentPro.Pdf.Graphics.PdfLayoutResult@)">
            <summary>
            Draw the rendered HTML image to the PDF document
            </summary>
            <remarks>This method is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
            <param name="page">The page where the output will draw.</param>
            <param name="format">The Metafile layout format.</param>
            <param name="result">The Metafile layout result</param>
        </member>
        <member name="P:ComponentPro.Pdf.HtmlToPdf.HtmlToPdfResult.Images">
            <summary>
            Returns the image array after the conversion.
            </summary>
            <remarks>This property is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
            <value>The images.</value>
        </member>
        <member name="P:ComponentPro.Pdf.HtmlToPdf.HtmlToPdfResult.Location">
            <remarks>This property is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
        </member>
        <member name="P:ComponentPro.Pdf.HtmlToPdf.HtmlToPdfResult.MetafileTransparency">
            <remarks>This property is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
        </member>
        <member name="P:ComponentPro.Pdf.HtmlToPdf.HtmlToPdfResult.Quality">
            <summary>
            Handles the quality of Bitmap images in HTML.
            </summary>
            <remarks>This property is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
        </member>
        <member name="P:ComponentPro.Pdf.HtmlToPdf.HtmlToPdfResult.RenderedImage">
            <summary>
            Gets the rendered image.
            </summary>
            <remarks>This property is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
            <value>The rendered image.</value>
        </member>
        <member name="T:ComponentPro.Pdf.HtmlToPdf.HtmlToPdfToc">
            <summary>
              Class which provides method and properties to apply styles in automatic creation of a table of contents items for the H1 to H6 HTML elements
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.HtmlToPdf.HtmlToPdfToc.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.HtmlToPdf.HtmlToPdfToc" /> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.HtmlToPdf.HtmlToPdfToc.SetItemStyle(System.Int32,ComponentPro.Pdf.HtmlToPdf.HtmlToPdfTocStyle)">
            <summary>
             Sets the style of a table of contents item on a given level. The item level is a number from 1 to 6
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.HtmlToPdf.HtmlToPdfToc.MaximumHeaderLevel">
            <summary>
            Gets or sets the maximum header level (H1 to H6) :By default 6
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.HtmlToPdf.HtmlToPdfToc.TabLeader">
            <summary>
            Gets or sets the tab leader:By default Dot
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.HtmlToPdf.HtmlToPdfToc.TabLeaderChar">
            <summary>
            Gets or sets the tab leader character to connect the chapter titles and section headings to their corresponding page numbers
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.HtmlToPdf.HtmlToPdfToc.Title">
            <summary>
            Gets or sets the TOC title 
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.HtmlToPdf.HtmlToPdfToc.TitleAlignment">
            <summary>
            Gets or sets the horizontal title text alignment:By default left
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.HtmlToPdf.HtmlToPdfToc.TitleStyle">
            <summary>
            Gets or sets the TOC style of the table of contents title. When this property is set with a value, the default style of the title is replaced with the style given by this property.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.HtmlToPdf.HtmlToPdfToc.TabLeaderStyle">
            <summary>
                        The type defines the tab leader list to connect the chapter titles and section headings to their corresponding page numbers
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.HtmlToPdf.HtmlToPdfToc.TabLeaderStyle.None">
            <summary>
            Don't apply tab leader 
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.HtmlToPdf.HtmlToPdfToc.TabLeaderStyle.Dot">
            <summary>
            Connect the chapter titles and section headings to their corresponding page number with dotted line
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.HtmlToPdf.HtmlToPdfToc.TabLeaderStyle.Dash">
            <summary>
            Connect the chapter titles and section headings to their corresponding page number with dashed line
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.HtmlToPdf.HtmlToPdfToc.TabLeaderStyle.Solid">
            <summary>
                        Connect the chapter titles and section headings to their corresponding page numbers with solid line
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.HtmlToPdf.HtmlToPdfTocStyle">
            <summary>
            This class contains the necessary properties to apply style in the automatic creation of a table of contents in a PDF document.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.HtmlToPdf.HtmlToPdfTocStyle.BackgroundColor">
            <summary>
            Gets or sets the back ground color
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.HtmlToPdf.HtmlToPdfTocStyle.Font">
            <summary>
            Gets or sets the font
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.HtmlToPdf.HtmlToPdfTocStyle.ForeColor">
            <summary>
            Gets or sets the fore color
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.HtmlToPdf.HtmlToPdfTocStyle.Padding">
            <summary>
            Gets or sets the padding
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.HtmlToPdf.SinglePageLayout">
            <summary>
            Use this option to render the whole HTML content into a single PDF page
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.HtmlToPdf.SinglePageLayout.None">
            <summary>
            Do not apply single page layout
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.HtmlToPdf.SinglePageLayout.FitWidth">
            <summary>
            The page width is not resized to fit the HTML content to PDF page
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.HtmlToPdf.SinglePageLayout.FitHeight">
            <summary>
            The page height is not resized to fit the HTML content PDF page
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.HttpReadType">
            <summary>
            Specifies the different way of presenting the document at the client browser.
            </summary>
            <seealso cref="!:ComponentPro.Pdf.Page" /> Class   
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfBitmap" /> Class   
        </member>
        <member name="F:ComponentPro.Pdf.HttpReadType.Open">
            <summary>
            Send the generated document to the client browser and will open document inside browser or using application associated with .pdf extension externally.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.HttpReadType.Save">
            <summary>
            Send the generated document to the client browser and presents an option to save the document to disk or open inside the browser.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.ImagePreRenderEventArgs">
            <summary>
            Custom event argument class used to notify before image is rendered in the viewer.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.ImagePreRenderEventArgs.Filter">
            <summary>
            Returns filter names used in the image.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.ImagePreRenderEventArgs.Height">
            <summary>
            Gets or sets height of the image.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.ImagePreRenderEventArgs.ImageStream">
            <summary>
            Gets or sets the content stream of the image.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.ImagePreRenderEventArgs.Width">
            <summary>
            Gets or sets width of the image.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Actions.HttpMethod">
            <summary>
            Specifies Http request method.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Actions.HttpMethod.Get">
            <summary>
            Data submitted using Http Get method.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Actions.HttpMethod.Post">
            <summary>
            Data submitted using Http Post method.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.LineBorder">
            <summary>
            Represents the border style of the line annotation.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.LineBorder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Annotations.LineBorder"/> class.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.LineBorder.BorderStyle">
            <summary>
            Gets or sets the border style.
            </summary>
            <value> The <see cref="T:ComponentPro.Pdf.Forms.PdfBorderStyle"/> Specifies the available styles for a field border</value>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.LineBorder.BorderWidth">
            <summary>
            Gets or sets the width of the line border.
            </summary>
            <value>The width of the line border.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.LineBorder.DashArray">
            <summary>
            Gets or sets the line dash of the annotation
            </summary>
            <value>The dash array of the line border.</value>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.Pdf3DActivation">
            <summary>
            Represents the activation states for the 3D annotation. 
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.Pdf3DActivation.#ctor">
            <summary>
            Initializes the new instance of <see cref="T:ComponentPro.Pdf.Annotations.Pdf3DActivation"/> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.Pdf3DActivation.Initialize">
            <summary>
            Initializes the instance.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.Pdf3DActivation.Save">
            <summary>
            Saves an annotation.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.Pdf3DActivation.ActivationMode">
            <summary>
            Gets or sets the activation mode for the annotation.
            </summary>
            <value> <see cref="T:ComponentPro.Pdf.Annotations.Pdf3DActivationMode"/> specifies the available modes for activating a 3D annotation.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.Pdf3DActivation.ActivationState">
            <summary>
            Gets or sets the activation state for the annotation.
            </summary>
            <value> <see cref="T:ComponentPro.Pdf.Annotations.Pdf3DActivationState"/> specifies an activation state of the 3D annotation.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.Pdf3DActivation.DeactivationMode">
            <summary>
            Gets or sets the deactivation mode for the annotation.
            </summary>
            <value> <see cref="T:ComponentPro.Pdf.Annotations.Pdf3DDeactivationMode"/> specifies the available modes for deactivating a 3D annotation.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.Pdf3DActivation.ShowToolbar">
            <summary>
            Gets or sets a value indicating whether the toolbar should be displayed when the annotation is activated or not. 
            </summary>
            <value>If true, a toolbar should be displayed by default when the annotation is activated and given focus. If false, a toolbar should not be displayed by default. </value>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.Pdf3DActivation.ShowUI">
            <summary>
            Gets or sets a value indicating whether the UI for managing the 3D artwork should be displayed when the annotation is activated. 
            </summary>
            <value>If true, the user interface should be made visible when the annotation is activated. If false, the user interface should not be made visible by default.</value>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.Pdf3DActivationMode">
            <summary>
            Specifies the available modes for activating a 3D annotation. 
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.Pdf3DActivationMode.PageOpen">
            <summary>
            Represents that the annotation should be activated as soon as the page containing 
            the annotation is opened.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.Pdf3DActivationMode.PageVisible">
            <summary>
            Represents that the annotation should be activated as soon as any part of the page 
            containing the annotation becomes visible.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.Pdf3DActivationMode.ExplicitActivation">
            <summary>
            Represents that the annotation should remain inactive until explicitly activated 
            by a script or user action.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.Pdf3DActivationState">
            <summary>
            Specifies an activation state of the 3D annotation.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.Pdf3DActivationState.Instantiated">
            <summary>
            Represents that the state in which the artwork has been read and a run-time instance of 
            the artwork has been created. In this state, it can be rendered but script-driven 
            real-time modifications (that is, animations) are disabled.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.Pdf3DActivationState.Live">
            <summary>
            Represents that the artwork is instantiated, and it is being modified in real time to 
            achieve some animation effect. In the case of key frame animation, the artwork is 
            live while it is playing and then reverts to an instantiated state when playing 
            completes or is stopped.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.Pdf3DAnimation">
            <summary>
            Represents the lighting to apply for the 3D artwork.
            </summary> 
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.Pdf3DAnimation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Annotations.Pdf3DAnimation"/> class.
            </summary> 
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.Pdf3DAnimation.#ctor(ComponentPro.Pdf.Annotations.PDF3DAnimationType)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Annotations.Pdf3DAnimation"/> class with specified 3D animation type.
            </summary>
            <param name="type">PDF 3D Animation Type.</param> 
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.Pdf3DAnimation.Initialize">
            <summary>
            Initializes annotation object.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.Pdf3DAnimation.Save">
            <summary>
            Saves an annotation.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.Pdf3DAnimation.PlayCount">
            <summary>
            Gets or sets the play count. 
            </summary> 
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.Pdf3DAnimation.TimeMultiplier">
             <summary>
             Gets or sets the rendering opacity.
             </summary>
             <remarks>A positive number specifying the time multiplier to be used when running the animation. A value greater than one shortens the time it takes to play the animation, or effectively speeds up the animation.</remarks>
             
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.Pdf3DAnimation.Type">
            <summary>
            Gets or sets the type of the animation.
            </summary> 
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.PDF3DAnimationType">
            <summary>
            Specifies the available animation style for rendering the 3D artwork. 
            </summary> 
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PDF3DAnimationType.None">
            <summary>
            Represents that the Key frame animations should not be driven directly by 
            the viewer application. This value is used by documents that are intended 
            to drive animations through an alternate means, such as JavaScript.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PDF3DAnimationType.Linear">
            <summary>
            Represents that the Key frame animations are driven linearly from beginning to end. 
            This animation style results in a repetitive play through of the animation, 
            such as in a walking motion.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PDF3DAnimationType.Oscillating">
            <summary>
            Represents that the Key frame animations should oscillate along their time range. 
            This animation style results in a back-and-forth playing of the animation, 
            such as exploding or collapsing parts.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.Pdf3DAnnotation">
            <summary>
            Represents the 3D annotation for a PDF document.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.PdfFileAnnotation">
            <summary>
            Represents a base class for file attachment annotation. 
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfSoundAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.Pdf3DAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfAttachmentAnnotation"/> Class 
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.PdfAnnotation">
            <summary>
            Represents the base class for annotation objects.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfUriAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfSoundAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfRubberStampAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfPopupAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfTextWebLink"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfTextMarkupAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfLineAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfFileLinkAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfDocumentLinkAnnotation"/> Class
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfAnnotation.#ctor">
            <summary>
            Creates the Constructors.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfAnnotation.#ctor(System.Drawing.RectangleF)">
            <summary>
            Creates new annotation object with the specified bounds.
            </summary>
            <param name="bounds">Bounds of the annotation.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfAnnotation.#ctor(ComponentPro.Pdf.PdfPageBase,System.String)">
            <summary>
            Creates new annotation object with the specified PDF page and text.
            </summary>
            <param name="page">The page where annotation to be added.</param>
            <param name="text">The text.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfAnnotation.Initialize">
            <summary>
            Initializes annotation object.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfAnnotation.Save">
            <summary>
            Saves an annotation.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfAnnotation.SetAppearance(System.Boolean)">
            <summary>
            Specifies whether to set the default appearance for the annotation or not.
            </summary>
            <param name="appearance"></param>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfAnnotation.AnnotationFlags">
            <summary>
            Gets or sets the annotation flags.
            </summary>
            <Value>The <see cref="T:ComponentPro.Pdf.Annotations.PdfAnnotationFlags"/> Specifies the enumeration of the annotation flags. </Value> 
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfAnnotation.Author">
            <summary>
            Gets or Sets the Author of the annotation.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfAnnotation.Border">
            <summary>
            Gets or sets annotation's border properties like width, horizontal radius etc.
            </summary> 
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfAnnotation.Bounds">
            <summary>
            Gets or sets annotation's bounds in the PDF page.
            </summary>
            <Value> The bounds of the annotation.</Value>
            <remarks> If this property is not set, the bounds are calculated automatically
            based on <see cref="P:ComponentPro.Pdf.Annotations.PdfAnnotation.Location">Location</see> property and content of annotation.</remarks> 
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfAnnotation.Color">
            <summary>
            Gets or sets the annotation color.
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.Graphics.PdfColor" /> which draws the outline of the annotation.</value> 
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfAnnotation.Flatten">
            <summary>
                        Gets or sets the boolean flag to flatten the annotations.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfAnnotation.FlattenPopUps">
            <summary>
            Get or set flatten the Popups annotations
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfAnnotation.InnerColor">
            <summary>
            Get or set the inner color of the annotation. Default color is transparent
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfAnnotation.Location">
            <summary>
            Gets or sets the location of the annotation.
            </summary>
            <Value>  The position of the annotation.</Value> 
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfAnnotation.ModifiedDate">
            <summary>
            Gets or Sets the ModifiedDate of the annotation.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfAnnotation.Opacity">
            <summary>
            Gets or Sets the Opacity of the annotation.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfAnnotation.Page">
            <summary>
            Gets a page of the annotation. Read-Only.
            </summary>
            <Value>The <see cref="T:ComponentPro.Pdf.PdfPage" /> where the annotation is to be added. </Value> 
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfAnnotation.PdfTag">
            <summary>
            Gets or sets the tag for annotation
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfAnnotation.Size">
            <summary>
            Gets or sets the size of the annotation.
            </summary>
            <Value>  The size of the annotation.</Value> 
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfAnnotation.Subject">
            <summary>
            Gets or Sets the Subject of the annotation.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfAnnotation.Text">
            <summary>
            Gets or sets content of the annotation.
            </summary>
            <Value>The string value specifies the text of the annotation. </Value> 
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfFileAnnotation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Annotations.PdfFileAnnotation"/> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfFileAnnotation.#ctor(System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Annotations.PdfFileAnnotation"/> class with specified bounds.
            </summary>
            <param name="rectangle">Bounds of the annotation.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfFileAnnotation.Save">
            <summary>
            Saves an annotation.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfFileAnnotation.Appearance">
            <summary>
            Gets or sets the appearance of the annotation.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfFileAnnotation.FileName">
            <summary>
            Gets or sets file name of the annotation.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.Pdf3DAnnotation.#ctor(System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Annotations.PdfSoundAnnotation"/> class with specified bounds. 
            </summary>
            <param name="rectangle">The bounds of the annotation.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.Pdf3DAnnotation.#ctor(System.Drawing.RectangleF,System.String)">
            <param name="rectangle">The bounds of the annotation.</param>
            <param name="fileName">The name of the sound file.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.Pdf3DAnnotation.Initialize">
            <summary>
            Initializes instance.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.Pdf3DAnnotation.Save">
            <summary>
            Saves instance.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.Pdf3DAnnotation.Activation">
            <summary>
            Gets or sets the activation options for the annotation. 
            </summary>
            <Value> The <see cref="T:ComponentPro.Pdf.Annotations.Pdf3DActivation"/> specifies activation states for the annotation.</Value>        
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.Pdf3DAnnotation.DefaultView">
            <summary>
            Gets or sets the default view.
            </summary>
            <value>The default view of the annotation.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.Pdf3DAnnotation.FileName">
            <value>Filename with Full path</value>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.Pdf3DAnnotation.OnInstantiate">
            <summary>
            Gets or sets the code to execute when the 3D artwork is instantiated. 
            <value>JavaScript code to be executed when the 3D artwork is instantiated.</value>
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.Pdf3DAnnotation.Views">
            <summary>
            Gets the list of available views for the current 3D artwork. Read-Only.
            </summary>
            <value> The <see cref="T:ComponentPro.Pdf.Annotations.Pdf3DViewCollection"/> specifies the collection of PDF 3D views. </value>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.Pdf3DBackground">
            <summary>
            Represents the background appearance for 3D artwork. 
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.Pdf3DBackground.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Annotations.Pdf3DBackground"/> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.Pdf3DBackground.#ctor(ComponentPro.Pdf.Graphics.PdfColor)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Annotations.Pdf3DBackground"/> class with specified color.      
            </summary>
            <param name="color">The <see cref="T:ComponentPro.Pdf.Graphics.PdfColor"/> object specifying the background color for the 3D artwork.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.Pdf3DBackground.Initialize">
            <summary>
            Initializes annotation object.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.Pdf3DBackground.Save">
            <summary>
            Saves an annotation.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.Pdf3DBackground.ApplyToEntireAnnotation">
            <summary>
            Gets or sets a value indicating how the background is applied. 
            </summary>
            <value>True if the background is applied to entire annotation, false if the background is applied to annotation's 3D view box only.</value>      
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.Pdf3DBackground.Color">
            <summary>
            Gets or sets the background color of the 3D artwork.
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.Graphics.PdfColor" /> object specifying the background color for the 3D artwork. </value>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.Pdf3DCrossSection">
            <summary>
            Represents the clipping portion of the 3D artwork for the purpose of showing artwork cross sections.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.Pdf3DCrossSection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Annotations.Pdf3DCrossSection"/> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.Pdf3DCrossSection.Initialize">
            <summary>
            Initializes annotation object.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.Pdf3DCrossSection.Save">
            <summary>
            Saves an annotation.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.Pdf3DCrossSection.Center">
            <summary>
            Gets or sets the center of the cutting plane. 
            </summary>
            <value> The list of float value specifies the cutting plane of the section.</value>
            <remarks>A three element array specifying the center of rotation on the cutting plane in world space coordinates.</remarks>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.Pdf3DCrossSection.Color">
            <summary>
            Gets or sets the cutting plane color. 
            </summary>
            <value> <see cref="T:ComponentPro.Pdf.Graphics.PdfColor" /> specifies the cutting plane color of the 3D cross section.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.Pdf3DCrossSection.IntersectionColor">
            <summary>
            Gets or sets the intersection color.
            </summary>
            <value> <see cref="T:ComponentPro.Pdf.Graphics.PdfColor" /> specifies the  intersection color of the 3D cross section.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.Pdf3DCrossSection.IntersectionIsVisible">
            <summary>
            Gets or sets a value indicating whether the intersection of cutting plane with 3D artwork is visible.
            </summary>
            <Value> True if the intersection is visible , otherwise false.</Value>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.Pdf3DCrossSection.Opacity">
            <summary>
            Gets or sets the cutting plane opacity. 
            </summary>
            <Value> A float value specifies the opacity of the annotation.</Value>
            <remarks>The opacity is given in percents, 100 is full opacity, 0 is no opacity.</remarks>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.Pdf3DCrossSection.Orientation">
            <summary>
            Gets or sets the orientation of the cutting plane.
            </summary>
            <value>A three-element array specifying the orientation of the cutting plane in world space, where each value represents the orientation in relation to the X, Y, and Z axes, respectively. </value>
            <remarks>If the array has more than 3 elements, only the first 3 will be considered. Exactly one of the values must be null, indicating an initial state of the cutting plane that is perpendicular to the corresponding axis and clipping all geometry on the positive side of that axis. The other two values must be numbers indicating the rotation of the plane, in degrees, around their corresponding axes. The order in which these rotations are applied should match the order in which the values appear in the array. </remarks>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.Pdf3DCrossSectionCollection">
            <summary>
            Represents the collection of <see cref="T:ComponentPro.Pdf.Annotations.Pdf3DCrossSection"/> objects. 
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.Pdf3DCrossSectionCollection.Add(ComponentPro.Pdf.Annotations.Pdf3DCrossSection)">
            <summary>
            Adds the specified value.
            </summary>
            <param name="value">The 3d cross section to be added.</param>
            <returns></returns>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.Pdf3DCrossSectionCollection.Contains(ComponentPro.Pdf.Annotations.Pdf3DCrossSection)">
            <summary>
            Determines whether the specified cross section is in collection.
            </summary>
            <param name="value">The <see cref="T:ComponentPro.Pdf.Annotations.Pdf3DCrossSection"/></param>
            <returns>
            if it contains the specified value, set to <c>true</c>.
            </returns>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.Pdf3DCrossSectionCollection.IndexOf(ComponentPro.Pdf.Annotations.Pdf3DCrossSection)">
            <summary>
            Searches and finds the index of the specified cross section from the collection. 
            </summary>
            <param name="value">The <see cref="T:ComponentPro.Pdf.Annotations.Pdf3DCrossSection"/>.</param>
            <returns></returns>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.Pdf3DCrossSectionCollection.Insert(System.Int32,ComponentPro.Pdf.Annotations.Pdf3DCrossSection)">
            <summary>
            Inserts the cross section at specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.Pdf3DCrossSectionCollection.Remove(ComponentPro.Pdf.Annotations.Pdf3DCrossSection)">
            <summary>
            Removes the specified cross section form the collection.
            </summary>
            <param name="value">The cross section to be removed.</param>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.Pdf3DCrossSectionCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:ComponentPro.Pdf.Annotations.Pdf3DCrossSection"/> at the specified index.
            </summary>        
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.Pdf3DDeactivationMode">
            <summary>
            Specifies the available modes for deactivating a 3D annotation. 
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.Pdf3DDeactivationMode.PageClose">
            <summary>
            Represents that the annotation should be deactivated as soon as the page is closed.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.Pdf3DDeactivationMode.PageInvisible">
            <summary>
            Represents that the annotation should be deactivated as soon as the page containing 
            the annotation becomes invisible.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.Pdf3DDeactivationMode.ExplicitDeactivation">
            <summary>
            Represents that the annotation should remain active until explicitly deactivated by a 
            script or user action.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.Pdf3DDeactivationState">
            <summary>
            Specifies the available states upon deactivating a 3D annotation. 
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.Pdf3DDeactivationState.Uninstantiated">
            <summary>
            Represents the initial state of the artwork before it has been used in any way.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.Pdf3DDeactivationState.Instantiated">
            <summary>
            Represents that the state in which the artwork has been read and a run-time instance of 
            the artwork has been created. In this state, it can be rendered but script-driven 
            real-time modifications (that is, animations) are disabled.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.Pdf3DDeactivationState.Live">
            <summary>
            Represents that the artwork is instantiated, and it is being modified in real time to 
            achieve some animation effect. In the case of key frame animation, the artwork is 
            live while it is playing and then reverts to an instantiated state when playing 
            completes or is stopped.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.Pdf3DLighting">
            <summary>
            Represents the lighting scheme for the 3D artwork.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.Pdf3DLighting.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Annotations.Pdf3DLighting"/> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.Pdf3DLighting.#ctor(ComponentPro.Pdf.Annotations.Pdf3DLightingStyle)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Annotations.Pdf3DLighting"/> class with specified lighting style.
            </summary>
            <param name="style">The <see cref="T:ComponentPro.Pdf.Annotations.Pdf3DLightingStyle"/> object specifies the style of the 3D artwork.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.Pdf3DLighting.Initialize">
            <summary>
            Initializes annotation object.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.Pdf3DLighting.Save">
            <summary>
            Saves an annotation.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.Pdf3DLighting.Style">
            <summary>
            Gets or sets the lighting style of the 3D artwork.
            </summary>
            <Value> The <see cref="T:ComponentPro.Pdf.Annotations.Pdf3DLightingStyle"/> specifies the available styles for applying light to 3D artwork. </Value>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.Pdf3DLightingStyle">
            <summary>
            Specifies the available styles for applying light to 3D artwork. 
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.Pdf3DLightingStyle.Artwork">
            <summary>
            The Lights as specified in the 3D artwork.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.Pdf3DLightingStyle.None">
            <summary>
            The lighting specified in the 3D artwork is ignored.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.Pdf3DLightingStyle.White">
            <summary>
            Three blue-grey infinite lights.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.Pdf3DLightingStyle.Day">
            <summary>
            Three light-grey infinite lights.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.Pdf3DLightingStyle.Night">
            <summary>
            One yellow, one aqua, and one blue infinite light.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.Pdf3DLightingStyle.Hard">
            <summary>
            Three grey infinite lights.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.Pdf3DLightingStyle.Primary">
            <summary>
            One red, one green, and one blue infinite light.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.Pdf3DLightingStyle.Blue">
            <summary>
            Three blue infinite lights.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.Pdf3DLightingStyle.Red">
            <summary>
            Three red infinite lights.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.Pdf3DLightingStyle.Cube">
            <summary>
            Six grey infinite lights aligned with the major axes.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.Pdf3DLightingStyle.CAD">
            <summary>
            Three grey infinite lights and one light attached to the camera.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.Pdf3DLightingStyle.Headlamp">
            <summary>
            Single infinite light attached to the camera.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.Pdf3DNode">
            <summary>
            Represents the particular areas of 3D artwork and the opacity and visibility with which individual nodes are displayed.  
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.Pdf3DNode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Annotations.Pdf3DNode"/> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.Pdf3DNode.Initialize">
            <summary>
            Initializes annotation object.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.Pdf3DNode.Save">
            <summary>
            Saves an annotation.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.Pdf3DNode.Matrix">
            <summary>
            Gets or sets the 3D transformation matrix. 
            </summary>
            <value>A 12-element 3D transformation matrix that specifies the position and orientation of this node, relative to its parent, in world coordinates. </value>
            <remarks>If the array has more than 12 elements, only the first 12 will be considered.</remarks>       
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.Pdf3DNode.Name">
            <summary>
            Gets or sets the node name. 
            </summary>
            <value>The name of the 3D node.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.Pdf3DNode.Opacity">
            <summary>
            Gets or sets the cutting plane opacity. 
            </summary>
            <value>A number indicating the opacity of the cutting plane using a standard additive blend mode. </value>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.Pdf3DNode.Visible">
            <summary>
            Gets or sets a value indicating whether the node is visible or not. 
            </summary>
            <value>True if the node is visible , otherwise false.</value>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.Pdf3DNodeCollection">
            <summary>
            Represents a collection of <see cref="T:ComponentPro.Pdf.Annotations.Pdf3DNode"/> objects. 
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.Pdf3DNodeCollection.Add(ComponentPro.Pdf.Annotations.Pdf3DNode)">
            <summary>
            Adds the specified node into the collection.
            </summary>
            <param name="value">The <see cref="T:ComponentPro.Pdf.Annotations.Pdf3DNode"/></param>
            <returns></returns>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.Pdf3DNodeCollection.Contains(ComponentPro.Pdf.Annotations.Pdf3DNode)">
            <summary>
            Determines whether the node is in the collection.
            </summary>
            <param name="value">The node to search for.</param>
            <returns>
            if it contains the specified value, set to <c>true</c>.
            </returns>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.Pdf3DNodeCollection.IndexOf(ComponentPro.Pdf.Annotations.Pdf3DNode)">
            <summary>
            Searches and finds the index of the specified node from the collection. 
            </summary>
            <param name="value">The node to be searched.</param>
            <returns></returns>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.Pdf3DNodeCollection.Insert(System.Int32,ComponentPro.Pdf.Annotations.Pdf3DNode)">
            <summary>
            Inserts the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.Pdf3DNodeCollection.Remove(ComponentPro.Pdf.Annotations.Pdf3DNode)">
            <summary>
            Removes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.Pdf3DNodeCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:ComponentPro.Pdf.Annotations.Pdf3DNode"/> at the specified index.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.Pdf3DProjection">
            <summary>
             Represents the mapping of 3D camera co-ordinates onto the target coordinate system of the annotation.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.Pdf3DProjection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Annotations.Pdf3DProjection"/> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.Pdf3DProjection.#ctor(ComponentPro.Pdf.Annotations.Pdf3DProjectionType)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Annotations.Pdf3DProjection"/> class with specified projection type.
            </summary>
            <param name="type">The Pdf3D Projection Type.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.Pdf3DProjection.Initialize">
            <summary>
            Initializes annotation object.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.Pdf3DProjection.Save">
            <summary>
            Saves an annotation.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.Pdf3DProjection.ClipStyle">
             <summary>
             Gets or sets the projection ClipStyle.
             </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.Pdf3DProjection.FarClipDistance">
            <summary>
            Gets or sets the far clipping distance.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.Pdf3DProjection.FieldOfView">
            <summary>
            Gets or sets the field of view.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.Pdf3DProjection.NearClipDistance">
            <summary>
            Gets or sets the near clipping distance.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.Pdf3DProjection.OrthoScaleMode">
            <summary>
             Gets or sets the scale mode for orthographic projections.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.Pdf3DProjection.ProjectionType">
            <summary>
            Gets or sets the type of the projection.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.Pdf3DProjection.Scaling">
            <summary>
            Gets or sets the projection scaling.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.Pdf3DProjectionClipStyle">
            <summary>
            Specifies the available clipping style of the 3D annotation.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.Pdf3DProjectionClipStyle.ExplicitNearFar">
            <summary>
            Represents the Clipping style.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.Pdf3DProjectionClipStyle.AutomaticNearFar">
            <summary>
            Represents the Clipping style.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.Pdf3DProjectionOrthoScaleMode">
            <summary>
            Specifies the available Ortho projection scaling mode of the 3D annotation.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.Pdf3DProjectionOrthoScaleMode.Width">
            <summary>
            Scale to fit the width of the annotation.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.Pdf3DProjectionOrthoScaleMode.Height">
            <summary>
            Scale to fit the height of the annotation.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.Pdf3DProjectionOrthoScaleMode.Min">
            <summary>
            Scale to fit the lesser of width or height of the annotation.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.Pdf3DProjectionOrthoScaleMode.Max">
            <summary>
            Scale to fit the greater of width or height of the annotation.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.Pdf3DProjectionOrthoScaleMode.Absolute">
            <summary>
            No scaling should occur due to binding.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.Pdf3DProjectionType">
            <summary>
            Specifies the available projection type of the 3D annotation.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.Pdf3DProjectionType.Orthographic">
            <summary>
            Represents Orthographic projection
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.Pdf3DProjectionType.Perspective">
            <summary>
            Represents Perspective projection.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.Pdf3DRendermode">
            <summary>
            Represents the rendering mode of the 3D artwork. 
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.Pdf3DRendermode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Annotations.Pdf3DRendermode"/> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.Pdf3DRendermode.#ctor(ComponentPro.Pdf.Annotations.Pdf3DRenderStyle)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Annotations.Pdf3DRendermode"/> class with specified rendering style.
            </summary>
            <param name="style">The <see cref="T:ComponentPro.Pdf.Annotations.Pdf3DRenderStyle"/> object specifies the rendering style of the 3D artwork.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.Pdf3DRendermode.Initialize">
            <summary>
            Initializes annotation object.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.Pdf3DRendermode.Save">
            <summary>
            Saves an annotation.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.Pdf3DRendermode.AuxilaryColor">
            <summary>
            Gets or sets the auxiliary color.
            </summary> 
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.Pdf3DRendermode.CreaseValue">
            <summary>
            Gets or sets the crease value.
            </summary>
            <remarks>The crease value is specified in degrees, from 0 to 360.</remarks>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.Pdf3DRendermode.FaceColor">
            <summary>
            Gets or sets the face color.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.Pdf3DRendermode.Opacity">
            <summary>
            Gets or sets the rendering opacity. 
            </summary>
            <remarks>The opacity is given in percents, 100 is full opacity, 0 is no opacity.</remarks>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.Pdf3DRendermode.Style">
            <summary>
            Gets or sets the type of the projection.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.Pdf3DRenderStyle">
            <summary>
            Specifies the available rendering style of the 3D artwork. 
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.Pdf3DRenderStyle.Solid">
            <summary>
            Displays textured and lit geometric shapes. In the case of artwork 
            that conforms to the Universal 3D File Format specification, these 
            shapes are triangles.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.Pdf3DRenderStyle.SolidWireframe">
            <summary>
            Displays textured and lit geometric shapes (triangles) with single 
            color edges on top of them.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.Pdf3DRenderStyle.Transparent">
            <summary>
            Displays textured and lit geometric shapes (triangles) with an added 
            level of transparency.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.Pdf3DRenderStyle.TransparentWireframe">
            <summary>
            Displays textured and lit geometric shapes (triangles) with an added 
            level of transparency, with single color opaque edges on top of it.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.Pdf3DRenderStyle.BoundingBox">
            <summary>
            Displays the bounding box edges of each node, aligned with the axes 
            of the local coordinate space for that node.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.Pdf3DRenderStyle.TransparentBoundingBox">
            <summary>
            Displays bounding boxes faces of each node, aligned with the axes of 
            the local coordinate space for that node, with an added level of transparency.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.Pdf3DRenderStyle.TransparentBoundingBoxOutline">
            <summary>
            Displays bounding boxes edges and faces of each node, aligned with the axes of 
            the local coordinate space for that node, with an added level of transparency.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.Pdf3DRenderStyle.Wireframe">
            <summary>
            Displays only edges in a single color.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.Pdf3DRenderStyle.ShadedWireframe">
            <summary>
            Displays only edges, though interpolates their color between their two vertices 
            and applies lighting.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.Pdf3DRenderStyle.HiddenWireframe">
            <summary>
            Displays edges in a single color, though removes back-facing and obscured edges.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.Pdf3DRenderStyle.Vertices">
            <summary>
            Displays only vertices in a single color.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.Pdf3DRenderStyle.ShadedVertices">
            <summary>
            Displays only vertices, though uses their vertex color and applies lighting.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.Pdf3DRenderStyle.Illustration">
            <summary>
            Displays silhouette edges with surfaces, removes obscured lines.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.Pdf3DRenderStyle.SolidOutline">
            <summary>
            Displays silhouette edges with lit and textured surfaces, removes obscured lines.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.Pdf3DRenderStyle.ShadedIllustration">
            <summary>
            Displays silhouette edges with lit and textured surfaces and an additional emissive 
            term to remove poorly lit areas of the artwork.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.Pdf3DView">
            <summary>
            Represents a attributes to be applied to the virtual camera associated with a 3D annotation. 
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.Pdf3DView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Annotations.Pdf3DView"/> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.Pdf3DView.Initialize">
            <summary>
            Initializes annotation object.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.Pdf3DView.Save">
            <summary>
            Saves an annotation.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.Pdf3DView.Background">
            <summary>
            Gets or sets the background for this view.  
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.Pdf3DView.CameraToWorldMatrix">
            <summary>
            Gets or sets the 3D transformation matrix. 
            </summary>
            <value>A 12-element 3D transformation matrix that specifies a position and orientation of the camera in world coordinates. </value>
            <remarks>If the array has more than 12 elements, only the first 12 will be considered.</remarks>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.Pdf3DView.CenterOfOrbit">
            <summary>
            Gets or sets the center of orbit for 3D artwork. 
            </summary>
            <value>A non-negative number indicating a distance in the camera coordinate system along the z axis to the center of orbit for this view. </value>
            <remarks>If this value is negative, the viewer application must determine the center of orbit.</remarks>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.Pdf3DView.CrossSections">
            <summary>
            Gets the list of cross sections for this view. 
            </summary>
            <value>A list of PDF3DCrossSection objects available for this view.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.Pdf3DView.ExternalName">
            <summary>
            Gets or sets the view's external name.
            </summary>
            <value>The external name of the view, suitable for presentation in a user interface.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.Pdf3DView.InternalName">
            <summary>
            Gets or sets the view's internal name.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.Pdf3DView.LightingScheme">
            <summary>
            Gets or sets the lighting scheme for this view. 
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.Pdf3DView.Nodes">
            <summary>
            Gets the list of 3D nodes for this view. 
            </summary>
            <value>A list of PDF3DNode objects available for this view.</value>        
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.Pdf3DView.Projection">
            <summary>
            Gets or sets the projection for this view. 
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.Pdf3DView.RenderMode">
            <summary>
            Gets or sets the rendering mode for this view. 
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.Pdf3DView.ResetNodesState">
            <summary>
            Gets or sets a value indicating whether nodes specified in the Nodes collection are returned to their original states (as specified in the 3D artwork) before applying transformation matrices and opacity settings specified in the node dictionaries. 
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.Pdf3DView.ViewNodeName">
            <summary>
            Gets or sets the name of the view node.         
            </summary>
            <remarks>The view node in the content stream defines all the properties for viewing the 3D artwork. If both ViewNodeName and CameraToWorldMatrix are specified, then ViewNodeName takes precedence.</remarks>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.Pdf3DViewCollection">
            <summary>
            Represents a collection of Pdf3DView objects. 
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.Pdf3DViewCollection.Add(ComponentPro.Pdf.Annotations.Pdf3DView)">
            <summary>
            Adds the specified 3d view into collection.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.Pdf3DViewCollection.Contains(ComponentPro.Pdf.Annotations.Pdf3DView)">
            <summary>
            Determines whether the specified view is in collection.
            </summary>
            <param name="value">The <see cref="T:ComponentPro.Pdf.Annotations.Pdf3DView"/>.</param>
            <returns>
            if it contains the specified value, set to <c>true</c>.
            </returns>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.Pdf3DViewCollection.IndexOf(ComponentPro.Pdf.Annotations.Pdf3DView)">
            <summary>
            search and find the Pdf3DView object.
            </summary>
            <param name="value"><see cref="T:ComponentPro.Pdf.Annotations.Pdf3DView"/></param>
            <returns>Pdf3DView</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.Pdf3DViewCollection.Insert(System.Int32,ComponentPro.Pdf.Annotations.Pdf3DView)">
            <summary>
            Inserts the view at specified index.
            </summary>
            <param name="index">The index where to insert the element.</param>
            <param name="value">The view to be inserted in the collection..</param>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.Pdf3DViewCollection.Remove(ComponentPro.Pdf.Annotations.Pdf3DView)">
            <summary>
            Removes the specified value from the collection.
            </summary>
            <param name="value">The Pdf3DView object.</param>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.Pdf3DViewCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:ComponentPro.Pdf.Annotations.Pdf3DView"/> at the specified index.
            </summary>
            <value>Pdf3DView</value>
        </member>
        <member name="T:ComponentPro.Pdf.Actions.PdfAction">
            <summary>
            Represents base class for all action types.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.IPdfObject" /> Interface
        </member>
        <member name="M:ComponentPro.Pdf.Actions.PdfAction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Actions.PdfAction"/> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Actions.PdfAction.Initialize">
            <summary>
            Initializes an instance.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.PdfActionAnnotation">
            <summary>
            Represents the annotation with associated action.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfActionLinkAnnotation"/> Class
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.PdfActionLinkAnnotation">
            <summary>
            Represents base class for link annotations with associated action.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.PdfLinkAnnotation">
            <summary>
            Represents the base class for the link annotations.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfDocumentLinkAnnotation"/> Class
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfLinkAnnotation.#ctor">
            <summary>
            Initializes new instance of <see cref="T:ComponentPro.Pdf.Annotations.PdfLinkAnnotation"/> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfLinkAnnotation.#ctor(System.Drawing.RectangleF)">
            <summary>
            Initializes new instance of <see cref="T:ComponentPro.Pdf.Annotations.PdfLinkAnnotation"/> class with specified bounds.
            </summary>
            <param name="rectangle">The bounds of the annotation.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfLinkAnnotation.Initialize">
            <summary>
            Initializes annotation object.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfLinkAnnotation.HighlightMode">
            <summary>
            Gets or sets the highlight mode of the link annotation.
            </summary>
            <value> The <see cref="T:ComponentPro.Pdf.Forms.PdfHighlightMode"/> enumeration value which sets the highlight mode.</value>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfActionLinkAnnotation.#ctor(System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Annotations.PdfActionLinkAnnotation"/> class with specified bounds.
            </summary>
            <param name="rectangle">The bounds of the annotation.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfActionLinkAnnotation.#ctor(System.Drawing.RectangleF,ComponentPro.Pdf.Actions.PdfAction)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Annotations.PdfActionLinkAnnotation"/> class with specified bounds and action to be performed.
            </summary>
            <param name="rectangle">The bounds specifies the location of the drawn text.</param>
            <param name="action">The <see cref="T:ComponentPro.Pdf.Actions.PdfAction"/> specifies an action to be executed when the link is activated.</param>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfActionLinkAnnotation.Action">
            <summary>
            Gets or sets the action for the link annotation.
            </summary>
            <value>The action to be executed when the link is activated.</value>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfActionAnnotation.#ctor(System.Drawing.RectangleF,ComponentPro.Pdf.Actions.PdfAction)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Annotations.PdfActionAnnotation"/> class with specified bounds and action.
            </summary>
            <param name="rectangle">The bounds of the annotation.</param>
            <param name="action">The PDF action that can be triggered with different actions. </param>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfActionAnnotation.Save">
            <summary>
            Saves annotation object.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Actions.PdfActionCollection">
            <summary>
            Represents collection of actions.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfCollection" /> Class.
        </member>
        <member name="T:ComponentPro.Pdf.PdfCollection">
            <summary>
            The class used to handle the collection of PdF objects
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.PdfCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.PdfCollection" /> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.PdfCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>Returns an enumerator that iterates through a collection.</returns>
        </member>
        <member name="P:ComponentPro.Pdf.PdfCollection.Count">
            <summary>
            Gets number of the elements in the collection.
            </summary>
            <value>The total number of elements in the collection.</value>
        </member>
        <member name="P:ComponentPro.Pdf.PdfCollection.List">
            <summary>
            Gets internal list of the collection.
            </summary>      
        </member>
        <member name="M:ComponentPro.Pdf.Actions.PdfActionCollection.Add(ComponentPro.Pdf.Actions.PdfAction)">
            <summary>
            Adds the specified action to the collection
            </summary>
            <param name="action">The <see cref="T:ComponentPro.Pdf.Actions.PdfAction"/></param>
            <returns>The index of the action in the collection</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Actions.PdfActionCollection.Clear">
            <summary>
            Clears the action collection.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Actions.PdfActionCollection.Contains(ComponentPro.Pdf.Actions.PdfAction)">
            <summary>
            Determines whether the action is contained within collection.
            </summary>
            <param name="action">The  <see cref="T:ComponentPro.Pdf.Actions.PdfAction"/>.</param>
            <returns>
            Value, indicating the presents of the action in collection.
            </returns>
        </member>
        <member name="M:ComponentPro.Pdf.Actions.PdfActionCollection.IndexOf(ComponentPro.Pdf.Actions.PdfAction)">
            <summary>
            Gets the index of the action.
            </summary>
            <param name="action">The <see cref="T:ComponentPro.Pdf.Actions.PdfAction"/>.</param>
            <returns>Index of the action</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Actions.PdfActionCollection.Insert(System.Int32,ComponentPro.Pdf.Actions.PdfAction)">
            <summary>
            Inserts the action at the specified position.
            </summary>
            <param name="index">The index in the collection where the action to be inserted</param>
            <param name="action">The <see cref="T:ComponentPro.Pdf.Actions.PdfAction"/></param>
        </member>
        <member name="M:ComponentPro.Pdf.Actions.PdfActionCollection.Remove(ComponentPro.Pdf.Actions.PdfAction)">
            <summary>
            Removes the specified action from the collection
            </summary>
            <param name="action">The  <see cref="T:ComponentPro.Pdf.Actions.PdfAction"/>.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Actions.PdfActionCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the action at the specified index from the collection
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="T:ComponentPro.Pdf.Actions.PdfActionDestination">
            <summary>
            Specifies the available named actions supported by the viewer. 
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Actions.PdfActionDestination.FirstPage">
            <summary>
            Navigate to first page.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Actions.PdfActionDestination.LastPage">
            <summary>
            Navigate to last page.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Actions.PdfActionDestination.NextPage">
            <summary>
            Navigate to next page.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Actions.PdfActionDestination.PrevPage">
            <summary>
            Navigate to previous page.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Actions.PdfAnnotationActions">
            <summary>
            Represents additional actions of the annotations.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Actions.PdfAnnotationActions.GotFocus">
            <summary>
            Gets or sets the action to be performed when the annotation receives the 
            input focus.
            </summary>
            <value>The got focus action.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Actions.PdfAnnotationActions.LostFocus">
            <summary>
            Gets or sets the action to be performed when the annotation loses the 
            input focus.
            </summary>
            <value>The lost focus action.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Actions.PdfAnnotationActions.MouseDown">
            <summary>
            Gets or sets the action to be performed when the mouse button is pressed inside the 
            annotation�s active area.
            </summary>
            <value>The mouse down action.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Actions.PdfAnnotationActions.MouseEnter">
            <summary>
            Gets or sets the action to be performed when the cursor enters the annotation�s 
            active area.
            </summary>
            <value>The mouse enter action.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Actions.PdfAnnotationActions.MouseLeave">
            <summary>
            Gets or sets the action to be performed when the cursor exits the annotation�s 
            active area.
            </summary>
            <value>The mouse leave action.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Actions.PdfAnnotationActions.MouseUp">
            <summary>
            Gets or sets the action to be performed when the mouse button is released 
            inside the annotation�s active area..
            </summary>
            <value>The mouse up action.</value>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.PdfAnnotationBorder">
            <summary>
            Represents the appearance of an annotation's border.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfAnnotationBorder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Annotations.PdfAnnotationBorder"/> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfAnnotationBorder.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Annotations.PdfAnnotationBorder"/> class with specified border width.
            </summary>
            <param name="borderWidth">A float value specifying the width of the annotation's border.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfAnnotationBorder.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Annotations.PdfAnnotationBorder"/> class with specified border width, horizontal and vertical radius.
            </summary>
            <param name="borderWidth">A float value specifying the width of the annotation's border.</param>
            <param name="horizontalRadius">A float value specifying the horizontal corner radius value.</param>
            <param name="verticalRadius">A float value specifying the vertical corner radius value.</param>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfAnnotationBorder.HorizontalRadius">
            <summary>
            Gets or sets a horizontal corner radius.
            </summary>
            <value>The horizontal radius of the annotation.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfAnnotationBorder.VerticalRadius">
            <summary>
            Gets or sets a vertical corner radius.
            </summary>
            <value>The vertical radius of the annotation.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfAnnotationBorder.Width">
            <summary>
            Gets or sets the width of annotation's border. 
            </summary>
            <value>A float value specifying the width of the annotation's border. </value>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.PdfAnnotationCollection">
            <summary>
            Represents the collection of <see cref="T:ComponentPro.Pdf.Annotations.PdfAnnotation"/> objects.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfAnnotationCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Annotations.PdfAnnotationCollection"/> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfAnnotationCollection.#ctor(ComponentPro.Pdf.PdfPage)">
            <summary>
            Initializes a new instance of the PdfAnnotationCollection class with the specified page.
            </summary>
            <param name="page">Page which collection is created for.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfAnnotationCollection.Add(ComponentPro.Pdf.Annotations.PdfAnnotation)">
            <summary>
            Adds a new annotation to the collection. 
            </summary>
            <param name="annotation">The new annotation to be added to the collection.</param>
            <returns>The position of the annotation in the collection.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfAnnotationCollection.Clear">
            <summary>
            Removes all the annotations from the collection.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfAnnotationCollection.Contains(ComponentPro.Pdf.Annotations.PdfAnnotation)">
            <summary>
            Determines whether a specified annotation is in the annotation collection. 
            </summary>
            <param name="annotation">The annotation to search for.</param>
            <returns>True, if annotation is contained in collection. Otherwise - false.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfAnnotationCollection.DoAdd(ComponentPro.Pdf.Annotations.PdfAnnotation)">
            <summary>
            Adds a Annotation to collection.
            </summary>
            <param name="field">The Annotation.</param>
            <returns></returns>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfAnnotationCollection.DoClear">
            <summary>
            Clears the collection.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfAnnotationCollection.DoInsert(System.Int32,ComponentPro.Pdf.Annotations.PdfAnnotation)">
            <summary>
            Inserts a annotation into collection.
            </summary>
            <param name="index">The index.</param>
            <param name="field">The annotation.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfAnnotationCollection.DoRemove(ComponentPro.Pdf.Annotations.PdfAnnotation)">
            <summary>
            Removes the annotation.
            </summary>
            <param name="annot"></param>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfAnnotationCollection.DoRemoveAt(System.Int32)">
            <summary>
            Removes the annotation at the specified position.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfAnnotationCollection.IndexOf(ComponentPro.Pdf.Annotations.PdfAnnotation)">
            <summary>
            Searches the index of the specified annotation from the collection. 
            </summary>
            <param name="annotation">The annotation to be searched.</param>
            <returns>Index of the element in the collection, if exists, or -1 if the element does not exist in the collection.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfAnnotationCollection.Insert(System.Int32,ComponentPro.Pdf.Annotations.PdfAnnotation)">
            <summary>
            Inserts an annotation to the collection at the specified index.
            </summary>
            <param name="index">The index where to insert the element.</param>
            <param name="annotation">The annotation to be inserted in the collection.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfAnnotationCollection.Remove(ComponentPro.Pdf.Annotations.PdfAnnotation)">
            <summary>
            Removes the specified annotation from the collection. 
            </summary>
            <param name="annot">The annotation to be removed.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfAnnotationCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the annotation at the specified index.
            </summary>
            <param name="index">The index of the element to be removed.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfAnnotationCollection.SetPrint(ComponentPro.Pdf.Annotations.PdfAnnotation)">
            <summary>
            prints the specified annotation. 
            </summary>
            <param name="annot">The annotation to be printed.</param>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfAnnotationCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ComponentPro.Pdf.Annotations.PdfAnnotation"/> object at the specified index. Read-Only.
            </summary>
            <value> The <see cref="T:ComponentPro.Pdf.Annotations.PdfAnnotation"/> specifies the attachment at the specified position. </value>
            <param name="index">The index value of the annotation in the collection. </param>
            <returns>The annotation object at the specified position.</returns>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.PdfAnnotationFlags">
            <summary>
            Specifies the enumeration of the annotation flags.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfAnnotationFlags.Default">
            <summary>
            Default value.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfAnnotationFlags.Invisible">
            <summary>
            Annotation flag's key.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfAnnotationFlags.Hidden">
            <summary>
            Annotation flag's key.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfAnnotationFlags.Print">
            <summary>
            Annotation flag's key.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfAnnotationFlags.NoZoom">
            <summary>
            Annotation flag's key.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfAnnotationFlags.NoRotate">
            <summary>
            Annotation flag's key.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfAnnotationFlags.NoView">
            <summary>
            Annotation flag's key.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfAnnotationFlags.ReadOnly">
            <summary>
            Annotation flag's key.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfAnnotationFlags.Locked">
            <summary>
            Annotation flag's key.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfAnnotationFlags.ToggleNoView">
            <summary>
            Annotation flag's key.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.PdfAnnotationIntent">
            <summary>
            Specifies the annotation text intent.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.PdfAppearance">
            <summary>
            Represents the appearance of an annotation.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfAppearance.#ctor(ComponentPro.Pdf.Annotations.PdfAnnotation)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Annotations.PdfAppearance"/> class.
            </summary>
            <param name="annotation">The <see cref="T:ComponentPro.Pdf.Annotations.PdfAnnotation"/> object specifies the annotation.</param>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfAppearance.MouseHover">
            <summary>
            Gets or sets <see cref="T:ComponentPro.Pdf.Graphics.PdfTemplate" /> object which applied to the annotation on hovering the mouse.
            </summary>
            <Value> The <see cref="T:ComponentPro.Pdf.Graphics.PdfTemplate" /> specifies the PDF template object when mouse hover.</Value>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfAppearance.Normal">
            <summary>
            Gets or sets PdfTmplate object which applied to annotation in normal state.
            </summary>
            <Value> The <see cref="T:ComponentPro.Pdf.Graphics.PdfTemplate" /> specifies the PDF template object.</Value>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfAppearance.Pressed">
            <summary>
            Gets or sets <see cref="T:ComponentPro.Pdf.Graphics.PdfTemplate" /> object which applied to an annotation when mouse button is pressed.
            </summary>
            <Value> The <see cref="T:ComponentPro.Pdf.Graphics.PdfTemplate" /> specifies the PDF template object when Pressed.</Value>
        </member>
        <member name="T:ComponentPro.Pdf.Forms.PdfAppearanceField">
            <summary>
            Represents form field with appearance custom support.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfStyledField"/> Class   
        </member>
        <member name="T:ComponentPro.Pdf.Forms.PdfStyledField">
            <summary>
            Represents form's field with style parameters.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfField"/> Class    
        </member>
        <member name="T:ComponentPro.Pdf.Forms.PdfField">
            <summary>
            Represents field of the PDF document's interactive form.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.IPdfObject" /> Interface  
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfField.#ctor(ComponentPro.Pdf.PdfPageBase,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Forms.PdfField"/> class with the specific page and name.
            </summary>
            <param name="page">The page where the field should be placed.</param>
            <param name="name">The name.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfField.DefineDefaultAppearance">
            <summary>
            Defines default appearance.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfField.Initialize">
            <summary>
            Initializes this instance.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfField.DisableAutoFormat">
            <summary>
            Gets or sets a value indicating whether to disable auto format this <see cref="T:ComponentPro.Pdf.Forms.PdfField"/>.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfField.Export">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:ComponentPro.Pdf.Forms.PdfField"/> is export.
            </summary>
            <value><c>true</c> if export; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfField.Flatten">
            <summary>
            Gets or sets a value indicating whether to flatten this <see cref="T:ComponentPro.Pdf.Forms.PdfField"/>.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfField.Form">
            <summary>
            Gets the form of the <see cref="T:ComponentPro.Pdf.Forms.PdfField"/>.[Read-Only]
            </summary>
            <value>The form.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfField.MappingName">
            <summary>
            Gets or sets the mapping name to be used when exporting interactive form 
            field data from the document.
            </summary>
            <value>The mapping name.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfField.Name">
            <summary>
            Gets the name of the <see cref="T:ComponentPro.Pdf.Forms.PdfField"/>.[Read-Only]
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfField.Page">
            <summary>
            Gets the page of the field.[Read-Only]
            </summary>
            <value>The page.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfField.PdfTag">
            <summary>
            Get or set tag for the field
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfField.ReadOnly">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:ComponentPro.Pdf.Forms.PdfField"/> field is read-only.
            </summary>
            <value> if the field is read only, set to <c>true</c>.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfField.Required">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:ComponentPro.Pdf.Forms.PdfField"/> is required.
            </summary>
            <value><c>true</c> if required; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfField.TabIndex">
            <summary>
            Gets or sets the tab index for form fields
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfField.ToolTip">
            <summary>
            Gets or sets the tool tip.
            </summary>
            <value>The tool tip.</value>
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfStyledField.#ctor(ComponentPro.Pdf.PdfPageBase,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Forms.PdfStyledField"/> class with the specific page and name.
            </summary>
            <param name="page">The page where the field should be placed.</param>
            <param name="name">The name.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfStyledField.DefineDefaultAppearance">
            <summary>
            Defines the default appearance.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfStyledField.Initialize">
            <summary>
            Initializes an instance.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfStyledField.ObtainFont">
            <summary>
            Gets the font. If font is undefined default font will be used.
            </summary>
            <returns>font</returns>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfStyledField.Actions">
            <summary>
            Gets the actions of the field.[Read-Only]
            </summary>
            <value>The actions.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfStyledField.BackColor">
            <summary>
            Gets or sets the color of the background.
            </summary>
            <value>The color of the background.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfStyledField.BorderColor">
            <summary>
            Gets or sets the color of the border.
            </summary>
            <value>The color of the border.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfStyledField.BorderStyle">
            <summary>
            Gets or sets the border style.
            </summary>
            <value>The border style.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfStyledField.BorderWidth">
            <summary>
            Gets or sets the width of the border.
            </summary>
            <value>The width of the border.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfStyledField.Bounds">
            <summary>
            Gets or sets the bounds.
            </summary>
            <value>The bounds.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfStyledField.Font">
            <summary>
            Gets or sets the font.
            </summary>
            <value>The font.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfStyledField.ForeColor">
            <summary>
            Gets or sets the color of the text.
            </summary>
            <value>The color of the text.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfStyledField.HighlightMode">
            <summary>
            Gets or sets the highlighting mode.
            </summary>
            <value>The highlighting mode.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfStyledField.Location">
            <summary>
            Gets or sets the location of the field.
            </summary>
            <value>The location.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfStyledField.Size">
            <summary>
            Gets or sets the size of the field.
            </summary>
            <value>The size.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfStyledField.TextAlignment">
            <summary>
            Gets or sets the text alignment.
            </summary>
            <value>The text alignment.</value>
            <remarks>This property is meaningful for fields containing variable text only.
            (i.e. <seealso cref="T:ComponentPro.Pdf.Forms.PdfTextBoxField"/>, <seealso cref="T:ComponentPro.Pdf.Forms.PdfListBoxField"/> and
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfComboBoxField"/>).
            </remarks>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfStyledField.Visibility">
            <summary>
            Gets or sets the form field visibility
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfStyledField.Visible">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:ComponentPro.Pdf.Forms.PdfStyledField"/> is visible.
            </summary>
            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfAppearanceField.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Forms.PdfAppearanceField"/> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfAppearanceField.#ctor(ComponentPro.Pdf.PdfPageBase,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Forms.PdfAppearanceField"/> class.
            </summary>
            <param name="page">Page</param>
            <param name="name">The name.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfAppearanceField.DrawAppearance(ComponentPro.Pdf.Graphics.PdfTemplate)">
            <summary>
            Draws the appearance.
            </summary>
            <param name="template">The template.</param>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfAppearanceField.Appearance">
            <summary>
            Gets the appearance.[Read-Only]
            </summary>
            <value>The appearance.</value>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.PdfAppearanceState">
            <summary>
            Represents the states of an annotation's appearance.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfAppearanceState.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Annotations.PdfAppearanceState"/> class.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfAppearanceState.Off">
            <summary>
            Gets or sets the inactive state.
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.Graphics.PdfTemplate" /> object specifies an inactive state template.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfAppearanceState.OffMappingName">
            <summary>
            Gets or sets the mapping name of the inactive state.
            </summary>
            <value>String specifies the mapping name of the inactive state.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfAppearanceState.On">
            <summary>
            Gets or sets the active state template.
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.Graphics.PdfTemplate" /> object specifies an active state template.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfAppearanceState.OnMappingName">
            <summary>
            Gets or sets the mapping name of the active state.
            </summary>
            <value>String specifies the mapping name of the active state.</value>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.PdfAttachment">
            <summary>
            Represents the attachments of the PDF document.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.PdfEmbeddedFileSpecification">
            <summary>
            Represents specification of embedded file.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.PdfFileSpecificationBase">
            <summary>
            Represents base class for file specification objects.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfFileSpecificationBase.#ctor(System.String)">
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfFileSpecificationBase.FormatFileName(System.String,System.Boolean)">
            <summary>
            Formats file name to Unix format.
            </summary>
            <param name="fileName">File name to format.</param>
            <param name="flag">bool value which represents the file path type.</param>
            <returns>Formatted file name.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfFileSpecificationBase.Initialize">
            <summary>
            Initializes instance.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfFileSpecificationBase.Save">
            <summary>
            Saves an instance.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfFileSpecificationBase.FileName">
            <summary>
            Gets or sets the name of the file.
            </summary>
            <value>The name of the file.</value>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfEmbeddedFileSpecification.#ctor(System.String)">
            <param name="fileName">file name</param>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfEmbeddedFileSpecification.#ctor(System.String,System.Byte[])">
            <param name="fileName">Name of the file.</param>
            <param name="data">The data.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfEmbeddedFileSpecification.#ctor(System.String,System.IO.Stream)">
            <param name="fileName">Name of the file.</param>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfEmbeddedFileSpecification.Initialize">
            <summary>
            Initializes instance.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfEmbeddedFileSpecification.Save">
            <summary>
            Saves object state.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfEmbeddedFileSpecification.CreationDate">
            <summary>
            Gets or sets creation date.
            </summary>
            <value>Creation date.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfEmbeddedFileSpecification.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>The data.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfEmbeddedFileSpecification.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfEmbeddedFileSpecification.FileName">
            <value></value>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfEmbeddedFileSpecification.MimeType">
            <summary>
            Gets or sets the MIME type of the embedded file.
            </summary>
            <value>The MIME type of the embedded file.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfEmbeddedFileSpecification.ModificationDate">
            <summary>
            Gets or sets modification date.
            </summary>
            <value>Modification date.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfEmbeddedFileSpecification.PortfolioAttributes">
            <summary>
            Gets or sets the Portfolio attributes.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfAttachment.#ctor(System.String)">
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfAttachment.#ctor(System.String,System.Byte[])">
            <param name="fileName">The name of the file to be attached.</param>
            <param name="data">The data to be attached as a file.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfAttachment.#ctor(System.String,System.IO.Stream)">
            <param name="fileName">The name of the file to be attached.</param>
            <param name="stream">The stream to be attached.</param>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.PdfAttachmentAnnotation">
            <summary>
            Represents an attachment annotation.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfAttachmentAnnotation.#ctor(System.Drawing.RectangleF,System.String)">
            <param name="rectangle">The bounds of the annotation.</param>
            <param name="fileName">A string value specifying the full path to the file to be embedded in the PDF file.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfAttachmentAnnotation.#ctor(System.Drawing.RectangleF,System.String,System.Byte[])">
            <param name="rectangle">The bounds of the annotation.</param>
            <param name="fileName">A string value specifying the full path to the file to be embedded in the PDF file.</param>
            <param name="data">A byte array specifying the content of the annotation's embedded file. </param>
            <remarks>If both FileName and FileContent are specified, the FileContent takes precedence. </remarks>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfAttachmentAnnotation.#ctor(System.Drawing.RectangleF,System.String,System.IO.Stream)">
            <param name="rectangle">The bounds of the annotation.</param>
            <param name="fileName">A string value specifying the full path to the file to be embedded in the PDF file.</param>
            <param name="stream">The stream specifying the content of the annotation's embedded file. </param>
            <remarks>If both FileName and FileContent are specified, the FileContent takes precedence. </remarks>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfAttachmentAnnotation.Initialize">
            <summary>
            Initializes object.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfAttachmentAnnotation.Save">
            <summary>
            Saves annotation object.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfAttachmentAnnotation.FileName">
            <value>A string value specifying the full path to the file to be embedded in the PDF file.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfAttachmentAnnotation.Icon">
            <summary>
            Gets or Sets the attachment's icon.
            </summary>
            <value>A <see cref="T:ComponentPro.Pdf.Annotations.PdfAttachmentIcon"/> enumeration member specifying the icon for the annotation when it is displayed in closed state.</value>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.PdfAttachmentCollection">
            <summary>
            Represents a collection of the attachment objects.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfAttachmentCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Annotations.PdfAttachmentCollection"/> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfAttachmentCollection.Clear">
            <summary>
            Remove all the attachments from the collection.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfAttachmentCollection.Contains(ComponentPro.Pdf.Annotations.PdfAttachment)">
            <summary>
            Determines whether the attachment collection contains the specified attachment.
            </summary>
            <param name="attachment">The attachment to be searched.</param>
            <returns>
            if it contains the specified attachment, set to <c>true</c>. otherwise <c>false</c>
            </returns>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfAttachmentCollection.IndexOf(ComponentPro.Pdf.Annotations.PdfAttachment)">
            <summary>
             search and find the index of the attachment.
            </summary>
            <param name="attachment">The attachment to find the position.</param>
            <returns>The index of the specified attachment.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfAttachmentCollection.Insert(System.Int32,ComponentPro.Pdf.Annotations.PdfAttachment)">
            <summary>
            Inserts the attachment at specified index.
            </summary>
            <param name="index">The index at which attachment to be inserted.</param>
            <param name="attachment">The attachment to be inserted.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfAttachmentCollection.Remove(ComponentPro.Pdf.Annotations.PdfAttachment)">
            <summary>
            Removes the specified attachment from the collection.
            </summary>
            <param name="attachment">The attachment to be removed.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfAttachmentCollection.RemoveAt(System.Int32)">
            <summary>
            Removes attachment at the specified index.
            </summary>
            <param name="index">The index at which the attachment to be removed.</param>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.PdfAttachmentIcon">
            <summary>
            Specifies the type of icon to be used in displaying file attachment annotations.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfAttachmentIcon.PushPin">
            <summary>
            Type of icon used in file attachment annotation.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfAttachmentIcon.Tag">
            <summary>
            Type of icon used in file attachment annotation.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfAttachmentIcon.Graph">
            <summary>
            Type of icon used in file attachment annotation.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfAttachmentIcon.Paperclip">
            <summary>
            Type of icon used in file attachment annotation.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.PdfBookmark">
            <summary>
            Each instance of this class represents an bookmark node in the bookmark tree.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.PdfBookmarkBase">
            <summary>
            This class plays two roles: it's a base class for all bookmarks
            and it's a root of a bookmarks tree.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.PdfBookmarkBase.Add(System.String)">
            <summary>
            Creates and adds an outline.
            </summary>
            <param name="title">The title of the new outline.</param>
            <returns>PdfBookmark</returns>
        </member>
        <member name="M:ComponentPro.Pdf.PdfBookmarkBase.Clear">
            <summary>
            Removes all the bookmark from the collection.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.PdfBookmarkBase.Contains(ComponentPro.Pdf.PdfBookmark)">
            <summary>
            Determines whether the specified outline presents in the collection.
            </summary>
            <param name="outline">The outline.</param>
            <returns>
            <c>true</c> if the specified outline is in the collection;
            otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:ComponentPro.Pdf.PdfBookmarkBase.Insert(System.Int32,System.String)">
            <summary>
            Inserts a new outline at the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="title">The title of the new outline.</param>
            <returns>The new outline.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.PdfBookmarkBase.Remove(System.String)">
            <summary>
            Remove the specified bookmark from the document.
            </summary>
            <param name="title">The title of the outline.</param>
        </member>
        <member name="M:ComponentPro.Pdf.PdfBookmarkBase.RemoveAt(System.Int32)">
            <summary>
            Remove the bookmark from the document at the specified index.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="P:ComponentPro.Pdf.PdfBookmarkBase.Count">
            <summary>
            Gets number of the elements in the collection. Read-Only.
            </summary>
            <value> The value which contains count of the collection.</value>&gt;
        </member>
        <member name="P:ComponentPro.Pdf.PdfBookmarkBase.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ComponentPro.Pdf.PdfBookmark"/> at the specified index. Read-Only.
            </summary>
            <value>The PdfBookmark object returns from the collection by index.</value>
        </member>
        <member name="P:ComponentPro.Pdf.PdfBookmark.IsExpanded">
            <summary>
            Gets or sets the whether to expand the node or not.
            </summary>
            <value> true If the bookmark is expanable , otherwise false. </value>&gt;
        </member>
        <member name="P:ComponentPro.Pdf.PdfBookmark.Title">
            <summary>
            Gets or sets the outline title.
            </summary>
            <value>A string value which contains the bookmark title</value>
            <remarks>The outline title is the text,
            which appears in the outline tree as a tree node.</remarks>
        </member>
        <member name="T:ComponentPro.Pdf.Forms.PdfBorderStyle">
            <summary>
            Specifies the available styles for a field border.
            </summary>
            <remarks>Default value is Solid.</remarks>
        </member>
        <member name="F:ComponentPro.Pdf.Forms.PdfBorderStyle.Solid">
            <summary>
            A solid rectangle surrounding the annotation.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Forms.PdfBorderStyle.Dashed">
            <summary>
            A dashed rectangle surrounding the annotation.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Forms.PdfBorderStyle.Beveled">
            <summary>
            A simulated embossed rectangle that appears to be raised above the surface 
            of the page.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Forms.PdfBorderStyle.Inset">
            <summary>
            A simulated engraved rectangle that appears to be recessed below the surface 
            of the page.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Forms.PdfBorderStyle.Underline">
            <summary>
            A single line along the bottom of the annotation rectangle.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Forms.PdfButtonField">
            <summary>
            Represents button field in the PDF form.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfAppearanceField"/> Class   
            <seealso cref="T:ComponentPro.Pdf.PdfDocument"/> Class   
            <seealso cref="T:ComponentPro.Pdf.Actions.PdfSubmitFormAction"/> Class   
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfButtonField.#ctor(ComponentPro.Pdf.PdfPageBase,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Forms.PdfButtonField"/> class with the specific page and name.
            </summary>
            <param name="page">The page where the fields should be placed.</param>
            <param name="name">The name of the button.</param>
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfAppearanceField"/> Class   
            <seealso cref="T:ComponentPro.Pdf.PdfDocument"/> Class   
            <seealso cref="T:ComponentPro.Pdf.Actions.PdfSubmitFormAction"/> Class  
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfButtonField.AddPrintAction">
            <summary>
            Adds Print action to current button field.
            <remarks>Clicking on the specified button will trigger the Print Dialog Box.</remarks>
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfAppearanceField"/> Class   
            <seealso cref="T:ComponentPro.Pdf.PdfDocument"/> Class   
            <seealso cref="T:ComponentPro.Pdf.Actions.PdfSubmitFormAction"/> Class           
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfButtonField.DrawAppearance(ComponentPro.Pdf.Graphics.PdfTemplate)">
            <summary>
            Draws the appearance.
            </summary>
            <param name="template">The template.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfButtonField.DrawPressedAppearance(ComponentPro.Pdf.Graphics.PdfTemplate)">
            <summary>
            Draws the pressed appearance.
            </summary>
            <param name="template">The template.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfButtonField.Initialize">
            <summary>
            Initializes an instance.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfButtonField.Text">
            <summary>
            Gets or sets the caption text.
            </summary>
            <value>The caption text.</value>   
            <seealso cref="T:ComponentPro.Pdf.PdfDocument"/> Class   
            <seealso cref="T:ComponentPro.Pdf.Actions.PdfSubmitFormAction"/> Class   
        </member>
        <member name="T:ComponentPro.Pdf.Forms.PdfCheckBoxField">
            <summary>
            Represents check box field in the PDF form.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfCheckFieldBase"/> Class 
            <seealso cref="T:ComponentPro.Pdf.PdfDocument"/> Class 
            <seealso cref="T:ComponentPro.Pdf.PdfPage"/> Class 
        </member>
        <member name="T:ComponentPro.Pdf.Forms.PdfCheckFieldBase">
            <summary>
            Represents base class for field which can be in checked and unchecked states.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfStyledField"/> Class 
            <seealso cref="T:ComponentPro.Pdf.PdfPage"/> Class 
            <seealso cref="T:ComponentPro.Pdf.PdfDocument"/> Class 
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> Class 
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfCheckFieldBase.#ctor(ComponentPro.Pdf.PdfPageBase,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Forms.PdfCheckFieldBase"/> class with the specific page and name.
            </summary>
            <param name="page">The page where the fields should be placed.</param>
            <param name="name">The name of the check box field.</param>
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfStyledField"/> Class 
            <seealso cref="T:ComponentPro.Pdf.PdfPage"/> Class 
            <seealso cref="T:ComponentPro.Pdf.PdfDocument"/> Class 
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> Class 
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfCheckFieldBase.DrawAppearance">
            <summary>
            Draws the appearance.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfCheckFieldBase.Initialize">
            <summary>
            Initializes an instance.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfCheckFieldBase.StyleToString(ComponentPro.Pdf.Forms.PdfCheckBoxStyle)">
            <summary>
            Styles to string.
            </summary>
            <param name="style">The style.</param>
            <returns>String representation of the check box' style.</returns>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfCheckFieldBase.Style">
            <summary>
            Gets or sets the style.
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.Forms.PdfCheckBoxStyle"/> object specifies the style of the check box field.</value>
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfStyledField"/> Class 
            <seealso cref="T:ComponentPro.Pdf.PdfPage"/> Class 
            <seealso cref="T:ComponentPro.Pdf.PdfDocument"/> Class 
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> Class 
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfCheckBoxField.#ctor(ComponentPro.Pdf.PdfPageBase,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Forms.PdfCheckBoxField"/> class with the specific page and name.
            </summary>
            <param name="page">The page where the fields should be placed.</param>
            <param name="name">The name of the check box field.</param>
            <seealso cref="T:ComponentPro.Pdf.PdfPage"/> Class 
            <seealso cref="T:ComponentPro.Pdf.PdfDocument"/> Class 
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> Class 
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfCheckBoxField.DrawAppearance">
            <summary>
            Draws the appearance of the field.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfCheckBoxField.Checked">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:ComponentPro.Pdf.Forms.PdfCheckBoxField"/> is checked.
            </summary>
            <value><c>true</c> if checked; otherwise, <c>false</c>.</value>
            <seealso cref="T:ComponentPro.Pdf.PdfPage"/> Class 
            <seealso cref="T:ComponentPro.Pdf.PdfDocument"/> Class 
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> Class       
        </member>
        <member name="T:ComponentPro.Pdf.Forms.PdfCheckBoxStyle">
            <summary>
            Specifies the style for a check box field.
            </summary>
            <remarks>The default value is Check.</remarks>
        </member>
        <member name="F:ComponentPro.Pdf.Forms.PdfCheckBoxStyle.Check">
            <summary>
            A check mark is used for the checked state.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Forms.PdfCheckBoxStyle.Circle">
            <summary>
            A circle is used for the checked state. 
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Forms.PdfCheckBoxStyle.Cross">
            <summary>
            A cross is used for the checked state.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Forms.PdfCheckBoxStyle.Diamond">
            <summary>
            A diamond symbol is used for the checked state. 
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Forms.PdfCheckBoxStyle.Square">
            <summary>
            A square is used for the checked state.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Forms.PdfCheckBoxStyle.Star">
            <summary>
            A star is used for the checked state.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.PdfCircleAnnotation">
            <summary>
            Represents a PDF circle annotation
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfCircleAnnotation.#ctor(System.Drawing.RectangleF)">
            <summary>
            Initialise the new instance of the circle annotation with bounds.
            </summary>
            <param name="rectangle">Used to represent the bounds of the annotation </param>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfCircleAnnotation.#ctor(System.Drawing.RectangleF,System.String)">
            <summary>
            Initialise the new instance of the circle annotation with bounds and text.
            </summary>
            <param name="rectangle">Used to represent the bounds of the annotation </param>
            <param name="text">Used to represents the text of the annotation</param>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfCircleAnnotation.Initialize">
            <summary>
            Initializes annotation object.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfCircleAnnotation.Save">
            <summary>
            Saves an annotation.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfCircleAnnotation.Border">
            <summary>
            Get or set the border style of the square annotaion.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Forms.PdfComboBoxField">
            <summary>
            Represents combo box field in the PDF Form.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfListField"/> Class    
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfStyledField"/> Class 
            <seealso cref="T:ComponentPro.Pdf.PdfPage"/> Class 
            <seealso cref="T:ComponentPro.Pdf.PdfDocument"/> Class 
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> Class 
        </member>
        <member name="T:ComponentPro.Pdf.Forms.PdfListField">
            <summary>
            Represents base class form's list fields.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfAppearanceField"/> Class  
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfListField.#ctor(ComponentPro.Pdf.PdfPageBase,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Forms.PdfListField"/> class with the specific page and name.
            </summary>
            <param name="page">Page which the field to be placed on.</param>
            <param name="name">The name of the field.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfListField.Initialize">
            <summary>
            Initializes an instance.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfListField.Items">
            <summary>
            Gets the list field items.[Read-Only]
            </summary>
            <value>The items.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfListField.SelectedIndex">
            <summary>
            Gets or sets the first selected item in the list. 
            </summary>
            <value>The index of the selected item.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfListField.SelectedItem">
            <summary>
            Gets the first selected item in the list.[Read-Only]
            </summary>
            <value>The selected item.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfListField.SelectedValue">
            <summary>
            Gets or sets the value of the first selected item in the list.
            </summary>
            <value>The selected value.</value>
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfComboBoxField.#ctor(ComponentPro.Pdf.PdfPageBase,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Forms.PdfComboBoxField"/> class with the specific page and name.
            </summary>
            <param name="page">Page the field to be placed on.</param>
            <param name="name">The name of the field.</param>         
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfStyledField"/> Class 
            <seealso cref="T:ComponentPro.Pdf.PdfPage"/> Class 
            <seealso cref="T:ComponentPro.Pdf.PdfDocument"/> Class 
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> Class 
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfComboBoxField.DrawAppearance(ComponentPro.Pdf.Graphics.PdfTemplate)">
            <summary>
            Draws the appearance.
            </summary>
            <param name="template">The template.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfComboBoxField.Initialize">
            <summary>
            Initializes an instance.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfComboBoxField.Editable">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:ComponentPro.Pdf.Forms.PdfComboBoxField"/> is editable.
            </summary>
            <value><c>true</c> if editable; otherwise, <c>false</c>.</value>         
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfStyledField"/> Class 
            <seealso cref="T:ComponentPro.Pdf.PdfPage"/> Class 
            <seealso cref="T:ComponentPro.Pdf.PdfDocument"/> Class 
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> Class        
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.PdfDestination">
            <summary>
            Represents an anchor in the document where bookmarks or annotations can direct when clicked.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfDestination.#ctor(ComponentPro.Pdf.PdfPageBase)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Annotations.PdfDestination"/> class with specified page.
            </summary>
            <param name="page">The page.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfDestination.#ctor(ComponentPro.Pdf.PdfPageBase,System.Drawing.PointF)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Annotations.PdfDestination"/> class with specified page base and location.
            </summary>
            <param name="page">The page.</param>
            <param name="location">The location.</param>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfDestination.IsValid">
            <summary>
            Gets a value indicating whether this instance is valid.
            </summary>
            <value><c>true</c> if this instance is valid; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfDestination.Location">
            <summary>
            Gets or sets a location of the destination.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfDestination.Mode">
            <summary>
            Gets or sets mode of the destination.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfDestination.Page">
            <summary>
            Gets or sets a page where the destination is situated.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfDestination.Zoom">
            <summary>
            Gets or sets zoom factor.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.PdfDestinationMode">
            <summary>
            Enumeration that represents fit mode.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfDestinationMode.Location">
            <summary>
            Display the page designated by page, with the coordinates (left, top) positioned
            at the top-left corner of the window and the contents of the page magnified
            by the factor zoom. A NULL value for any of the parameters left, top, or
            zoom specifies that the current value of that parameter is to be retained unchanged.
            A zoom value of 0 has the same meaning as a NULL value.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfDestinationMode.FitToPage">
            <summary>
            Display the page designated by page, with its contents magnified just enough
            to fit the entire page within the window both horizontally and vertically. If
            the required horizontal and vertical magnification factors are different, use
            the smaller of the two, centering the page within the window in the other
            dimension.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfDestinationMode.FitH">
            <summary>
            Display the page designated by page, with the vertical coordinate top positioned
            at the top edge of the window and the contents of the page magnified
            just enough to fit the entire width of the page within the window.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Actions.PdfDocumentActions">
            <summary>
            Represents an actions for the PDF document.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Actions.PdfDocumentActions.AfterOpen">
            <summary>
            Gets or sets the <see cref="T:ComponentPro.Pdf.Actions.PdfAction"/> to execute when the document is opened. 
            </summary>
            <value>A <see cref="T:ComponentPro.Pdf.Actions.PdfAction"/> specifying the action to be executed when documents opens in the viewer. </value>
        </member>
        <member name="P:ComponentPro.Pdf.Actions.PdfDocumentActions.AfterPrint">
            <summary>
            Gets or sets the action to be performed after the document is printed.
            </summary>
            <value>A <see cref="T:ComponentPro.Pdf.Actions.PdfJavaScriptAction"/> object specifying the action to be executed after the document is printed. .</value>
        </member>
        <member name="P:ComponentPro.Pdf.Actions.PdfDocumentActions.AfterSave">
            <summary>
            Gets or sets the jave script action to be performed after the document is saved.
            </summary>
            <value>A <see cref="T:ComponentPro.Pdf.Actions.PdfJavaScriptAction"/> object specifying the action to be executed after the document is saved.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Actions.PdfDocumentActions.BeforeClose">
            <summary>
            Gets or sets the java script action to be performed before the document is closed.
            </summary>
            <value>A <see cref="T:ComponentPro.Pdf.Actions.PdfJavaScriptAction"/> object specifying the action to be executed before the document is closed. </value>
        </member>
        <member name="P:ComponentPro.Pdf.Actions.PdfDocumentActions.BeforePrint">
            <summary>
            Gets or sets the action to be performed before the document is printed.
            </summary>
            <value>A <see cref="T:ComponentPro.Pdf.Actions.PdfJavaScriptAction"/> object specifying the action to be executed before the document is printed. </value>
        </member>
        <member name="P:ComponentPro.Pdf.Actions.PdfDocumentActions.BeforeSave">
            <summary>
            Gets or sets the java script action to be performed before the document is saved.
            </summary>
            <value>A <see cref="T:ComponentPro.Pdf.Actions.PdfJavaScriptAction"/> object specifying the action to be executed before the document is saved. </value>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.PdfDocumentLinkAnnotation">
            <summary>
            Represents an annotation object with holds link on another location within a document.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfDocumentLinkAnnotation.#ctor(System.Drawing.RectangleF)">
            <summary>
            Initializes new <see cref="T:ComponentPro.Pdf.Annotations.PdfDocumentLinkAnnotation"/> instance with specified bounds.
            </summary>
            <param name="rectangle">The bounds of the annotation.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfDocumentLinkAnnotation.#ctor(System.Drawing.RectangleF,ComponentPro.Pdf.Annotations.PdfDestination)">
            <summary>
            Initializes new <see cref="T:ComponentPro.Pdf.Annotations.PdfDocumentLinkAnnotation"/> instance with specified bounds and destination.
            </summary>
            <param name="rectangle">The bounds of the annotation.</param>
            <param name="destination">The destination of the annotation.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfDocumentLinkAnnotation.Save">
            <summary>
            Saves annotation object.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.PdfEllipseAnnotation">
            <summary>
            Represents a PDF ellipse annotation
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfEllipseAnnotation.#ctor(System.Drawing.RectangleF,System.String)">
            <summary>
            Initialise the new instance of the ellipse annotation with bounds and text.
            </summary>
            <param name="rectangle">Used to represent the bounds of the annotation </param>
            <param name="text">Used to represents the text of the annotation</param>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfEllipseAnnotation.Initialize">
            <summary>
            Initializes annotation object.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfEllipseAnnotation.Save">
            <summary>
            Saves an annotation.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.PdfExtendedAppearance">
            <summary>
            Represents extended appearance of the annotation. It has two states such as On state and Off state.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfExtendedAppearance.MouseHover">
            <summary>
            Gets the appearance when mouse is hovered.
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.Annotations.PdfAppearanceState"/> object specifies the annotation appearance when the mouse is hovered on it.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfExtendedAppearance.Normal">
            <summary>
            Gets the normal appearance of the annotation.
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.Annotations.PdfAppearanceState"/> object specifies the normal appearance of the annotation.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfExtendedAppearance.Pressed">
            <summary>
            Gets the pressed state annotation.
            </summary>
            <value>The appearance in pressed state.</value>
        </member>
        <member name="T:ComponentPro.Pdf.Actions.PdfFieldActions">
            <summary>
            Represents actions to be performed as response to field events. 
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Actions.PdfFieldActions.#ctor(ComponentPro.Pdf.Actions.PdfAnnotationActions)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Actions.PdfFieldActions"/> class with <see cref="T:ComponentPro.Pdf.Actions.PdfAnnotationActions"/>
            </summary>
            <param name="annotationActrions">The <see cref="T:ComponentPro.Pdf.Actions.PdfAnnotationActions"/>.</param>
        </member>
        <member name="P:ComponentPro.Pdf.Actions.PdfFieldActions.Calculate">
             <summary>
             Gets or sets the JavaScript action to be performed to recalculate the value 
             of this field when that of another field changes.
             </summary>
             <value>A <see cref="T:ComponentPro.Pdf.Actions.PdfJavaScriptAction"/> object specifying the action to be executed for calculating the field value.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Actions.PdfFieldActions.Format">
             <summary>
             Gets or sets the JavaScript action to be performed before the field is formatted 
             to display its current value. This action can modify the field�s value before formatting.
             </summary>
             <value>A <see cref="T:ComponentPro.Pdf.Actions.PdfJavaScriptAction"/> object specifying the action to be executed for formatting the field value.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Actions.PdfFieldActions.GotFocus">
            <summary>
            Gets or sets the action to be performed when the field receives the 
            input focus.
            </summary>
            <value>A <see cref="T:ComponentPro.Pdf.Actions.PdfAction"/> specifying the action to be executed when the field receives the input focus.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Actions.PdfFieldActions.KeyPressed">
            <summary>
            Gets or sets the JavaScript action to be performed when the user types a keystroke 
            into a text field or combo box or modifies the selection in a scrollable list box. 
            This action can check the keystroke for validity and reject or modify it.
            </summary>
            <value>A <see cref="T:ComponentPro.Pdf.Actions.PdfJavaScriptAction"/> object specifying the action to be executed when the user types a keystroke.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Actions.PdfFieldActions.LostFocus">
            <summary>
            Gets or sets the action to be performed when the field loses the 
            input focus.
            </summary>
            <value>A <see cref="T:ComponentPro.Pdf.Actions.PdfAction"/> specifying the action to be executed when the field losts the input focus.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Actions.PdfFieldActions.MouseDown">
            <summary>
            Gets or sets the action to be performed when the mouse button is pressed inside the 
            field�s area.
            </summary>
            <value>A <see cref="T:ComponentPro.Pdf.Actions.PdfAction"/> specifying the action to be executed when the mouse button is pressed inside the field's area.</value>    
        </member>
        <member name="P:ComponentPro.Pdf.Actions.PdfFieldActions.MouseEnter">
            <summary>
            Gets or sets the action to be performed when the mouse cursor enters the fields�s 
            area.
            </summary>
            <value>A <see cref="T:ComponentPro.Pdf.Actions.PdfAction"/>  specifying the action to be executed when the mouse enters the field's area.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Actions.PdfFieldActions.MouseLeave">
            <summary>
            Gets or sets the action to be performed when the cursor exits the fields�s 
            area.
            </summary>
            <value>A <see cref="T:ComponentPro.Pdf.Actions.PdfAction"/> descendant specifying the action to be executed when the mouse leaves the field's area.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Actions.PdfFieldActions.MouseUp">
            <summary>
            Gets or sets the action to be performed when the mouse button is released 
            inside the field�s area.
            </summary>
            <value>A <see cref="T:ComponentPro.Pdf.Actions.PdfAction"/> specifying the action to be executed when the mouse button is released inside the field's area.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Actions.PdfFieldActions.Validate">
            <summary>
            Gets or sets the JavaScript action to be performed when the field�s value is changed. 
            This action can check the new value for validity.
            </summary>
            <value>A <see cref="T:ComponentPro.Pdf.Actions.PdfJavaScriptAction"/> object specifying the action to be executed for validating the field value.</value>
        </member>
        <member name="T:ComponentPro.Pdf.Forms.PdfFieldCollection">
            <summary>
            Represents the collection of the PDF fields.
            </summary>
             <seealso cref="T:ComponentPro.Pdf.PdfDocument"/> Class  
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfComboBoxField"/> Class   
            <seealso cref="T:ComponentPro.Pdf.PdfCollection"/> Class    
            <seealso cref="T:ComponentPro.Pdf.IPdfObject"/> Interface   
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfFieldCollection.Add(ComponentPro.Pdf.Forms.PdfField)">
            <summary>
            Adds the specified field to the collection.
            </summary>
            <param name="field">The field item which is added in the PDF form.</param>
            <returns>The field to be added on the page. </returns>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class  
            <seealso cref="T:ComponentPro.Pdf.PdfPage" /> Class  
            <seealso cref="!:PdfFont" /> Class  
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfFieldCollection.Clear">
            <summary>
            Clears the form field collection.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfFieldCollection.Contains(ComponentPro.Pdf.Forms.PdfField)">
            <summary>
            Determines whether field is contained within the collection.
            </summary>
            <param name="field">Check whether <see cref="T:ComponentPro.Pdf.Forms.PdfField"/> object is present in the field collection or not.</param>
            <returns>
            <c>true</c> if field is present in the collection, otherwise, <c>false</c>.
            </returns>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument"/> Class  
            <seealso cref="T:ComponentPro.Pdf.PdfPage"/> Class  
            <seealso cref="!:PdfFont"/> Class  
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfFieldCollection.DoAdd(ComponentPro.Pdf.Forms.PdfField)">
            <summary>
            Adds a field to collection.
            </summary>
            <param name="field">The field.</param>
            <returns>field.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfFieldCollection.DoAdd(ComponentPro.Pdf.Xfa.PdfXfaForm,System.String)">
            <summary>
            Add the specified XFA form fields
            </summary>
            <param name="form"></param>
            <param name="subformName"></param>
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfFieldCollection.DoClear">
            <summary>
            Clears the collection.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfFieldCollection.DoInsert(System.Int32,ComponentPro.Pdf.Forms.PdfField)">
            <summary>
            Inserts a filed into collection.
            </summary>
            <param name="index">The index.</param>
            <param name="field">The field.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfFieldCollection.DoRemove(ComponentPro.Pdf.Forms.PdfField)">
            <summary>
            Removes the field from collection.
            </summary>
            <param name="field">The field.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfFieldCollection.DoRemoveAt(System.Int32)">
            <summary>
            Removes the field at the specified position.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfFieldCollection.IndexOf(ComponentPro.Pdf.Forms.PdfField)">
            <summary>
            Gets the index of the specific field.
            </summary>
            <param name="field">The <see cref="T:ComponentPro.Pdf.Forms.PdfField"/> object whose index is requested.</param>
            <returns>Index of the field in collection.</returns>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument"/> Class  
            <seealso cref="T:ComponentPro.Pdf.PdfPage"/> Class  
            <seealso cref="!:PdfFont"/> Class  
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfFieldCollection.Insert(System.Int32,ComponentPro.Pdf.Forms.PdfField)">
            <summary>
            Inserts the field at the specified index.
            </summary>
            <param name="index">The index of the field.</param>
            <param name="field">The field which should be inserted at the specified index.</param>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class  
            <seealso cref="T:ComponentPro.Pdf.PdfPage" /> Class  
            <seealso cref="!:PdfFont" /> Class  
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfFieldCollection.Remove(ComponentPro.Pdf.Forms.PdfField)">
            <summary>
            Removes the specified field in the collection.
            </summary>
            <param name="field">The <see cref="T:ComponentPro.Pdf.Forms.PdfField"/> object to be removed from collection.</param>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument"/> Class  
            <seealso cref="T:ComponentPro.Pdf.PdfPage"/> Class  
            <seealso cref="!:PdfFont"/> Class
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfFieldCollection.RemoveAt(System.Int32)">
            <summary>
            Removes field at the specified position.
            </summary>
            <param name="index">The index where to remove the item.</param>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class  
            <seealso cref="T:ComponentPro.Pdf.PdfPage" /> Class  
            <seealso cref="!:PdfFont" /> Class
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfFieldCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:ComponentPro.Pdf.Forms.PdfField"/> with their field name.[Read-Only]
            </summary>   
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.PdfFileLinkAnnotation">
            <summary>
            Represents the annotation link to an external file.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfFileLinkAnnotation.#ctor(System.Drawing.RectangleF,System.String)">
            <param name="rectangle">The bounds of the annotation.</param>
            <param name="fileName">A string value specifying the full path to the file to be embedded.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfFileLinkAnnotation.Save">
            <summary>
            Saves annotation object.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfFileLinkAnnotation.Action">
            <summary>
            Gets or sets the action.
            </summary>
            <value>The action to be executed when the annotation is activated.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfFileLinkAnnotation.FileName">
            <value>A string value specifying the full path to the file to be embedded.</value>
        </member>
        <member name="T:ComponentPro.Pdf.Forms.PdfFilePathType">
            <summary>
            Specifies the file path type.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Forms.PdfFilePathType.Relative">
            <summary>
            Specifies the file location with out including the domain name.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Forms.PdfFilePathType.Absolute">
            <summary>
            Specifies the location, including the domain name.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Forms.PdfForm">
            <summary>
            Represents interactive form of the PDF document.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.IPdfObject" /> Interface    
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Forms.PdfForm"/> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfForm.SetDefaultAppearance(System.Boolean)">
            <summary>
            Specifies whether to set the default appearance for the form or not.
            </summary>
            <param name="applyDefault"></param>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfForm.DisableAutoFormat">
            <summary>
            Gets or sets whether to disable auto formating.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Actions.PdfFormAction">
            <summary>
            Represents the action on form fields
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Actions.PdfAction"/>
        </member>
        <member name="P:ComponentPro.Pdf.Actions.PdfFormAction.Fields">
            <summary>
            Gets the fields.
            </summary>
            <value>The fields.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Actions.PdfFormAction.Include">
            <summary>
            Gets or sets a value indicating whether fields contained in <see cref="P:ComponentPro.Pdf.Actions.PdfFormAction.Fields"/> 
            collection will be included for resetting or submitting.
            </summary>
            <remarks>
            If Include property is true, only the fields in this collection will be reset or submitted.
            If Include property is false, the fields in this collection are not reset or submitted 
            and only the remaining form fields are reset or submitted.
            If the collection is null or empty, then all the form fields are reset 
            and the Include property is ignored.
            </remarks>
            <value><c>true</c> if include; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:ComponentPro.Pdf.Forms.PdfFormFieldCollection">
            <summary>
            Represents a collection of form fields.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfFieldCollection"/> Class 
            <seealso cref="T:ComponentPro.Pdf.PdfDocument"/> Class 
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfComboBoxField"/> Class 
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfFormFieldCollection.DoAdd(ComponentPro.Pdf.Forms.PdfField)">
            <summary>
            Adds a field to collection.
            </summary>
            <param name="field">The field.</param>
            <returns></returns>
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfFormFieldCollection.DoClear">
            <summary>
            Clears the collection.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfFormFieldCollection.DoInsert(System.Int32,ComponentPro.Pdf.Forms.PdfField)">
            <summary>
            Inserts a filed into collection.
            </summary>
            <param name="index">The index.</param>
            <param name="field">The field.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfFormFieldCollection.DoRemove(ComponentPro.Pdf.Forms.PdfField)">
            <summary>
            Removes the field from collection.
            </summary>
            <param name="field">The field.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfFormFieldCollection.DoRemoveAt(System.Int32)">
            <summary>
            Removes the field at the specified position.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="T:ComponentPro.Pdf.Forms.PdfFormFieldVisibility">
            <summary>
            Specifies the form field visibility types
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.PdfFreeTextAnnotation">
            <summary>
            Represents the PDF text annotation.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfFreeTextAnnotation.#ctor(System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the PdfFreeTextAnnotation class with specified bounds.
            </summary>
            <param name="rectangle">The bounds of the annotation.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfFreeTextAnnotation.Initialize">
            <summary>
            Initializes Annotation object.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfFreeTextAnnotation.Save">
            <summary>
            Saves an Text Markup Annotation .
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfFreeTextAnnotation.AnnotationIntent">
            <summary>
            Gets or sets the intent of the text annotation
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.Annotations.PdfAnnotationIntent"/> object sets the annotation intent. </value>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfFreeTextAnnotation.CalloutLines">
            <summary>
            Gets or sets the points array to be called out the lines.
            </summary>
            <value> The array of points to call out lines.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfFreeTextAnnotation.Font">
            <summary>
            Gets or sets the font of the text annotation
            </summary>` 
            <value> The <see cref="T:ComponentPro.Pdf.Graphics.PdfFont" /> object which defines the annotation text font.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfFreeTextAnnotation.LineEndingStyle">
            <summary>
            Gets or sets the line ending style of the text annotation.
            </summary>
            <value> The <see cref="T:ComponentPro.Pdf.Forms.PdfLineEndingStyle"/> object selects the different line ending styles of the annotation. </value>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfFreeTextAnnotation.MarkupText">
            <summary>
            Gets or sets the markup text of the text annotation
            </summary>
            <Value>The string value which contains the markup text of the annotation.</Value>
        </member>
        <member name="T:ComponentPro.Pdf.Actions.PdfGoToAction">
            <summary>
            Represents an action which goes to a destination in the current document.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Actions.PdfAction"/> Class
        </member>
        <member name="M:ComponentPro.Pdf.Actions.PdfGoToAction.#ctor(ComponentPro.Pdf.Annotations.PdfDestination)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Actions.PdfGoToAction"/> class with specified destination page.
            </summary>
            <param name="destination">The destination to jump to.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Actions.PdfGoToAction.#ctor(ComponentPro.Pdf.PdfPage)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Actions.PdfGoToAction"/> class with specified page.
            </summary>
            <param name="page">The page to navigate.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Actions.PdfGoToAction.Initialize">
            <summary>
            Initializes instance.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Actions.PdfGoToAction.Destination">
             <summary>
             Gets or sets the destination to be navigated.
             </summary>
             <value>The <see cref="T:ComponentPro.Pdf.Annotations.PdfDestination"/> to navigate.</value>
        </member>
        <member name="T:ComponentPro.Pdf.Forms.PdfHighlightMode">
            <summary>
            Specifies the highlight mode for a field.
            </summary>
            <remarks>Default value is Invert.</remarks>
        </member>
        <member name="F:ComponentPro.Pdf.Forms.PdfHighlightMode.NoHighlighting">
            <summary>
            No highlighting.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Forms.PdfHighlightMode.Invert">
            <summary>
            Invert the contents of the field rectangle.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Forms.PdfHighlightMode.Outline">
            <summary>
            Invert the field's border.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Forms.PdfHighlightMode.Push">
            <summary>
            Pushed highlighting.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.PdfImportedAnnotation">
            <summary>
            The class provides methods and properties to handle the loaded annotations from the existing PDF document.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfAnnotation"/> Class
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfImportedAnnotation.SetText(System.String)">
            <summary>
            Sets the name of the annotation
            </summary>
            <param name="name">New name of the annotation.</param>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfImportedAnnotation.ObjectID">
            <summary>
            Represents the Form field identifier
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfImportedAnnotation.Page">
            <summary>
            Gets and sets the <see cref="T:ComponentPro.Pdf.PdfImportedPage" /> where the annotation is present.
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.PdfImportedPage" /> of the existing PDF document</value>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.PdfImportedAnnotationTypes">
            <summary>
            Specifies the annotation types.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfImportedAnnotationTypes.Highlight">
            <summary>
            Highlight type annotation.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfImportedAnnotationTypes.Underline">
            <summary>
            Underline type annotation.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfImportedAnnotationTypes.StrikeOut">
            <summary>
            StrikeOut type annotation.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfImportedAnnotationTypes.Squiggly">
            <summary>
            Squiggly type annotation.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfImportedAnnotationTypes.AnnotationStates">
            <summary>
            AnnotationStates type.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfImportedAnnotationTypes.TextAnnotation">
            <summary>
            TextAnnotation type.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfImportedAnnotationTypes.LinkAnnotation">
            <summary>
            LinkAnnotation type.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfImportedAnnotationTypes.DocumentLinkAnnotation">
            <summary>
            DocumentLinkAnnotation type.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfImportedAnnotationTypes.FileLinkAnnotation">
            <summary>
            FileLinkAnnotation type.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfImportedAnnotationTypes.FreeTextAnnotation">
            <summary>
            FreeTextAnnotation type.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfImportedAnnotationTypes.LineAnnotation">
            <summary>
            LineAnnotation type.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfImportedAnnotationTypes.CircleAnnotation">
            <summary>
            CircleAnnotation type.
            </summary>       
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfImportedAnnotationTypes.EllipseAnnotation">
            <summary>
            Ellipse type.
            </summary> 
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfImportedAnnotationTypes.SquareAnnotation">
            <summary>
            SquareAnnotation type.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfImportedAnnotationTypes.RectangleAnnotation">
            <summary>
            RectangleAnnotation type.
            </summary> 
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfImportedAnnotationTypes.PolygonAnnotation">
            <summary>
            PolygonAnnotation type.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfImportedAnnotationTypes.PolyLineAnnotation">
            <summary>
            PolyLineAnnotation type.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfImportedAnnotationTypes.SquareandCircleAnnotation">
            <summary>
            SquareandCircleAnnotation type.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfImportedAnnotationTypes.PolygonandPolylineAnnotation">
            <summary>
            PolygonandPolylineAnnotation type.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfImportedAnnotationTypes.TextMarkupAnnotation">
            <summary>
            TextMarkupAnnotation type.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfImportedAnnotationTypes.CaretAnnotation">
            <summary>
            CaretAnnotation type.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfImportedAnnotationTypes.RubberStampAnnotation">
            <summary>
            RubberStampAnnotation type.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfImportedAnnotationTypes.LnkAnnotation">
            <summary>
            LnkAnnotation type.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfImportedAnnotationTypes.PopupAnnotation">
            <summary>
            PopupAnnotation type.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfImportedAnnotationTypes.FileAttachmentAnnotation">
            <summary>
            FileAttachmentAnnotation type.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfImportedAnnotationTypes.SoundAnnotation">
            <summary>
            SoundAnnotation type.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfImportedAnnotationTypes.MovieAnnotation">
            <summary>
            MovieAnnotation type.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfImportedAnnotationTypes.ScreenAnnotation">
            <summary>
            ScreenAnnotation type.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfImportedAnnotationTypes.WidgetAnnotation">
            <summary>
            WidgetAnnotation type.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfImportedAnnotationTypes.PrinterMarkAnnotation">
            <summary>
            PrinterMarkAnnotation type.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfImportedAnnotationTypes.TrapNetworkAnnotation">
            <summary>
            TrapNetworkAnnotation type.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfImportedAnnotationTypes.WatermarkAnnotation">
            <summary>
            WatermarkAnnotation type.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfImportedAnnotationTypes.TextWebLinkAnnotation">
            <summary>
            TextWebLinkAnnotation type.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfImportedAnnotationTypes.InkAnnotation">
            <summary>
            InkAnnotation type
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfImportedAnnotationTypes.Null">
            <summary>
            No annotation.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.PdfImportedAttachmentAnnotation">
            <summary>
            The <see cref="T:ComponentPro.Pdf.Annotations.PdfImportedAttachmentAnnotation"/> represents the attachment annotation loaded from the existing PDF document, it provides methods and properties to modify the attachment.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedDocumentLinkAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedFileLinkAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedLineAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedPopupAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedRubberStampAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedSoundAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedTextMarkupAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedTextWebLinkAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedUriAnnotation"/> Class
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.PdfImportedStyledAnnotation">
            <summary>
            Represents the PdfImportedStyledAnnotation class
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfImportedStyledAnnotation.AnnotationFlags">
            <summary>
            Gets or sets the annotation flags.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfImportedStyledAnnotation.Author">
            <summary>
            Gets or Sets the Author of the annotation.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfImportedStyledAnnotation.Border">
            <summary>
            Gets or sets the annotation's border.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfImportedStyledAnnotation.Bounds">
            <summary>
            Gets or sets the annotation's bounds. If this property is not set, bounds are calculated automatically
            based on <see cref="P:ComponentPro.Pdf.Annotations.PdfImportedStyledAnnotation.Location">Location</see> property and content of annotation.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfImportedStyledAnnotation.Color">
            <summary>
            Gets or sets the color.
            </summary>
            <value>The color.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfImportedStyledAnnotation.InnerColor">
            <summary>
            Gets or sets the inner color of the annotation, Default color is transparent
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfImportedStyledAnnotation.Location">
            <summary>
            Gets or sets the location.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfImportedStyledAnnotation.ModifiedDate">
            <summary>
            Gets or Sets the ModifiedDate of the annotation.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfImportedStyledAnnotation.Opacity">
            <summary>
            Gets or sets the Opacity of the annotation, Default value is 1.0f
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfImportedStyledAnnotation.Size">
            <summary>
            Gets or sets the size.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfImportedStyledAnnotation.Subject">
            <summary>
            Gets or Sets the Subject of the annotation.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfImportedStyledAnnotation.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfImportedAttachmentAnnotation.Data">
            <summary>
            Get the data bytes from the attached file.
            </summary>
            <value>The array of data bytes of the attached file</value>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfImportedAttachmentAnnotation.FileName">
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfImportedAttachmentAnnotation.Icon">
            <summary>
            Gets or sets the icon of the attachment annotation.
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.Annotations.PdfAttachmentIcon"/> used to set the icon to the attachment annotation</value>
        </member>
        <member name="T:ComponentPro.Pdf.PdfImportedBookmark">
            <summary>
            Represents the loaded bookmark class.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfImportedBookmark.Title">
            <summary>
            Gets or sets the outline title.
            </summary>
            <value> The string value which contains title of the bookmark.</value>&gt;
            <remarks>The outline title is the text,
            which appears in the outline tree as a tree node.</remarks>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfImportedCircleAnnotation.Save">
            <summary>
            Saves an annotation.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfImportedCircleAnnotation.Border">
            <summary>
            Get or set the border style of the annotation.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.PdfImportedDocumentLinkAnnotation">
            <summary>
            Represents the loaded document link annotation class.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedAttachmentAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedFileLinkAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedLineAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedPopupAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedRubberStampAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedSoundAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedTextMarkupAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedTextWebLinkAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedUriAnnotation"/> Class
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfImportedDocumentLinkAnnotation.Destination">
            <summary>
            Sets the destination of the annotation.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfImportedEllipseAnnotation.Save">
            <summary>
            Saves an annotation.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfImportedEllipseAnnotation.Border">
            <summary>
            Get or set the line border of the annotation.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.PdfImportedFileLinkAnnotation">
            <summary>
            Represents the loaded file link annotation class.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedAttachmentAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedDocumentLinkAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedLineAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedPopupAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedRubberStampAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedSoundAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedTextMarkupAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedTextWebLinkAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedUriAnnotation"/> Class
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfImportedFileLinkAnnotation.DestinationArray">
            <summary>
            Gets or sets the destination array of the annotation, the destination array contains page number and positions.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfImportedFileLinkAnnotation.FileName">
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.PdfImportedFreeTextAnnotation">
            <summary>
            Represents the loaded document PdfFreeText annotation class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfImportedFreeTextAnnotation.Save">
            <summary>
            Saves an annotation.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.PdfImportedInkAnnotation">
            <summary>
            Represent Loaded ink annotation, Ink annotation represents freehand scribble comprising one or more disjoint paths. 
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfImportedInkAnnotation.Save">
            <summary>
            Saves an annotation.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfImportedInkAnnotation.BorderStyle">
            <summary>
            get or sets the border style of the ink annotation, default value is PdfLineBorderStyle.Solid
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.Forms.PdfLineBorderStyle"/>, provides various type of borders</value>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfImportedInkAnnotation.BorderWidth">
            <summary>
            Get or sets the border width of the ink annotation default value is 1
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfImportedInkAnnotation.DashArray">
            <summary>
            Gets or sets the value for dashed border of ink annotation.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.PdfImportedLineAnnotation">
            <summary>
            Represents the loaded line annotation class.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedAttachmentAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedDocumentLinkAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedFileLinkAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedPopupAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedRubberStampAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedSoundAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedTextMarkupAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedTextWebLinkAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedUriAnnotation"/> Class
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfImportedLineAnnotation.Save">
            <summary>
            Saves an annotation .
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfImportedLineAnnotation.BackColor">
            <summary>
            Gets or sets the back color of the annotation.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfImportedLineAnnotation.BeginLineStyle">
            <summary>
            Gets or sets the begin line style of the annotation.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfImportedLineAnnotation.CaptionType">
            <summary>
            Gets or sets the caption type of the annotation.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfImportedLineAnnotation.EndLineStyle">
            <summary>
            Gets or sets the end line style of the annotation.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfImportedLineAnnotation.InnerLineColor">
            <summary>
            Gets or sets the inner line color of the annotation.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfImportedLineAnnotation.LeaderExt">
            <summary>
            Gets or sets the leader ext of the annotation.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfImportedLineAnnotation.LeaderLine">
            <summary>
            Gets or sets the leader line of the annotation.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfImportedLineAnnotation.LineBorder">
            <summary>
            Gets the line border of the annotation.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfImportedLineAnnotation.LineCaption">
            <summary>
            Gets or sets the line caption of the annotation.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfImportedLineAnnotation.LineIntent">
            <summary>
            Gets or sets the line intent of the annotation.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.PdfImportedNamedDestination">
            <summary>
            Represents the loaded named destination class.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.PdfNamedDestination">
            <summary>
            Represents an named destination which goes to a destination in the current document.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfNamedDestination.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Annotations.PdfNamedDestination"/> class.
            </summary>
            <param name="title">The title to be displayed.</param>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfNamedDestination.Title">
            <summary>
            Gets or sets the named destination title.
            </summary>
            <value>A string value which contains the named destination title</value>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfImportedNamedDestination.Title">
            <summary>
            Gets or sets the named destination title.
            </summary>
            <value>A string value which contains the named destination title</value>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.PdfImportedPolygonAnnotation">
            <summary>
            Represents the Polygon annotation
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfImportedPolygonAnnotation.Save">
            <summary>
            Saves an annotation.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfImportedPolygonAnnotation.Border">
            <summary>
            Gets the line border of the annotation.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfImportedPolygonAnnotation.PolygonPoints">
            <summary>
            Gets the polygon points of the annotation.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfImportedPolyLineAnnotation.BeginLineStyle">
            <summary>
            Gets or sets the begin line style of the annotation.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfImportedPolyLineAnnotation.EndLineStyle">
            <summary>
            Gets or sets the end line style of the annotation.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfImportedPolyLineAnnotation.LineBorder">
            <summary>
            Gets the line border of the annotation.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.PdfImportedPopupAnnotation">
            <summary>
            Represents the loaded pop up annotation class.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedAttachmentAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedDocumentLinkAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedFileLinkAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedLineAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedRubberStampAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedSoundAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedTextMarkupAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedTextWebLinkAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedUriAnnotation"/> Class
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfImportedPopupAnnotation.Icon">
            <summary>
            Gets or sets the icon of the annotation.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfImportedPopupAnnotation.Open">
            <summary>
            Gets or sets the open option of the popup annotation.
            </summary>
            <value>if true open,otherwise not open</value>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfImportedRectangleAnnotation.Save">
            <summary>
            Saves an annotation.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfImportedRectangleAnnotation.LineBorder">
            <summary>
            Gets the line border of the annotation.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.PdfImportedRubberStampAnnotation">
            <summary>
            Represents the loaded rubber stamp annotation class.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedAttachmentAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedDocumentLinkAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedFileLinkAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedLineAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedPopupAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedSoundAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedTextMarkupAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedTextWebLinkAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedUriAnnotation"/> Class
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfImportedRubberStampAnnotation.Icon">
            <summary>
            Gets or sets the icon of the annotation.
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.Annotations.PdfRubberStampAnnotationIcon"/> used to set icon to the rubber stamp annotation</value>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.PdfImportedSoundAnnotation">
            <summary>
            Represents the loaded sound annotation class.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedAttachmentAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedDocumentLinkAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedFileLinkAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedLineAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedPopupAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedRubberStampAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedTextMarkupAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedTextWebLinkAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedUriAnnotation"/> Class
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfImportedSoundAnnotation.FileName">
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfImportedSoundAnnotation.Icon">
            <summary>
            Gets or sets the icon of the annotation.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfImportedSoundAnnotation.Sound">
            <summary>
            Gets or sets the sound of the annotation.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfImportedSquareAnnotation.Save">
            <summary>
            Saves an annotation.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfImportedSquareAnnotation.Border">
            <summary>
            Gets the line border of the annotation.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.PdfImportedTextMarkupAnnotation">
            <summary>
            Represents the loaded text markup annotation class.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedAttachmentAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedDocumentLinkAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedFileLinkAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedLineAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedPopupAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedRubberStampAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedSoundAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedTextWebLinkAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedUriAnnotation"/> Class
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfImportedTextMarkupAnnotation.Save">
            <summary>
            Saves an annotation .
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfImportedTextMarkupAnnotation.SetTitleText(System.String)">
            <summary>
            Sets the name of the field.
            </summary>
            <param name="name">New name of the field.</param>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfImportedTextMarkupAnnotation.TextMarkupAnnotationType">
            <summary>
            Gets or sets the markup annotation Type.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfImportedTextMarkupAnnotation.TextMarkupColor">
            <summary>
            Gets or sets the markup color
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.PdfImportedTextWebLinkAnnotation">
            <summary>
            Represents the loaded text web link annotation class.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedAttachmentAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedDocumentLinkAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedFileLinkAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedLineAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedPopupAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedRubberStampAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedSoundAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedTextMarkupAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedUriAnnotation"/> Class
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfImportedTextWebLinkAnnotation.Url">
            <summary>
            Gets or sets the Url.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.PdfImportedUriAnnotation">
            <summary>
            Represents the loaded unique resource identifier annotation class.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedAttachmentAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedDocumentLinkAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedFileLinkAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedLineAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedPopupAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedRubberStampAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedSoundAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedTextMarkupAnnotation"/> Class
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfImportedTextWebLinkAnnotation"/> Class
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfImportedUriAnnotation.Uri">
            <summary>
            Gets or sets the unique resource identifier text of the annotation.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.PdfImportedWebLinkAnnotation">
            <summary>
            Represents the loaded web link annotation class.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.PdfImportedWidgetAnnotation">
            <summary>
            The class used to represent a loaded widget annotations
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfImportedWidgetAnnotation.Actions">
            <summary>
            Gets the actions of the annotation.
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.Actions.PdfAnnotationActions"/> provides various actions.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfImportedWidgetAnnotation.Appearance">
            <summary>
            Gets or sets appearance of the annotation.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfImportedWidgetAnnotation.ExtendedAppearance">
            <summary>
            Gets or sets the extended appearance.
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.Annotations.PdfExtendedAppearance"/> represents extended appearance of the annotation</value>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfImportedWidgetAnnotation.HighlightMode">
            <summary>
            Gets or sets the highlighting mode.
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.Forms.PdfHighlightMode"/>.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfImportedWidgetAnnotation.TextAlignment">
            <summary>
            Gets or sets the text alignment.
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.Graphics.PdfTextAlignment" /> provides alignments of a text.</value>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.PdfInkAnnotation">
            <summary>
            Represents the ink annotation class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfInkAnnotation.Initialize">
            <summary>
            Initializes annotation object.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfInkAnnotation.Save">
            <summary>
            Saves an annotation.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfInkAnnotation.BorderStyle">
            <summary>
            Gets or sets the border style of an ink annotation.
            </summary>
            <value>A <see cref="T:ComponentPro.Pdf.Forms.PdfLineBorderStyle"/> enumeration member specifying the line border Style of the line annotation.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfInkAnnotation.BorderWidth">
            <summary>
            Gets or sets the border width of an ink annotation.
            </summary>
            <Value> The broder width of the annotation. </Value>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfInkAnnotation.DashArray">
            <summary>
            Gets or sets the DashArray value
            </summary>
            <Value>The array of values which draws the dash array of the annotation.</Value>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfInkAnnotation.InkList">
            <summary>
            Gets or sets list of the InkList value.
            </summary>
            <Value>The value specifies list of lines to be drawn.</Value>
        </member>
        <member name="T:ComponentPro.Pdf.Actions.PdfJavaScriptAction">
            <summary>
            Represents an java script action in PDF document.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Actions.PdfJavaScriptAction.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Actions.PdfJavaScriptAction"/> class with java script code 
            </summary>
            <param name="javaScript">The java script code.</param>
            <value>A string value representing valid javascript code to be executed.</value>
        </member>
        <member name="M:ComponentPro.Pdf.Actions.PdfJavaScriptAction.Initialize">
            <summary>
            Initializes instance.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Actions.PdfJavaScriptAction.JavaScript">
            <summary>
            Gets or sets the javascript code to be executed when this action is executed. 
            </summary>
            <value>A string value representing valid javascript code to be executed. </value>
        </member>
        <member name="T:ComponentPro.Pdf.Actions.PdfLaunchAction">
            <summary>
            Represents an action which launches an application or opens or prints a document.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Actions.PdfLaunchAction.#ctor(System.String)">
        </member>
        <member name="M:ComponentPro.Pdf.Actions.PdfLaunchAction.#ctor(System.String,ComponentPro.Pdf.Forms.PdfFilePathType)">
        </member>
        <member name="M:ComponentPro.Pdf.Actions.PdfLaunchAction.Initialize">
            <summary>
            Initializes instance.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Actions.PdfLaunchAction.FileName">
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.PdfLineAnnotation">
            <summary>
            Represents a line annotation. 
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfLineAnnotation.#ctor(System.Int32[])">
            <summary>
            Initializes new instance of <see cref="T:ComponentPro.Pdf.Annotations.PdfLineAnnotation"/> class with specified points.
            </summary>
            <param name="linePoints">The line points is to be drawn.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfLineAnnotation.#ctor(System.Drawing.RectangleF)">
            <summary>
            Initializes new instance of <see cref="T:ComponentPro.Pdf.Annotations.PdfLineAnnotation"/> class with specified bounds.
            </summary>
            <param name="rectangle">The bounds of the annotation.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfLineAnnotation.#ctor(System.Int32[],System.String)">
            <summary>
            Initializes new instance of <see cref="T:ComponentPro.Pdf.Annotations.PdfLineAnnotation"/> class with set of points and annotation text.
            </summary>
            <param name="linePoints">The line points to be drawn.</param>
            <param name="text">The line caption text of the annotation.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfLineAnnotation.Initialize">
            <summary>
            Initializes annotation object.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfLineAnnotation.Save">
            <summary>
            Saves an annotation.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfLineAnnotation.m_captionType">
            <summary>
            To specifying Caption Type
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfLineAnnotation.BackColor">
            <summary>
            Gets or sets the BackgroundColor of the PdfLineAnnotation.
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.Graphics.PdfColor" /> which draws the border of the line annotation.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfLineAnnotation.BeginLineStyle">
            <summary>
            Gets or sets the style used for the beginning of the line. 
            </summary>
            <value>A <see cref="T:ComponentPro.Pdf.Forms.PdfLineEndingStyle"/> enumeration member specifying the begin style for the line.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfLineAnnotation.CaptionType">
            <summary>
            Gets or sets the line caption text type of annotation.
            </summary>
            <value>A <see cref="T:ComponentPro.Pdf.Annotations.PdfLineCaptionType"/> enumeration specifying the line caption type.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfLineAnnotation.EndLineStyle">
            <summary>
            Gets or sets the style used for the end of the line. 
            </summary>
            <value>A <see cref="T:ComponentPro.Pdf.Forms.PdfLineEndingStyle"/> enumeration member specifying the end style for the line.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfLineAnnotation.InnerLineColor">
            <summary>
            Gets or sets an InnerColor of the PdfLineAnnotation.
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.Graphics.PdfColor" /> which draws the outline of the inner color of the line annotation.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfLineAnnotation.LeaderLine">
            <summary>
            Gets or sets the leader line 
            </summary>
            <value> The value specifies the leader line of the annotation.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfLineAnnotation.LeaderLineExt">
            <summary>
            Gets or sets the LeaderLineExtension.
            </summary>
            <value> The value specifies the leader line extension of the annotation.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfLineAnnotation.lineBorder">
            <summary>
            Gets or sets the border style of the LineAnnotation.
            </summary>
            <value>A <see cref="T:ComponentPro.Pdf.Annotations.LineBorder"/> enumeration member specifying the border style for the line.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfLineAnnotation.LineCaption">
            <summary>
            Gets or sets whether the line annotation caption should be displayed.
            </summary>
            <value><c>true</c> if the line caption should be displayed, otherwise <c>false</c>.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfLineAnnotation.LineIntent">
            <summary>
            Gets or sets the LineIntent of the annotation.
            </summary>
            <Value> A <see cref="T:ComponentPro.Pdf.Annotations.PdfLineIntent"/> specifies the Line Intent Style is to be used in the line annotation.</Value>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfLineAnnotation.LinePoints">
            <summary>
            Gets or sets the LinePoints of the PdfLineAnnotation.
            </summary>
            <Value> The value specifies array of the line points to be drawn.</Value>
        </member>
        <member name="T:ComponentPro.Pdf.Forms.PdfLineBorderStyle">
            <summary>
            Specifies the line border Style of the line annotation.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Forms.PdfLineBorderStyle.Solid">
            <summary>
            Indicates Solid
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Forms.PdfLineBorderStyle.Dashed">
            <summary>
            Indicates Dashed
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Forms.PdfLineBorderStyle.Beveled">
            <summary>
            Indicates Beveled
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Forms.PdfLineBorderStyle.Inset">
            <summary>
            Indicates Inset
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Forms.PdfLineBorderStyle.Underline">
            <summary>
            Indicates Underline
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.PdfLineCaptionType">
            <summary>
            Specifies the Line Caption Type is to be used in the Line annotation.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfLineCaptionType.Inline">
            <summary>
            Indicates Inline as annotation�s caption positioning
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfLineCaptionType.Top">
            <summary>
            Indicates Top as annotation�s caption positioning
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Forms.PdfLineEndingStyle">
            <summary>
            Specifies the line ending style to be used in the Line annotation.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Forms.PdfLineEndingStyle.Square">
            <summary>
            Indicates Square
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Forms.PdfLineEndingStyle.Circle">
            <summary>
            Indicates Circle
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Forms.PdfLineEndingStyle.Diamond">
            <summary>
            Indicates Diamond
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Forms.PdfLineEndingStyle.OpenArrow">
            <summary>
            Indicates OpenArrow
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Forms.PdfLineEndingStyle.ClosedArrow">
            <summary>
            Indicates ClosedArrow
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Forms.PdfLineEndingStyle.None">
            <summary>
            Indicates None
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Forms.PdfLineEndingStyle.ROpenArrow">
            <summary>
            Indicates ROpenArrow
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Forms.PdfLineEndingStyle.Butt">
            <summary>
            Indicates Butt
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Forms.PdfLineEndingStyle.RClosedArrow">
            <summary>
            IdicaIndicatestes RClosedArrow
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Forms.PdfLineEndingStyle.Slash">
            <summary>
            Indicates Slash
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.PdfLineIntent">
            <summary>
            Specifies the Line Intent Style is to be used in the line annotation.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfLineIntent.LineArrow">
            <summary>
            Indicates Line Arrow as intent of the line annotation
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfLineIntent.LineDimension">
            <summary>
            Indicates LineDimension as intent of the line annotation
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Forms.PdfListBoxField">
            <summary>
            Represents list box field of the PDF form.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfListField"/> Class    
            <seealso cref="T:ComponentPro.Pdf.PdfDocument"/> Class
            <seealso cref="T:ComponentPro.Pdf.PdfPage"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> Class
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfListFieldItem"/> Class    
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfListBoxField.#ctor(ComponentPro.Pdf.PdfPageBase,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Forms.PdfListBoxField"/> class with the specific page and name.
            </summary>
            <param name="page">Page the field to be placed on.</param>
            <param name="name">The name of the field.</param>
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfListField"/> Class    
            <seealso cref="T:ComponentPro.Pdf.PdfDocument"/> Class
            <seealso cref="T:ComponentPro.Pdf.PdfPage"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> Class
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfListBoxField.DrawAppearance(ComponentPro.Pdf.Graphics.PdfTemplate)">
            <summary>
            Draws the appearance.
            </summary>
            <param name="template">The template.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfListBoxField.Initialize">
            <summary>
            Initializes an instance.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfListBoxField.MultiSelect">
            <summary>
            Gets or sets a value indicating whether the field is multiselectable.
            </summary>
            <value><c>true</c> if multiselectable; otherwise, <c>false</c>.</value>
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfListField"/> Class    
            <seealso cref="T:ComponentPro.Pdf.PdfDocument"/> Class
            <seealso cref="T:ComponentPro.Pdf.PdfPage"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> Class
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfListFieldItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Forms.PdfListFieldItem"/> class.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Forms.PdfListFieldItemCollection">
            <summary>
            Represents list field item collection.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfCollection"/> Class  
            <seealso cref="T:ComponentPro.Pdf.IPdfObject"/> Interface 
            <seealso cref="T:ComponentPro.Pdf.PdfDocument"/> Class   
            <seealso cref="T:ComponentPro.Pdf.PdfPage"/> Class 
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfListBoxField"/> Class 
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfListFieldItemCollection.Clear">
            <summary>
            Clears the collection.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument"/> Class   
            <seealso cref="T:ComponentPro.Pdf.PdfPage"/> Class 
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfListBoxField"/> Class 
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfListFieldItemCollection.Contains(ComponentPro.Pdf.Forms.PdfListFieldItem)">
            <summary>
            Determines whether the item is present in the collection.
            </summary>
            <param name="item">Check whether <see cref="T:ComponentPro.Pdf.Forms.PdfListFieldItem"/> object is exists in the collection or not.</param>
            <returns>
            <c>true</c> if the item is contained within the collection; otherwise, <c>false</c>.
            </returns>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument"/> Class   
            <seealso cref="T:ComponentPro.Pdf.PdfPage"/> Class 
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfListBoxField"/> Class 
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfListFieldItemCollection.IndexOf(ComponentPro.Pdf.Forms.PdfListFieldItem)">
            <summary>
            Gets the index of the specified item.
            </summary>
            <param name="item">A <see cref="T:ComponentPro.Pdf.Forms.PdfListFieldItem"/> object whose index is requested.</param>
            <returns>The index of the given item, -1 if the item does not exist.</returns>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument"/> Class   
            <seealso cref="T:ComponentPro.Pdf.PdfPage"/> Class 
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfListBoxField"/> Class 
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfListFieldItemCollection.Insert(System.Int32,ComponentPro.Pdf.Forms.PdfListFieldItem)">
            <summary>
            Inserts the list item field at the specified index.
            </summary>
            <param name="index">The index where to insert the new item.</param>
            <param name="item">The <see cref="T:ComponentPro.Pdf.Forms.PdfListFieldItem"/> object to be added to collection.</param>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument"/> Class   
            <seealso cref="T:ComponentPro.Pdf.PdfPage"/> Class 
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfListBoxField"/> Class 
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfListFieldItemCollection.Remove(ComponentPro.Pdf.Forms.PdfListFieldItem)">
            <summary>
            Removes the specified <see cref="T:ComponentPro.Pdf.Forms.PdfListFieldItem"/>.
            </summary>
            <param name="item">The <see cref="T:ComponentPro.Pdf.Forms.PdfListFieldItem"/> object which to be removed in the collection.</param>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument"/> Class   
            <seealso cref="T:ComponentPro.Pdf.PdfPage"/> Class 
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfListBoxField"/> Class 
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfListFieldItemCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the item at the specified position.
            </summary>
            <param name="index">The index where to remove the item.</param>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument"/> Class   
            <seealso cref="T:ComponentPro.Pdf.PdfPage"/> Class 
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfListBoxField"/> Class 
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfListFieldItemCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ComponentPro.Pdf.Forms.PdfListFieldItem"/> at the specified index.[Read-Only]
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.Forms.PdfListFieldItem"/> object.</value>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument"/> Class   
            <seealso cref="T:ComponentPro.Pdf.PdfPage"/> Class 
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfListBoxField"/> Class 
        </member>
        <member name="T:ComponentPro.Pdf.Actions.PdfNamedAction">
            <summary>
            The class represents an named action which execute an action predefined by the viewer application.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Actions.PdfNamedAction.#ctor(ComponentPro.Pdf.Actions.PdfActionDestination)">
             <summary>
             Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Actions.PdfNamedAction"/> class.
             </summary>
             <param name="destination">The <see cref="T:ComponentPro.Pdf.Actions.PdfActionDestination"/> object representing destination of an action.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Actions.PdfNamedAction.Initialize">
            <summary>
            Initializes instance.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Actions.PdfNamedAction.Destination">
            <summary>
            Gets or sets the destination.
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.Actions.PdfActionDestination"/> object representing destination of an action.</value>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.PdfNamedDestinationCollection">
            <summary>
            Implements a collection of named destinations in the document.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfNamedDestinationCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:PdfNamedDestinationCollection" /> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfNamedDestinationCollection.Add(ComponentPro.Pdf.Annotations.PdfNamedDestination)">
            <summary>
            Creates and adds a named destination.
            </summary>
            <param name="named destination">The new named destination to be added to the collection.</param>
            <returns>PdfNamedDestination</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfNamedDestinationCollection.Clear">
            <summary>
            Removes all the named destination from the collection.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfNamedDestinationCollection.Contains(ComponentPro.Pdf.Annotations.PdfNamedDestination)">
            <summary>
            Determines whether the specified named destinations presents in the collection.
            </summary>
            <param name="named destination">The named destinations.</param>
            <returns>
            <c>true</c> if the specified named destinations is in the collection;
            otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfNamedDestinationCollection.Insert(System.Int32,ComponentPro.Pdf.Annotations.PdfNamedDestination)">
            <summary>
            Inserts a new named destination at the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="title">The named destination to be added to the collection..</param>
            <returns>The new named destination.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfNamedDestinationCollection.Remove(System.String)">
            <summary>
            Remove the specified named destination from the document.
            </summary>
            <param name="title">The title of the named destination.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfNamedDestinationCollection.RemoveAt(System.Int32)">
            <summary>
            Remove the specified named destination from the document.
            </summary>
            <param name="title">The title of the named destination.</param>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfNamedDestinationCollection.Count">
            <summary>
            Gets number of the elements in the collection.
            </summary>
            <value>The total number of elements in the collection.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfNamedDestinationCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ComponentPro.Pdf.Annotations.PdfNamedDestination"/> at the specified index.
            </summary>
            <value>the <see cref="T:ComponentPro.Pdf.Annotations.PdfNamedDestination"/></value>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.PdfPolygonAnnotation">
            <summary>
            Represents a Polygon annotation. 
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfPolygonAnnotation.#ctor(System.Int32[],System.String)">
            <summary>
            Initialise the new instance of the polygon annotation with bounds and text.
            </summary>
            <param name="points">Used to represent the poloygon points</param>
            <param name="text">Used to represents the text of the annotation</param>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfPolygonAnnotation.Initialize">
            <summary>
            Initializes annotation object.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfPolygonAnnotation.Save">
            <summary>
            Saves an annotation.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfPolygonAnnotation.Border">
            <summary>
            Get or sets the border style of the square annotaion.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfPolygonAnnotation.LineExtension">
            <summary>
            Gets or sets Leading Line Extension, Default value is 0
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.PdfPolyLineAnnotation">
            <summary>
            Represents a PolyLine annotation. 
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfPolyLineAnnotation.#ctor(System.Int32[],System.String)">
            <summary>
            Initialise the new instance of the poly line annotation with bounds and text.
            </summary>
            <param name="points">Used to represent the poloygon points</param>
            <param name="text">Used to represents the text of the annotation</param>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfPolyLineAnnotation.Initialize">
            <summary>
            Initializes annotation object.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfPolyLineAnnotation.Save">
            <summary>
            Saves an annotation.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfPolyLineAnnotation.BeginLineStyle">
            <summary>
            Gets or sets the style used for the beginning of the line, Default value is None
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfPolyLineAnnotation.Border">
            <summary>
            Get or sets the border style of the square annotaion.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfPolyLineAnnotation.EndLineStyle">
            <summary>
            Gets or sets the style used for the ending of the line, Default value is None
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfPolyLineAnnotation.LineExtension">
            <summary>
            Gets or sets Leading Line Extension, Defacult value is 0
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.PdfPopupAnnotation">
            <summary>
            Represents a base class for popup annotation which can be either in open or closed state.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfPopupAnnotation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Annotations.PdfPopupAnnotation"/> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfPopupAnnotation.#ctor(System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Annotations.PdfPopupAnnotation"/> class with specified bounds.
            </summary>
            <param name="rectangle">RectangleF structure that specifies the bounds of the annotation.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfPopupAnnotation.#ctor(System.Drawing.RectangleF,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Annotations.PdfPopupAnnotation"/> class with specified bounds and annotation text.
            </summary>
            <param name="rectangle">RectangleF structure that specifies the bounds of the annotation.</param>
            <param name="text">The string specifies the annotation text.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfPopupAnnotation.Initialize">
            <summary>
            Initializes annotation object.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfPopupAnnotation.Save">
            <summary>
            Saves an annotation.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfPopupAnnotation.Open">
            <summary>
            Gets or sets value whether annotation is initially open or closed.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.PdfPopupIcon">
            <summary>
            Specifies the enumeration of popup annotation icons.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfPopupIcon.Note">
            <summary>
            Indicates note popup annotation.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfPopupIcon.Comment">
            <summary>
            Indicates comment popup annotation.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfPopupIcon.Help">
            <summary>
            Indicates help popup annotation.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfPopupIcon.Insert">
            <summary>
            Indicates insert popup annotation.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfPopupIcon.Key">
            <summary>
            Indicates key popup annotation.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfPopupIcon.NewParagraph">
            <summary>
            Indicates new paragraph popup annotation.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfPopupIcon.Paragraph">
            <summary>
            Indicates paragraph popup annotation.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Forms.PdfRadioButtonItemCollection">
            <summary>
            Represents collection of radio buttons items.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfCollection"/> Class  
            <seealso cref="T:ComponentPro.Pdf.PdfDocument"/> Class   
            <seealso cref="T:ComponentPro.Pdf.PdfPage"/> Class 
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfRadioButtonListItem"/> Class 
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfRadioButtonItemCollection.#ctor(ComponentPro.Pdf.Forms.PdfRadioButtonListField)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Forms.PdfRadioButtonItemCollection"/> class with the specific <see cref="T:ComponentPro.Pdf.Forms.PdfRadioButtonListField"/>.
            </summary>
            <param name="field">The field.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfRadioButtonItemCollection.Add(ComponentPro.Pdf.Forms.PdfRadioButtonListItem)">
            <summary>
            Adds the specified item.
            </summary>
            <param name="item">The <see cref="T:ComponentPro.Pdf.Forms.PdfRadioButtonListItem"/> object to be added to collection.</param>
            <returns>The index of the added field.</returns>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument"/> Class   
            <seealso cref="T:ComponentPro.Pdf.PdfPage"/> Class 
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfRadioButtonListItem"/> Class 
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfRadioButtonItemCollection.Clear">
            <summary>
            Clears the item collection.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument"/> Class   
            <seealso cref="T:ComponentPro.Pdf.PdfPage"/> Class 
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfRadioButtonListItem"/> Class 
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfRadioButtonItemCollection.Contains(ComponentPro.Pdf.Forms.PdfRadioButtonListItem)">
            <summary>
            Determines whether the collection contains the specified item.
            </summary>
            <param name="item">Check whether <see cref="T:ComponentPro.Pdf.Forms.PdfRadioButtonListItem"/> object is exists in the collection or not.</param>
            <returns>
            <c>true</c> if collection contains specified item; otherwise, <c>false</c>.
            </returns>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument"/> Class   
            <seealso cref="T:ComponentPro.Pdf.PdfPage"/> Class 
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfRadioButtonListItem"/> Class 
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfRadioButtonItemCollection.IndexOf(ComponentPro.Pdf.Forms.PdfRadioButtonListItem)">
            <summary>
            Gets the index of the item within the collection.
            </summary>
            <param name="item">A <see cref="T:ComponentPro.Pdf.Forms.PdfRadioButtonListItem"/> object whose index is requested.</param>
            <returns>Index of the item with the collection.</returns>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument"/> Class   
            <seealso cref="T:ComponentPro.Pdf.PdfPage"/> Class 
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfRadioButtonListItem"/> Class 
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfRadioButtonItemCollection.Insert(System.Int32,ComponentPro.Pdf.Forms.PdfRadioButtonListItem)">
            <summary>
            Inserts an item at the specified index.
            </summary>
            <param name="index">The index where to insert the new item..</param>
            <param name="item">A <see cref="T:ComponentPro.Pdf.Forms.PdfRadioButtonListItem"/> object to be added to collection.</param>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument"/> Class   
            <seealso cref="T:ComponentPro.Pdf.PdfPage"/> Class 
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfRadioButtonListItem"/> Class 
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfRadioButtonItemCollection.Remove(ComponentPro.Pdf.Forms.PdfRadioButtonListItem)">
            <summary>
            Removes the specified item from the collection.
            </summary>
            <param name="item">The <see cref="T:ComponentPro.Pdf.Forms.PdfRadioButtonListItem"/> object which is to be removed from the collection.</param>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument"/> Class   
            <seealso cref="T:ComponentPro.Pdf.PdfPage"/> Class 
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfRadioButtonListItem"/> Class 
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfRadioButtonItemCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the item at the specified index.
            </summary>
            <param name="index">The index where to remove the item.</param>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument"/> Class   
            <seealso cref="T:ComponentPro.Pdf.PdfPage"/> Class 
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfRadioButtonListItem"/> Class 
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfRadioButtonItemCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ComponentPro.Pdf.Forms.PdfRadioButtonListItem"/> at the specified index.
            </summary>
            <value>Returns item at the specified position.</value>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument"/> Class   
            <seealso cref="T:ComponentPro.Pdf.PdfPage"/> Class 
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfRadioButtonListItem"/> Class 
        </member>
        <member name="T:ComponentPro.Pdf.Forms.PdfRadioButtonListField">
            <summary>
            Represents radio button field in the PDF form.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfField"/> Class  
            <seealso cref="T:ComponentPro.Pdf.PdfDocument"/> Class   
            <seealso cref="T:ComponentPro.Pdf.PdfPage"/> Class 
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfRadioButtonListItem"/> Class 
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfRadioButtonListField.#ctor(ComponentPro.Pdf.PdfPageBase,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Forms.PdfRadioButtonListField"/> class with the specific page and name.
            </summary>
            <param name="page">Page which the field to be placed on.</param>
            <param name="name">The name of the field.</param>       
            <seealso cref="T:ComponentPro.Pdf.PdfDocument"/> Class   
            <seealso cref="T:ComponentPro.Pdf.PdfPage"/> Class 
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfRadioButtonListItem"/> Class 
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfRadioButtonListField.Items">
            <summary>
            Gets the items of the radio button field.[Read-Only]
            </summary>
            <value>The radio button field item collection.</value>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument"/> Class   
            <seealso cref="T:ComponentPro.Pdf.PdfPage"/> Class 
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfRadioButtonListItem"/> Class
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfRadioButtonListField.SelectedIndex">
            <summary>
            Gets or sets the first selected item in the list. 
            </summary>
            <value>The index of the selected item.</value>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument"/> Class   
            <seealso cref="T:ComponentPro.Pdf.PdfPage"/> Class 
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfRadioButtonListItem"/> Class 
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfRadioButtonListField.SelectedItem">
            <summary>
            Gets the first selected item in the list.[Read-Only]
            </summary>
            <value>The selected item of the field.</value>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument"/> Class   
            <seealso cref="T:ComponentPro.Pdf.PdfPage"/> Class 
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfRadioButtonListItem"/> Class 
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfRadioButtonListField.SelectedValue">
            <summary>
            Gets or sets the value of the first selected item in the list.
            </summary>
            <value>The selected value of the list field.</value>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument"/> Class   
            <seealso cref="T:ComponentPro.Pdf.PdfPage"/> Class 
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfRadioButtonListItem"/> Class 
        </member>
        <member name="T:ComponentPro.Pdf.Forms.PdfRadioButtonListItem">
            <summary>
            Represents an item of a radio button list.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfField"/> Class  
            <seealso cref="T:ComponentPro.Pdf.PdfDocument"/> Class   
            <seealso cref="T:ComponentPro.Pdf.PdfPage"/> Class 
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfRadioButtonListField"/> Class 
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfRadioButtonListItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Forms.PdfRadioButtonListItem"/> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfRadioButtonListItem.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Forms.PdfRadioButtonListItem"/> class with the specific value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfRadioButtonListItem.DrawAppearance">
            <summary>
            Draws the appearance.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfRadioButtonListItem.Initialize">
            <summary>
            Initializes instance.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfRadioButtonListItem.Bounds">
            <summary>
            Gets or sets the bounds.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfField"/> Class  
            <seealso cref="T:ComponentPro.Pdf.PdfDocument"/> Class   
            <seealso cref="T:ComponentPro.Pdf.PdfPage"/> Class 
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfRadioButtonListField"/> Class 
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfRadioButtonListItem.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>      
            <seealso cref="T:ComponentPro.Pdf.PdfDocument"/> Class   
            <seealso cref="T:ComponentPro.Pdf.PdfPage"/> Class 
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfRadioButtonListField"/> Class 
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.PdfRectangleAnnotation">
            <summary>
            Represents a PDF rectangle annotation
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.PdfSquareAnnotation">
            <summary>
            Represents a PDF square annotation
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfSquareAnnotation.#ctor(System.Drawing.RectangleF)">
            <summary>
            Initialise the new instance of the square annotation with bounds.
            </summary>
            <param name="rectangle">Used to represent the bounds of the annotation </param>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfSquareAnnotation.#ctor(System.Drawing.RectangleF,System.String)">
            <summary>
            Initialise the new instance of the square annotation with bounds and text.
            </summary>
            <param name="rectangle">Used to represent the bounds of the annotation </param>
            <param name="text">Used to represents the text of the annotation</param>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfSquareAnnotation.Initialize">
            <summary>
            Initializes annotation object.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfSquareAnnotation.Save">
            <summary>
            Saves an annotation.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfSquareAnnotation.Border">
            <summary>
            Get or set the border style of the square annotaion.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfRectangleAnnotation.#ctor(System.Drawing.RectangleF,System.String)">
            <summary>
            Initialise the new instance of the rectangle annotation with bounds and text.
            </summary>
            <param name="rectangle">Used to represent the bounds of the annotation </param>
            <param name="text">Used to represents the text of the annotation</param>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfRectangleAnnotation.Initialize">
            <summary>
            Initializes annotation object.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfRectangleAnnotation.Save">
            <summary>
            Saves an annotation.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Actions.PdfResetFormAction">
            <summary>
            Represents PDF form's reset action,this action allows a user to reset the form fields to their default values.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Actions.PdfResetFormAction.Initialize">
            <summary>
            Initializes an instance.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Actions.PdfResetFormAction.Include">
            <summary>
            Gets or sets a value indicating whether fields contained in Fields
            collection will be included for resetting.
            </summary>
            <value><c>true</c> if include; otherwise, <c>false</c>.</value>
            <remarks>
            If Include property is true, only the fields in this collection will be reset.
            If Include property is false, the fields in this collection are not reset
            and only the remaining form fields are reset.
            If the collection is null or empty, then all the form fields are reset
            and the Include property is ignored.
            </remarks>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.PdfRubberStampAnnotation">
            <summary>
            Represents the rubber stamp annotation for a PDF document.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfRubberStampAnnotation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Annotations.PdfRubberStampAnnotation"/> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfRubberStampAnnotation.#ctor(System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Annotations.PdfRubberStampAnnotation"/> class with specified bounds.
            </summary>
            <param name="rectangle">RectangleF structure that specifies the bounds of the annotation.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfRubberStampAnnotation.#ctor(System.Drawing.RectangleF,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Annotations.PdfRubberStampAnnotation"/> class with specified bounds and text.
            </summary>
            <param name="rectangle">The rectangleF structure that specifies the bounds of the annotation.</param>
            <param name="text">The text of the rubber stamp annotation.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfRubberStampAnnotation.Initialize">
            <summary>
            Initializes annotation object.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfRubberStampAnnotation.Save">
            <summary>
            Saves an annotation.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfRubberStampAnnotation.Icon">
            <summary>
            Gets or sets the annotation's icon. 
            </summary>
            <value>A <see cref="T:ComponentPro.Pdf.Annotations.PdfRubberStampAnnotationIcon"/> enumeration member specifying the icon for the annotation when it is displayed in closed state. </value>        
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.PdfRubberStampAnnotationIcon">
            <summary>
            Specifies the enumeration of rubber stamp annotation icons.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfRubberStampAnnotationIcon.Approved">
            <summary>
            Indicates approved rubber stamp annotation
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfRubberStampAnnotationIcon.AsIs">
            <summary>
            Indicates AsIs rubber stamp annotation
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfRubberStampAnnotationIcon.Confidential">
            <summary>
            Indicates confidential rubber stamp annotation
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfRubberStampAnnotationIcon.Departmental">
            <summary>
            Indicates departmental rubber stamp annotation
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfRubberStampAnnotationIcon.Draft">
            <summary>
            Indicates draft rubber stamp annotation
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfRubberStampAnnotationIcon.Experimental">
            <summary>
            Indicates experimental rubber stamp annotation
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfRubberStampAnnotationIcon.Expired">
            <summary>
            Indicates expired rubber stamp annotation
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfRubberStampAnnotationIcon.Final">
            <summary>
            Indicates final rubber stamp annotation
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfRubberStampAnnotationIcon.ForComment">
            <summary>
            Indicates for comment rubber stamp annotation
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfRubberStampAnnotationIcon.ForPublicRelease">
            <summary>
            Indicates for public release rubber stamp annotation
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfRubberStampAnnotationIcon.NotApproved">
            <summary>
            Indicates not approved rubber stamp annotation
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfRubberStampAnnotationIcon.NotForPublicRelease">
            <summary>
            Indicates not for public release rubber stamp annotation
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfRubberStampAnnotationIcon.Sold">
            <summary>
            Indicates sold rubber stamp annotation
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfRubberStampAnnotationIcon.TopSecret">
            <summary>
            Indicates top secret rubber stamp annotation
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Forms.PdfDigitalSignatureAppearanceField">
            <summary>
            Represents form field with appearance custom support.
            </summary>   
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfDigitalSignatureStyledField"/> Class    
        </member>
        <member name="T:ComponentPro.Pdf.Forms.PdfDigitalSignatureStyledField">
            <summary>
            Represents form's field with style parameters.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfField"/> Class   
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfGraphics"/> Class
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> Class
            <seealso cref="T:ComponentPro.Pdf.PdfPage"/> Class
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfDigitalSignatureStyledField.#ctor(ComponentPro.Pdf.PdfPageBase,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Forms.PdfDigitalSignatureStyledField"/> class with the specific page and name.
            </summary>
            <param name="page">The page where the field should be placed.</param>
            <param name="name">The name.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfDigitalSignatureStyledField.Initialize">
            <summary>
            Initializes an instance.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfDigitalSignatureStyledField.Actions">
            <summary>
            Gets the actions of the field.[Read-Only]
            </summary>
            <value>The actions.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfDigitalSignatureStyledField.BackColor">
            <summary>
            Gets or sets the color of the background.
            </summary>
            <value>The color of the background.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfDigitalSignatureStyledField.BorderColor">
            <summary>
            Gets or sets the color of the border.
            </summary>
            <value>The color of the border.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfDigitalSignatureStyledField.BorderStyle">
            <summary>
            Gets or sets the border style.
            </summary>
            <value>The border style.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfDigitalSignatureStyledField.BorderWidth">
            <summary>
            Gets or sets the width of the border.
            </summary>
            <value>The width of the border.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfDigitalSignatureStyledField.Bounds">
            <summary>
            Gets or sets the bounds of the field.
            </summary>
            <value>The bounds.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfDigitalSignatureStyledField.HighlightMode">
            <summary>
            Gets or sets the highlighting mode.
            </summary>
            <value>The highlighting mode.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfDigitalSignatureStyledField.Location">
            <summary>
            Gets or sets the location.
            </summary>
            <value>The location.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfDigitalSignatureStyledField.Size">
            <summary>
            Gets or sets the size.
            </summary>
            <value>The size.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfDigitalSignatureStyledField.Visible">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:ComponentPro.Pdf.Forms.PdfDigitalSignatureStyledField"/> is visible.
            </summary>
            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfDigitalSignatureAppearanceField.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Forms.PdfDigitalSignatureAppearanceField"/> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfDigitalSignatureAppearanceField.#ctor(ComponentPro.Pdf.PdfPageBase,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Forms.PdfDigitalSignatureAppearanceField"/> class.
            </summary>
            <param name="page">page</param>
            <param name="name">The name.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfDigitalSignatureAppearanceField.DrawAppearance(ComponentPro.Pdf.Graphics.PdfTemplate)">
            <summary>
            Draws the appearance.
            </summary>
            <param name="template">The template.</param>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfDigitalSignatureAppearanceField.Appearance">
            <summary>
            Gets the appearance of the signature field.[Read-Only]
            </summary>
            <value>The appearance.</value>
        </member>
        <member name="T:ComponentPro.Pdf.Forms.PdfDigitalSignatureField">
            <summary>
            Represents signature field in the PDF Form.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfDigitalSignatureAppearanceField"/> Class  
            <seealso cref="T:ComponentPro.Pdf.PdfDocument"/> Class 
            <seealso cref="T:ComponentPro.Pdf.PdfPage"/> Class  
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfDigitalSignatureField.#ctor(ComponentPro.Pdf.PdfPageBase,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Forms.PdfDigitalSignatureField"/> class with the specific page and name.
            </summary>
            <param name="page">Page which the field to be placed on.</param>
            <param name="name">The name of the field.</param>        
            <seealso cref="T:ComponentPro.Pdf.PdfDocument"/> Class 
            <seealso cref="T:ComponentPro.Pdf.PdfPage"/> Class
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfDigitalSignatureField.DrawAppearance(ComponentPro.Pdf.Graphics.PdfTemplate)">
            <summary>
            Draws the appearance.
            </summary>
            <param name="template">The template.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfDigitalSignatureField.Initialize">
            <summary>
            Initializes an instance.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfDigitalSignatureField.Appearance">
            <summary>
            Gets the visual appearance of this field.[Read-Only]
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class 
            <seealso cref="T:ComponentPro.Pdf.PdfPage" /> Class
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfDigitalSignatureField.Signature">
            <summary>
            Gets or sets the digital signature for signing the field. 
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class 
            <seealso cref="T:ComponentPro.Pdf.Security.PdfDigitalSignature" /> Class
        </member>
        <member name="T:ComponentPro.Pdf.Actions.PdfSound">
            <summary>
            Represents sound embedded into pdf document.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Actions.PdfSound.#ctor(System.String)">
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Actions.PdfSound.Save">
            <summary>
            Saves an instance.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Actions.PdfSound.Bits">
            <summary>
            Gets or sets the number of bits per sample value per channel.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Actions.PdfSound.Channels">
            <summary>
            Gets or sets the number of sound channels.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Actions.PdfSound.Encoding">
            <summary>
            Gets or sets the encoding format for the sample data.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Actions.PdfSound.FileName">
            <value>The name of the file.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Actions.PdfSound.Rate">
            <summary>
            Gets or sets the sampling rate, in samples per second (in Hz).
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Actions.PdfSoundAction">
            <summary>
            Represents the sound action,sound action plays a specified music file in the PDF document
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Actions.PdfSoundAction.#ctor(System.String)">
        </member>
        <member name="M:ComponentPro.Pdf.Actions.PdfSoundAction.Initialize">
            <summary>
            Initializes instance.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Actions.PdfSoundAction.FileName">
            <value>The name of the sound file.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Actions.PdfSoundAction.Mix">
            <summary>
            Gets or sets a value indicating whether to mix this sound with any other 
            sound already playing. If this flag is false, any previously playing sound is 
            stopped before starting this sound; this can be used to stop a repeating 
            sound. Default value: false.
            </summary>
            <value><c>true</c> if mix; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Actions.PdfSoundAction.Repeat">
            <summary>
            Gets or sets a value indicating whether to repeat the sound indefinitely. 
            If this entry is present, the <see cref="P:ComponentPro.Pdf.Actions.PdfSoundAction.Synchronous"/> property is ignored. Default value: false.
            </summary>
            <value><c>true</c> if repeat; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Actions.PdfSoundAction.Sound">
            <summary>
            Gets or sets the sound.
            </summary>
            <value><see cref="T:ComponentPro.Pdf.Actions.PdfSound"/> represents the <see cref="T:ComponentPro.Pdf.Actions.PdfSound"/>.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Actions.PdfSoundAction.Synchronous">
            <summary>
            Gets or sets a value whether to play the sound synchronously or asynchronously.
            If this flag is true, the viewer application retains control, allowing no further 
            user interaction other than canceling the sound, until the sound has been 
            completely played. Default value: false.
            </summary>
            <value><c>true</c> if synchronous; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Actions.PdfSoundAction.Volume">
            <summary>
            Gets or sets the volume at which to play the sound, in the range -1.0 to 1.0.
            </summary>
            <value>The volume of the sound.</value>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.PdfSoundAnnotation">
            <summary>
            Represents the sound annotation.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfSoundAnnotation.#ctor(System.Drawing.RectangleF,System.String)">
            <param name="rectangle">RectangleF structure that specifies the bounds of the annotation.</param>
            <param name="fileName">The string specifies the file name of the sound annotation.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfSoundAnnotation.Initialize">
            <summary>
            Initializes instance.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfSoundAnnotation.Save">
            <summary>
            Saves instance.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfSoundAnnotation.FileName">
            <value>The string specifies the file name of the sound annotation.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfSoundAnnotation.Icon">
            <summary>
            Gets or sets the icon to be used in displaying the annotation.
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.Annotations.PdfSoundIcon"/> enumeration member specifying the icon for the annotation.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfSoundAnnotation.Sound">
            <summary>
            Gets or sets the sound.
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.Actions.PdfSound"/> object specified a sound for the annotation.</value>
        </member>
        <member name="T:ComponentPro.Pdf.Actions.PdfSoundChannels">
            <summary>
            The number of sound channels.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Actions.PdfSoundChannels.Mono">
            <summary>
            One channel.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Actions.PdfSoundChannels.Stereo">
            <summary>
            Two channels.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.PdfSoundEncoding">
            <summary>
            The encoding format for the sample data.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfSoundEncoding.Raw">
            <summary>
            Unspecified or unsigned values in the range 0 to 2^B - 1.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfSoundEncoding.Signed">
            <summary>
            Twos-complement values.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfSoundEncoding.MuLaw">
            <summary>
            M-law�encoded samples.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfSoundEncoding.ALaw">
            <summary>
            A-law�encoded samples.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.PdfSoundIcon">
            <summary>
            Specifies the name of an icon to be used in displaying the sound annotation.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfSoundIcon.Speaker">
            <summary>
            Speaker icon of sound link.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfSoundIcon.Mic">
            <summary>
            Microphone icon of sound link.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Actions.PdfSubmitFormAction">
            <summary>
            Represents PDF form's submit action.submit action allows submission of data that is entered in the PDF form
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Actions.PdfSubmitFormAction.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Actions.PdfSubmitFormAction"/> class with URL to submit the form data
            </summary>
            <param name="url">The URL.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Actions.PdfSubmitFormAction.Initialize">
            <summary>
            Initializes instance.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Actions.PdfSubmitFormAction.CanonicalDateTimeFormat">
            <summary>
            If set, any submitted field values representing dates are converted to the 
            standard format. The interpretation of a form field as a date is not specified 
            explicitly in the field itself but only in the JavaScript code that processes it.
            </summary>
            <value>
            <c>true</c> if use canonical date time format when submit data; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ComponentPro.Pdf.Actions.PdfSubmitFormAction.DataFormat">
            <summary>
            Gets or sets the <see cref="T:ComponentPro.Pdf.Actions.SubmitDataFormat"/>
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.Actions.SubmitDataFormat"/></value>
        </member>
        <member name="P:ComponentPro.Pdf.Actions.PdfSubmitFormAction.ExcludeNonUserAnnotations">
            <summary>
            Gets or sets a value indicating whether to exclude non user annotations form submit 
            data stream. Meaningful only when the form is being submitted in Forms Data Format 
            and the <see cref="P:ComponentPro.Pdf.Actions.PdfSubmitFormAction.IncludeAnnotations"/> property is set to true.
            </summary>
            <value>
            <c>true</c> if non user annotations should be excluded; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ComponentPro.Pdf.Actions.PdfSubmitFormAction.HttpMethod">
            <summary>
            Gets or sets the HTTP method.
            </summary>
            <value>The HTTP method.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Actions.PdfSubmitFormAction.Include">
            <summary>
            Gets or sets a value indicating whether fields contained in Fields
            collection will be included for submitting.
            </summary>
            <value><c>true</c> if include; otherwise, <c>false</c>.</value>
            <remarks>
            If Include property is true, only the fields in this collection will be submitted.
            If Include property is false, the fields in this collection are not submitted
            and only the remaining form fields are submitted.
            If the collection is null or empty, then all the form fields are reset
            and the Include property is ignored.
            If the field has Export property set to false it will be not included for 
            submitting in any case.
            </remarks>
        </member>
        <member name="P:ComponentPro.Pdf.Actions.PdfSubmitFormAction.IncludeAnnotations">
            <summary>
            Gets or sets a value indicating whether to submit annotations.
            Meaningful only when the form is being submitted in Forms Data Format.
            If set, the submitted FDF file includes all markup annotations in the 
            underlying PDF document. If clear, markup annotations are not included.
            </summary>
            <value><c>true</c> if annotations should be submitted; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Actions.PdfSubmitFormAction.IncludeIncrementalUpdates">
            <summary>
            Gets or sets a value indicating whether to submit form's incremental updates.
            Meaningful only when the form is being submitted in Forms Data Format.
            If set, the submitted FDF file includes the contents of all incremental 
            updates to the underlying PDF document. If clear, the incremental updates are 
            not included.
            </summary>
            <value>
            <c>true</c> if incremental updates should be submitted; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ComponentPro.Pdf.Actions.PdfSubmitFormAction.IncludeNoValueFields">
            <summary>
            Gets or sets a value indicating whether to submit fields without value.
            If set, all fields designated by the Fields collection and the <see cref="P:ComponentPro.Pdf.Actions.PdfSubmitFormAction.Include"/>
            flag are submitted, regardless of whether they have a value. For fields without a 
            value, only the field name is transmitted.
            </summary>
            <value>
            <c>true</c> if submit fields without value or the empty ones; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ComponentPro.Pdf.Actions.PdfSubmitFormAction.SubmitCoordinates">
            <summary>
            Gets or sets a value indicating whether to submit mouse pointer coordinates. If set, 
            the coordinates of the mouse click that caused the submit-form action are transmitted 
            as part of the form data. The coordinate values are relative to the upper-left corner 
            of the field�s widget annotation rectangle.
            </summary>
            <value><c>true</c> if submit coordinates; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Actions.PdfSubmitFormAction.Url">
            <summary>
            Gets an Url address where the data should be transferred.
            </summary>          
            <value>An string value specifying the full URI for the internet resource. </value>
        </member>
        <member name="T:ComponentPro.Pdf.Forms.PdfSubmitFormFlags">
            <summary>
            Specifies the available data formats for submitting the form data.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Forms.PdfSubmitFormFlags.IncludeExclude">
            <summary>
            If clear, the Fields array specifies which fields to
            include in the submission. (All descendants of the specified fields in
            the field hierarchy are submitted as well.)
            If set, the Fields array tells which fields to exclude. All fields in the
            document�s interactive form are submitted except those listed in the
            Fields array and those whose NoExport flag.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Forms.PdfSubmitFormFlags.IncludeNoValueFields">
            <summary>
            If set, all fields designated by the Fields array and the Include/
            Exclude flag are submitted, regardless of whether they have a value. 
            For fields without a value, only the
            field name is transmitted.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Forms.PdfSubmitFormFlags.ExportFormat">
            <summary>
            Meaningful only if the SubmitPDF and XFDF flags are clear. If set,
            field names and values are submitted in HTML Form format. If
            clear, they are submitted in Forms Data Format
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Forms.PdfSubmitFormFlags.GetMethod">
            <summary>
            If set, field names and values are submitted using an HTTP GET
            request. If clear, they are submitted using a POST request. This flag
            is meaningful only when the ExportFormat flag is set; if ExportFormat
            is clear, this flag must also be clear.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Forms.PdfSubmitFormFlags.SubmitCoordinates">
            <summary>
            If set, the coordinates of the mouse click that caused the submitform
            action are transmitted as part of the form data. The coordinate
            values are relative to the upper-left corner of the field�s widget annotation
            rectangle.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Forms.PdfSubmitFormFlags.Xfdf">
            <summary>
            Meaningful only if the SubmitPDF flags are clear. If set,
            field names and values are submitted as XML Forms Data Format .
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Forms.PdfSubmitFormFlags.IncludeAppendSaves">
            <summary>
            Meaningful only when the form is being submitted in
            Forms Data Format (that is, when both the XFDF and ExportFormat
            flags are clear). If set, the submitted FDF file includes the contents
            of all incremental updates to the underlying PDF document,
            as contained in the Differences entry in the FDF dictionary.
            If clear, the incremental updates are not included.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Forms.PdfSubmitFormFlags.IncludeAnnotations">
            <summary>
            Meaningful only when the form is being submitted in
            Forms Data Format (that is, when both the XFDF and ExportFormat
            flags are clear). If set, the submitted FDF file includes all markup
            annotations in the underlying PDF document.
            If clear, markup annotations are not included.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Forms.PdfSubmitFormFlags.SubmitPdf">
            <summary>
            If set, the document is submitted as PDF, using the
            MIME content type application/pdf (described in Internet RFC
            2045, Multipurpose Internet Mail Extensions (MIME), Part One:
            Format of Internet Message Bodies; see the Bibliography). If set, all
            other flags are ignored except GetMethod.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Forms.PdfSubmitFormFlags.CanonicalFormat">
            <summary>
            If set, any submitted field values representing dates are
            converted to the standard format described.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Forms.PdfSubmitFormFlags.ExclNonUserAnnots">
            <summary>
            Meaningful only when the form is being submitted in
            Forms Data Format (that is, when both the XFDF and
            ExportFormat flags are clear) and the IncludeAnnotations flag is
            set. If set, it includes only those markup annotations whose T entry
            matches the name of the current user, as determined
            by the remote server to which the form is being submitted.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Forms.PdfSubmitFormFlags.ExclFKey">
            <summary>
            Meaningful only when the form is being submitted in
            Forms Data Format (that is, when both the XFDF and ExportFormat
            flags are clear). If set, the submitted FDF excludes the F entry.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Forms.PdfSubmitFormFlags.EmbedForm">
            <summary>
            Meaningful only when the form is being submitted in
            Forms Data Format (that is, when both the XFDF and ExportFormat
            flags are clear). If set, the F entry of the submitted FDF is a file
            specification containing an embedded file stream representing the
            PDF file from which the FDF is being submitted.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Forms.PdfTextBoxField">
            <summary>
            Represents text box field in the PDF form.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfAppearanceField"/> Class   
            <seealso cref="T:ComponentPro.Pdf.PdfDocument"/> Class  
            <seealso cref="T:ComponentPro.Pdf.PdfPage"/> Class  
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> Class  
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfTextBoxField.#ctor(ComponentPro.Pdf.PdfPageBase,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Forms.PdfTextBoxField"/> class with the provided page and name.
            </summary>
            <param name="page">Page which the field to be placed on.</param>
            <param name="name">The name of the text box field.</param>         
            <seealso cref="T:ComponentPro.Pdf.PdfDocument"/> Class  
            <seealso cref="T:ComponentPro.Pdf.PdfPage"/> Class  
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> Class  
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfTextBoxField.DrawAppearance(ComponentPro.Pdf.Graphics.PdfTemplate)">
            <summary>
            Draws the appearance.
            </summary>
            <param name="template">The template.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfTextBoxField.Initialize">
            <summary>
            Initializes an instance.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfTextBoxField.DefaultValue">
            <summary>
            Gets or sets the default value.
            </summary>
            <value>The default value of the text box field.</value>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class  
            <seealso cref="T:ComponentPro.Pdf.PdfPage" /> Class  
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfFont" /> Class  
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfTextBoxField.InsertSpaces">
            <summary>
            Meaningful only if the MaxLength property is set and the Multiline, Password properties are false.
            If set, the field is automatically divided into as many equally spaced positions, or combs, 
            as the value of MaxLength, and the text is laid out into those combs.
            </summary>
            <value><c>true</c> if need to insert spaces; otherwise, <c>false</c>.</value>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class  
            <seealso cref="T:ComponentPro.Pdf.PdfPage" /> Class  
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfFont" /> Class  
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfTextBoxField.MaxLength">
            <summary>
            Gets or sets the maximum number of characters that can be entered in the text box.
            </summary>
            <value>An integer value specifying the maximum number of characters that can be entered in the text box.</value>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class  
            <seealso cref="T:ComponentPro.Pdf.PdfPage" /> Class  
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfFont" /> Class 
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfTextBoxField.Multiline">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:ComponentPro.Pdf.Forms.PdfTextBoxField"/> is multiline.
            </summary>
            <value><c>true</c> if multiline; otherwise, <c>false</c>.</value>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument"/> Class  
            <seealso cref="T:ComponentPro.Pdf.PdfPage"/> Class  
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> Class  
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfTextBoxField.Password">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:ComponentPro.Pdf.Forms.PdfTextBoxField"/> is password field.
            </summary>
            <value><c>true</c> if password field; otherwise, <c>false</c>.</value>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument"/> Class  
            <seealso cref="T:ComponentPro.Pdf.PdfPage"/> Class  
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> Class 
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfTextBoxField.Scrollable">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:ComponentPro.Pdf.Forms.PdfTextBoxField"/> is scrollable.
            </summary>
            <value><c>true</c> if scrollable; otherwise, <c>false</c>.</value>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument"/> Class  
            <seealso cref="T:ComponentPro.Pdf.PdfPage"/> Class  
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> Class 
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfTextBoxField.SpellCheck">
            <summary>
            Gets or sets a value indicating whether to check spelling.
            </summary>
            <value><c>true</c> if check spelling; otherwise, <c>false</c>.</value>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class  
            <seealso cref="T:ComponentPro.Pdf.PdfPage" /> Class  
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfFont" /> Class  
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfTextBoxField.Text">
            <summary>
            Gets or sets the text in the text box.
            </summary>
            <value>The text of the text box field.</value>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class  
            <seealso cref="T:ComponentPro.Pdf.PdfPage" /> Class  
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfFont" /> Class  
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.PdfTextMarkupAnnotation">
            <summary>
            Represents the text markup annotation.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfTextMarkupAnnotation.#ctor">
            <summary>
            Initializes new instance of <see cref="T:ComponentPro.Pdf.Annotations.PdfTextMarkupAnnotation"/> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfTextMarkupAnnotation.#ctor(System.Drawing.RectangleF)">
            <summary>
            Initializes new instance of <see cref="T:ComponentPro.Pdf.Annotations.PdfTextMarkupAnnotation"/> class with specified bounds.
            </summary>
            <param name="rectangle">The bounds of the annotation.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfTextMarkupAnnotation.#ctor(System.String,System.String,System.String,System.Drawing.PointF,ComponentPro.Pdf.Graphics.PdfFont)">
            <summary>
            Initializes new instance of <see cref="T:ComponentPro.Pdf.Annotations.PdfTextMarkupAnnotation"/> class with specified title, markup text, annotation text and font.
            </summary>
            <param name="markupTitle">The markup annotation title.</param>
            <param name="text">The string specifies the text of the annotation.</param>
            <param name="markupText">The string specifies the markup text of the annotation.</param>
            <param name="point">The location of the markup text annotation.</param>
            <param name="pdfFont">The <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> specifies the text appearance of the markup text annotation.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfTextMarkupAnnotation.Initialize">
            <summary>
            Initializes Annotation object.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfTextMarkupAnnotation.Save">
            <summary>
            Saves an Text Markup Annotation .
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfTextMarkupAnnotation.TextMarkupAnnotationType">
            <summary>
            Gets or sets TextMarkupAnnotationType.
            </summary>
            <value>The <see cref="P:ComponentPro.Pdf.Annotations.PdfTextMarkupAnnotation.TextMarkupAnnotationType"/> enumeration value which contains the different types of mark up annotation types. </value>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.PdfTextMarkupAnnotationType">
            <summary>
            Specifies the Style of the Text Markup Annotation
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfTextMarkupAnnotationType.Highlight">
            <summary>
            The Text Markup Annotation Type is Highlight.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfTextMarkupAnnotationType.Underline">
            <summary>
            The Text Markup Annotation Type is Underline.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfTextMarkupAnnotationType.Squiggly">
            <summary>
            The Text Markup Annotation Type is Squiggly.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Annotations.PdfTextMarkupAnnotationType.StrikeOut">
            <summary>
            The Text Markup Annotation Type is StrikeOut.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.PdfTextStyle">
            <summary>
            Allows to choose outline text style.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfTextStyle.Regular">
            <summary>
            Regular text style.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfTextStyle.Italic">
            <summary>
            Italic text style.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfTextStyle.Bold">
            <summary>
            Bold text style.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.PdfTextWebLink">
            <summary>
            Represents the class for text web link annotation.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfTextWebLink.DrawTextWebLink(ComponentPro.Pdf.PdfPage,System.Drawing.PointF)">
            <summary>
            Draws a Text Web Link on the Page
            </summary>
            <param name="page">The page where the annotation should be placed.</param>
            <param name="location">The location of the annotation.</param>
            <returns>Pdf Layout result</returns> 
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfTextWebLink.DrawTextWebLink(ComponentPro.Pdf.Graphics.PdfGraphics,System.Drawing.PointF)">
            <summary>
            Draw a Text Web Link on the Graphics
            </summary>
            <param name="g">The <see cref="T:ComponentPro.Pdf.Graphics.PdfGraphics" /> object specifies where annotation should be placed..</param>
            <param name="location">The location of the annotation.</param> 
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfTextWebLink.Url">
            <summary>
            Gets or sets the Uri address.
            </summary>
            <value> The string value which contains the Uri address.</value>
        </member>
        <member name="T:ComponentPro.Pdf.Actions.PdfUriAction">
            <summary>
            Represents an action which resolves unique resource identifier.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Actions.PdfUriAction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Actions.PdfUriAction"/> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Actions.PdfUriAction.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Actions.PdfUriAction"/> class.
            </summary>
            <param name="uri">The unique resource identifier.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Actions.PdfUriAction.Initialize">
            <summary>
            Initializes instance.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Actions.PdfUriAction.Uri">
            <summary>
            Gets or sets the unique resource identifier.
            </summary>
            <value>The unique resource identifier.</value>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.PdfUriAnnotation">
            <summary>
            Represents the Uri annotation.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfUriAnnotation.#ctor(System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Annotations.PdfUriAnnotation"/> class with specified bounds.
            </summary>   
            <param name="rectangle">RectangleF structure that specifies the bounds of the annotation.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfUriAnnotation.#ctor(System.Drawing.RectangleF,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Annotations.PdfUriAnnotation"/> class with specified bounds and Uri.
            </summary>
            <param name="rectangle">RectangleF structure that specifies the bounds of the annotation.</param>
            <param name="uri">unique resource identifier path.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfUriAnnotation.Initialize">
            <summary>
            Initializes annotation object.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfUriAnnotation.Action">
            <summary>
            Gets or sets the action.
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.Actions.PdfAction"/> object specifies the action of the annotation.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfUriAnnotation.Uri">
            <summary>
            Gets or sets the Uri address.
            </summary>
            <Value>The string value which contains Uri address.</Value>
        </member>
        <member name="T:ComponentPro.Pdf.Actions.SubmitDataFormat">
            <summary>
            Specifies the enumeration of submit data formats.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Actions.SubmitDataFormat.Html">
            <summary>
            Data should be transmitted as Html.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Actions.SubmitDataFormat.Pdf">
            <summary>
            Data should be transmitted as Pdf.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Actions.SubmitDataFormat.Fdf">
            <summary>
            Data should be transmitted as Forms Data Format.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Actions.SubmitDataFormat.Xfdf">
            <summary>
            Data should be transmitted as XML Forms Data Format .
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Lists.BeforeItemLayoutEventArgs">
            <summary>
            Represents begin layout event arguments.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Lists.BeforeItemLayoutEventArgs.Item">
            <summary>
            Gets the item.
            </summary>
            <value>The item that layout.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Lists.BeforeItemLayoutEventArgs.Page">
            <summary>
            Gets the page.
            </summary>
            <value>The page in which item start layout.</value>
        </member>
        <member name="T:ComponentPro.Pdf.Lists.BeforeItemLayoutEventHandler">
            <summary>
            Delegate for handling BeforeItemLayoutEvent.
            </summary>
            <param name="sender">The item that begin layout.</param>
            <param name="args">Before Item Layout arguments.</param>
        </member>
        <member name="T:ComponentPro.Pdf.Lists.AfterItemLayoutEventArgs">
            <summary>
            Represents end layout event arguments.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Lists.AfterItemLayoutEventArgs.Item">
            <summary>
            Gets the item that layout.
            </summary>
            <value>The item that layout.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Lists.AfterItemLayoutEventArgs.Page">
            <summary>
            Gets the page in which item ended layout.
            </summary>
            <value>The page in which item ended layout.</value>
        </member>
        <member name="T:ComponentPro.Pdf.Lists.AfterItemLayoutEventHandler">
            <summary>
            Delegate for handling AfterItemLayoutEvent.
            </summary>
            <param name="sender">The item that end layout.</param>
            <param name="args">After Item Layout arguments.</param>
        </member>
        <member name="T:ComponentPro.Pdf.Lists.ListBeforePageLayoutEventArgs">
            <summary>
            Represents begin page layout event arguments.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Graphics.BeforePageLayoutEventArgs" /> Class 
        </member>
        <member name="P:ComponentPro.Pdf.Lists.ListBeforePageLayoutEventArgs.List">
            <summary>
            Gets the list that starts layout.
            </summary>
            <value>The list that starts layout.</value>
        </member>
        <member name="T:ComponentPro.Pdf.Lists.ListAfterPageLayoutEventArgs">
            <summary>
            Represents begin page layout event arguments.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Graphics.AfterPageLayoutEventArgs" /> Class    
        </member>
        <member name="P:ComponentPro.Pdf.Lists.ListAfterPageLayoutEventArgs.List">
            <summary>
            Gets the list that ended layout.
            </summary>
            <value>The list that ended layout.</value>
        </member>
        <member name="T:ComponentPro.Pdf.Lists.PdfList">
            <summary>
            Represents base class for lists.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfLayoutElement" /> Class    
        </member>
        <member name="M:ComponentPro.Pdf.Lists.PdfList.CreateItems(System.String)">
            <summary>
            Creates an item collection.
            </summary>
            <param name="text">The text.</param>
            <returns>The item collection initialized properly.</returns>
            <exclude />
        </member>
        <member name="M:ComponentPro.Pdf.Lists.PdfList.Draw(ComponentPro.Pdf.Graphics.PdfGraphics,System.Single,System.Single)">
            <summary>
            Draws an list on the Graphics.
            </summary>
            <param name="graphics">Graphics context where the list should be printed.</param>
            <param name="x">X co-ordinate of the list.</param>
            <param name="y">Y co-ordinate of the list.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Lists.PdfList.DrawInternal(ComponentPro.Pdf.Graphics.PdfGraphics)">
            <summary>
            Draws list on the Graphics.
            </summary>
            <param name="graphics">Pdf graphics.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Lists.PdfList.Layout(ComponentPro.Pdf.Graphics.PdfLayoutParams)">
            <summary>
            Layouts list at page.
            </summary>
            <param name="param">Pdf layout parameters.</param>
            <returns>Returns layout results.</returns>
        </member>
        <member name="F:ComponentPro.Pdf.Lists.PdfList.c_splitChars">
            <summary>
            The characters for splitting.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Lists.PdfList.Brush">
            <summary>
            Gets or sets list brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Lists.PdfList.Font">
            <summary>
            Gets or sets the list font.
            </summary>		
        </member>
        <member name="P:ComponentPro.Pdf.Lists.PdfList.Indent">
            <summary>
            Gets or sets tabulation for the list.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Lists.PdfList.Items">
            <summary>
            Gets items of the list.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Lists.PdfList.Pen">
            <summary>
            Gets or sets list pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Lists.PdfList.StringFormat">
            <summary>
            Gets or sets the format of the list.
            </summary>
            <value>The format.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Lists.PdfList.TextIndent">
            <summary>
            Gets or sets the indent from the marker to the list item text.
            </summary>
        </member>
        <member name="E:ComponentPro.Pdf.Lists.PdfList.BeforeItemLayout">
            <summary>
            Event that rises when item begin layout.
            </summary>
        </member>
        <member name="E:ComponentPro.Pdf.Lists.PdfList.AfterItemLayout">
            <summary>
            Event that rises when item end layout.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Lists.PdfListItem">
            <summary>
            Represents the list item of the list.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class  
            <seealso cref="T:ComponentPro.Pdf.PdfPage" /> Class  
        </member>
        <member name="M:ComponentPro.Pdf.Lists.PdfListItem.#ctor">
            <summary>
            Creates new empty pdf list item.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Lists.PdfListItem.#ctor(System.String)">
            <summary>
            Creates new pdf list item with default settings.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Lists.PdfListItem.#ctor(System.String,ComponentPro.Pdf.Graphics.PdfFont)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Lists.PdfListItem" /> class.
            </summary>
            <param name="text">The text of item.</param>
            <param name="font">The font of item.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Lists.PdfListItem.#ctor(System.String,ComponentPro.Pdf.Graphics.PdfFont,ComponentPro.Pdf.Graphics.PdfStringFormat)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Lists.PdfListItem" /> class.
            </summary>
            <param name="text">The text of item.</param>
            <param name="font">The font of item.</param>
            <param name="format">The string format.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Lists.PdfListItem.#ctor(System.String,ComponentPro.Pdf.Graphics.PdfFont,ComponentPro.Pdf.Graphics.PdfStringFormat,ComponentPro.Pdf.Graphics.PdfPen,ComponentPro.Pdf.Graphics.PdfBrush)">
            <summary>
            Creates new list item.
            </summary>
            <param name="text">The item text.</param>
            <param name="font">The item font.</param>
            <param name="format">The string format of item.</param>
            <param name="pen">The item pen.</param>
            <param name="brush">The item brush.</param>
        </member>
        <member name="P:ComponentPro.Pdf.Lists.PdfListItem.Brush">
            <summary>
            Gets or sets list item brush.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class  
            <seealso cref="T:ComponentPro.Pdf.PdfPage" /> Class           
        </member>
        <member name="P:ComponentPro.Pdf.Lists.PdfListItem.Font">
            <summary>
            Gets or sets item font.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class  
            <seealso cref="T:ComponentPro.Pdf.PdfPage" /> Class 
        </member>
        <member name="P:ComponentPro.Pdf.Lists.PdfListItem.PdfTag">
            <summary>
            Get or set the tag for the element
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Lists.PdfListItem.Pen">
            <summary>
            Gets or sets list item pen.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class  
            <seealso cref="T:ComponentPro.Pdf.PdfPage" /> Class        
        </member>
        <member name="P:ComponentPro.Pdf.Lists.PdfListItem.StringFormat">
            <summary>
            Gets or sets item string format.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class  
            <seealso cref="T:ComponentPro.Pdf.PdfPage" /> Class        
        </member>
        <member name="P:ComponentPro.Pdf.Lists.PdfListItem.SubList">
            <summary>
            Gets or sets sublist for item. 
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class  
            <seealso cref="T:ComponentPro.Pdf.PdfPage" /> Class         
        </member>
        <member name="P:ComponentPro.Pdf.Lists.PdfListItem.Text">
            <summary>
            Gets or sets item text.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class  
            <seealso cref="T:ComponentPro.Pdf.PdfPage" /> Class       
        </member>
        <member name="P:ComponentPro.Pdf.Lists.PdfListItem.TextIndent">
            <summary>
            Gets or sets indent for item.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class  
            <seealso cref="T:ComponentPro.Pdf.PdfPage" /> Class         
        </member>
        <member name="T:ComponentPro.Pdf.Lists.PdfListItemCollection">
            <summary>
            Represents collection of list items.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfCollection" /> Class    
        </member>
        <member name="M:ComponentPro.Pdf.Lists.PdfListItemCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Lists.PdfListItemCollection" /> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Lists.PdfListItemCollection.#ctor(System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:PdfListItemCollection" /> class.
            </summary>
            <param name="items">A string array that contains items separated by the new line character.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Lists.PdfListItemCollection.Add(ComponentPro.Pdf.Lists.PdfListItem)">
            <summary>
            Adds the specified item.
            </summary>
            <param name="item">The item.</param>
            <returns>The item index in collection.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Lists.PdfListItemCollection.Add(System.String)">
            <summary>
            Adds the item with a specified text.
            </summary>
            <param name="text">The text.</param>
            <returns></returns>
        </member>
        <member name="M:ComponentPro.Pdf.Lists.PdfListItemCollection.Add(ComponentPro.Pdf.Lists.PdfListItem,System.Single)">
            <summary>
            Adds the specified item.
            </summary>
            <param name="item">The item.</param>
            <param name="itemIndent">The item indent.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Lists.PdfListItemCollection.Add(System.String,System.Single)">
            <summary>
            Adds the specified text.
            </summary>
            <param name="text">The text.</param>
            <param name="itemIndent">The item indent.</param>
            <returns>List item.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Lists.PdfListItemCollection.Add(System.String,ComponentPro.Pdf.Graphics.PdfFont)">
            <summary>
            Adds the specified text.
            </summary>
            <param name="text">The text.</param>
            <param name="font">The font.</param>
            <returns>The item index in collection.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Lists.PdfListItemCollection.Add(System.String,ComponentPro.Pdf.Graphics.PdfFont,System.Single)">
            <summary>
            Adds the specified text.
            </summary>
            <param name="text">The text.</param>
            <param name="font">The font.</param>
            <param name="itemIndent">The item indent.</param>
            <returns>List item.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Lists.PdfListItemCollection.Clear">
            <summary>
            Clears collection.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Lists.PdfListItemCollection.IndexOf(ComponentPro.Pdf.Lists.PdfListItem)">
            <summary>
            Determines the index of a specific item in the list.
            </summary>
            <param name="item">The item to locate in the list. </param>
            <returns>The index of item if found in the list; otherwise, -1. </returns>
        </member>
        <member name="M:ComponentPro.Pdf.Lists.PdfListItemCollection.Insert(System.Int32,ComponentPro.Pdf.Lists.PdfListItem)">
            <summary>
            Inserts item at the specified index.
            </summary>
            <param name="index">The specified index.</param>
            <param name="item">The item.</param>
            <returns>The item index </returns>
        </member>
        <member name="M:ComponentPro.Pdf.Lists.PdfListItemCollection.Insert(System.Int32,ComponentPro.Pdf.Lists.PdfListItem,System.Single)">
            <summary>
            Inserts the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="item">The item.</param>
            <param name="itemIndent">The item indent.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Lists.PdfListItemCollection.Remove(ComponentPro.Pdf.Lists.PdfListItem)">
            <summary>
            Removes the specified item from the list.
            </summary>
            <param name="item">The specified item.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Lists.PdfListItemCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the item at the specified index from the list.
            </summary>
            <param name="index">he specified index.</param>
        </member>
        <member name="P:ComponentPro.Pdf.Lists.PdfListItemCollection.Item(System.Int32)">
            <summary>
            Gets the PdfListItem from collection at the specified index.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class  
            <seealso cref="T:ComponentPro.Pdf.Lists.PdfListItemCollection" /> Class  
        </member>
        <member name="T:ComponentPro.Pdf.Lists.PdfListMarkerAlignment">
            <summary>
            Represents marker alignment.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Lists.PdfMarker" /> Class    
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class   
            <seealso cref="!:PdfFont" /> Class   
            <seealso cref="T:ComponentPro.Pdf.Lists.PdfBulletedList" /> Class 
        </member>
        <member name="F:ComponentPro.Pdf.Lists.PdfListMarkerAlignment.Left">
            <summary>
            Left alignment for marker.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Lists.PdfListMarkerAlignment.Right">
            <summary>
            Right alignment for marker.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Lists.PdfMarker">
            <summary>
            Represents base class for markers.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Lists.PdfMarker.Alignment">
            <summary>
            Gets or sets a value indicating whether the marker is
            situated at the left of the list or at the right of the list.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Lists.PdfMarker.Brush">
            <summary>
            Gets or sets marker brush.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Lists.PdfMarker.Font">
            <summary>
            Gets or sets marker font.
            </summary>		
        </member>
        <member name="P:ComponentPro.Pdf.Lists.PdfMarker.Pen">
            <summary>
            Gets or sets marker pen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Lists.PdfMarker.StringFormat">
            <summary>
            Gets or sets the format.
            </summary>
            <value>The format.</value>
        </member>
        <member name="T:ComponentPro.Pdf.Lists.PdfNumberedList">
            <summary>
            Represents the ordered list.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Lists.PdfList" /> Class   
        </member>
        <member name="M:ComponentPro.Pdf.Lists.PdfNumberedList.#ctor">
            <summary>
            Creates ordered list.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Lists.PdfNumberedList.#ctor(ComponentPro.Pdf.Graphics.PdfFont)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Lists.PdfNumberedList" /> class.
            </summary>
            <param name="font">The font.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Lists.PdfNumberedList.#ctor(ComponentPro.Pdf.PdfNumberStyle)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Lists.PdfNumberedList" /> class.
            </summary>
            <param name="style">The style.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Lists.PdfNumberedList.#ctor(ComponentPro.Pdf.Lists.PdfListItemCollection)">
            <summary>
            Creates ordered list using items.
            </summary>
            <param name="items">Items for a list.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Lists.PdfNumberedList.#ctor(ComponentPro.Pdf.Lists.PdfNumberedMarker)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Lists.PdfNumberedList" /> class.
            </summary>
            <param name="marker">The marker for the list.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Lists.PdfNumberedList.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:PdfNumberedList" /> class.
            </summary>
            <param name="text">The formatted text.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Lists.PdfNumberedList.#ctor(ComponentPro.Pdf.Lists.PdfListItemCollection,ComponentPro.Pdf.Lists.PdfNumberedMarker)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Lists.PdfNumberedList" /> class.
            </summary>
            <param name="items">The item collection.</param>
            <param name="marker">The marker for the list.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Lists.PdfNumberedList.#ctor(System.String,ComponentPro.Pdf.Lists.PdfNumberedMarker)">
            <summary>
            Initializes a new instance of the <see cref="T:PdfNumberedList" /> class
            from formatted text that is splitted by new lines.
            </summary>
            <param name="text">The formatted text.</param>
            <param name="marker">The marker.</param>
        </member>
        <member name="P:ComponentPro.Pdf.Lists.PdfNumberedList.Marker">
            <summary>
            Gets or sets marker of the list items.
            </summary>       
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class
            <seealso cref="T:ComponentPro.Pdf.PdfPage" /> Class
            <seealso cref="T:ComponentPro.Pdf.Lists.PdfNumberedList" /> Class
        </member>
        <member name="P:ComponentPro.Pdf.Lists.PdfNumberedList.MarkerHierarchy">
            <summary>
            True if user want to use numbering hierarchy, otherwise false.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class
            <seealso cref="T:ComponentPro.Pdf.PdfPage" /> Class
            <seealso cref="T:ComponentPro.Pdf.Lists.PdfNumberedList" /> Class      
        </member>
        <member name="T:ComponentPro.Pdf.Lists.PdfNumberedMarker">
            <summary>
            Represents marker for ordered list.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Lists.PdfMarker" /> Class  
            <seealso cref="T:ComponentPro.Pdf.PdfPage" /> Class  
            <seealso cref="T:ComponentPro.Pdf.Lists.PdfNumberedMarker" /> Class  
        </member>
        <member name="M:ComponentPro.Pdf.Lists.PdfNumberedMarker.#ctor(ComponentPro.Pdf.PdfNumberStyle,ComponentPro.Pdf.Graphics.PdfFont)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Lists.PdfNumberedMarker" /> class.
            </summary>
            <param name="style">Number style of marker.</param>
            <param name="font">Number font of marker.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Lists.PdfNumberedMarker.#ctor(ComponentPro.Pdf.PdfNumberStyle,System.String,ComponentPro.Pdf.Graphics.PdfFont)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Lists.PdfNumberedMarker" /> class.
            </summary>
            <param name="style">Number style of marker.</param>
            <param name="suffix">Number suffix of the marker.</param>
            <param name="font">Number font of marker.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Lists.PdfNumberedMarker.#ctor(ComponentPro.Pdf.PdfNumberStyle,System.String,System.String,ComponentPro.Pdf.Graphics.PdfFont)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Lists.PdfNumberedMarker" /> class.
            </summary>
            <param name="style">Number style of marker.</param>
            <param name="delimiter">Number delimiter of marker.</param>
            <param name="suffix">Number suffix of marker.</param>
            <param name="font">Number font of marker.</param>
        </member>
        <member name="P:ComponentPro.Pdf.Lists.PdfNumberedMarker.Delimiter">
            <summary>
            Gets or sets the delimiter.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class
            <seealso cref="T:ComponentPro.Pdf.PdfPage" /> Class
            <seealso cref="T:ComponentPro.Pdf.Lists.PdfNumberedList" /> Class
        </member>
        <member name="P:ComponentPro.Pdf.Lists.PdfNumberedMarker.StartNumber">
            <summary>
            Gets ar sets start number for ordered list. Default value is 1.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class
            <seealso cref="T:ComponentPro.Pdf.PdfPage" /> Class
            <seealso cref="T:ComponentPro.Pdf.Lists.PdfNumberedList" /> Class
        </member>
        <member name="P:ComponentPro.Pdf.Lists.PdfNumberedMarker.Style">
            <summary>
            Gets or sets the list numbering style.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class
            <seealso cref="T:ComponentPro.Pdf.PdfPage" /> Class
            <seealso cref="T:ComponentPro.Pdf.Lists.PdfNumberedList" /> Class
        </member>
        <member name="P:ComponentPro.Pdf.Lists.PdfNumberedMarker.Suffix">
            <summary>
            Gets or sets the suffix of the marker.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class
            <seealso cref="T:ComponentPro.Pdf.PdfPage" /> Class
            <seealso cref="T:ComponentPro.Pdf.Lists.PdfNumberedList" /> Class
        </member>
        <member name="T:ComponentPro.Pdf.Lists.PdfBulletedList">
            <summary>
            Represents unordered list.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Lists.PdfList" /> Class
        </member>
        <member name="M:ComponentPro.Pdf.Lists.PdfBulletedList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Lists.PdfBulletedList" /> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Lists.PdfBulletedList.#ctor(ComponentPro.Pdf.Lists.PdfListItemCollection)">
            <summary>
            Creates unordered list using items.
            </summary>
            <param name="items">Items for a list.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Lists.PdfBulletedList.#ctor(ComponentPro.Pdf.Graphics.PdfFont)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Lists.PdfBulletedList" /> class.
            </summary>
            <param name="font">The font.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Lists.PdfBulletedList.#ctor(ComponentPro.Pdf.Lists.PdfBulletedMarker)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Lists.PdfBulletedList" /> class.
            </summary>
            <param name="marker">The marker for the list.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Lists.PdfBulletedList.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:PdfBulletedList" /> class.
            </summary>
            <param name="text">The formatted text.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Lists.PdfBulletedList.#ctor(ComponentPro.Pdf.Lists.PdfListItemCollection,ComponentPro.Pdf.Lists.PdfBulletedMarker)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Lists.PdfBulletedList" /> class.
            </summary>
            <param name="items">The items collection.</param>
            <param name="marker">The marker for the list.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Lists.PdfBulletedList.#ctor(System.String,ComponentPro.Pdf.Lists.PdfBulletedMarker)">
            <summary>
            Initializes a new instance of the <see cref="T:PdfBulletedList" /> class
            from formatted text that is splitted by new lines.
            </summary>
            <param name="text">The formatted text.</param>
            <param name="marker">The marker.</param>
        </member>
        <member name="P:ComponentPro.Pdf.Lists.PdfBulletedList.Marker">
            <summary>
            Gets or sets the marker.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class
            <seealso cref="T:ComponentPro.Pdf.PdfPage" /> Class
            <seealso cref="T:ComponentPro.Pdf.Lists.PdfNumberedList" /> Class
        </member>
        <member name="T:ComponentPro.Pdf.Lists.PdfBulletedMarker">
            <summary>
            Represents bullet for the list.
            </summary>   
            <seealso cref="T:ComponentPro.Pdf.Lists.PdfMarker" /> Class    
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class   
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfFont" /> Class   
            <seealso cref="T:ComponentPro.Pdf.Lists.PdfBulletedList" /> Class 
        </member>
        <member name="M:ComponentPro.Pdf.Lists.PdfBulletedMarker.#ctor(ComponentPro.Pdf.Lists.PdfBulletedMarkerStyle)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Lists.PdfBulletedMarker" /> class.
            </summary>
            <param name="style">The style of the marker.</param>   
            <seealso cref="T:ComponentPro.Pdf.Lists.PdfMarker" /> Class    
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class   
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfFont" /> Class   
            <seealso cref="T:ComponentPro.Pdf.Lists.PdfBulletedList" /> Class 
        </member>
        <member name="M:ComponentPro.Pdf.Lists.PdfBulletedMarker.#ctor(ComponentPro.Pdf.Graphics.PdfImage)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Lists.PdfBulletedMarker" /> class.
            </summary>
            <param name="image">The image of the marker.</param>   
            <seealso cref="T:ComponentPro.Pdf.Lists.PdfMarker" /> Class    
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class   
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfFont" /> Class   
            <seealso cref="T:ComponentPro.Pdf.Lists.PdfBulletedList" /> Class 
        </member>
        <member name="M:ComponentPro.Pdf.Lists.PdfBulletedMarker.#ctor(ComponentPro.Pdf.Graphics.PdfTemplate)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Lists.PdfBulletedMarker" /> class.
            </summary>
            <param name="template">Template of the marker.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Lists.PdfBulletedMarker.#ctor(System.String,ComponentPro.Pdf.Graphics.PdfFont)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Lists.PdfBulletedMarker" /> class.
            </summary>
            <param name="text">The text of the marker.</param>
            <param name="font">Marker font.</param>   
            <seealso cref="T:ComponentPro.Pdf.Lists.PdfMarker" /> Class    
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class   
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfFont" /> Class   
            <seealso cref="T:ComponentPro.Pdf.Lists.PdfBulletedList" /> Class 
        </member>
        <member name="P:ComponentPro.Pdf.Lists.PdfBulletedMarker.Image">
            <summary>
            Gets or sets image of the marker.
            </summary>   
            <seealso cref="T:ComponentPro.Pdf.Lists.PdfMarker" /> Class    
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class   
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfFont" /> Class   
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfBitmap" /> Class 
        </member>
        <member name="P:ComponentPro.Pdf.Lists.PdfBulletedMarker.Style">
            <summary>
            Gets or sets the style.
            </summary>   
            <seealso cref="T:ComponentPro.Pdf.Lists.PdfMarker" /> Class    
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class   
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfFont" /> Class   
            <seealso cref="T:ComponentPro.Pdf.Lists.PdfBulletedList" /> Class 
        </member>
        <member name="P:ComponentPro.Pdf.Lists.PdfBulletedMarker.Template">
            <summary>
            Gets or sets template of the marker.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Lists.PdfBulletedMarker.Text">
            <summary>
            Gets or sets marker text.
            </summary>   
            <seealso cref="T:ComponentPro.Pdf.Lists.PdfMarker" /> Class    
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class   
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfFont" /> Class         
        </member>
        <member name="T:ComponentPro.Pdf.Lists.PdfBulletedMarkerStyle">
            <summary>
            Specifies the marker style.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Lists.PdfMarker" /> Class    
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class   
            <seealso cref="!:PdfFont" /> Class   
            <seealso cref="T:ComponentPro.Pdf.Lists.PdfBulletedList" /> Class 
        </member>
        <member name="F:ComponentPro.Pdf.Lists.PdfBulletedMarkerStyle.None">
            <summary>
            Marker have  no style.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Lists.PdfBulletedMarkerStyle.Disk">
            <summary>
            Marker is like a disk.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Lists.PdfBulletedMarkerStyle.Square">
            <summary>
            Marker is like a square.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Lists.PdfBulletedMarkerStyle.Asterisk">
            <summary>
            Marker is like a Asterisk.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Lists.PdfBulletedMarkerStyle.Circle">
            <summary>
            Marker is like a circle.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Lists.PdfBulletedMarkerStyle.CustomString">
            <summary>
            Marker is custom string.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Lists.PdfBulletedMarkerStyle.CustomImage">
            <summary>
            Marker is custom image.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Lists.PdfBulletedMarkerStyle.CustomTemplate">
            <summary>
            Marker is custom template.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.PageAddedEventArgs">
            <summary>
            Provides data for <see cref="T:ComponentPro.Pdf.PageAddedEventHandler" /> event.
            </summary>
            <remarks>
            This event raises when adding the new PDF page to the PDF document 
            </remarks> 
            <seealso cref="T:ComponentPro.Pdf.PageAddedEventHandler" /> Delegate.      
        </member>
        <member name="M:ComponentPro.Pdf.PageAddedEventArgs.#ctor(ComponentPro.Pdf.PdfPage)">
             <summary>
             Initializes a new instance of the <see cref="T:ComponentPro.Pdf.PageAddedEventArgs" /> class with <see cref="T:ComponentPro.Pdf.PdfPage" />.
             </summary>
             <param name="page">A <see cref="T:ComponentPro.Pdf.PdfPage" /> object representing the page which is added in the document.</param>
             <seealso cref="T:ComponentPro.Pdf.PdfPage" /> Class. 
        </member>
        <member name="P:ComponentPro.Pdf.PageAddedEventArgs.Page">
             <summary>
             Gets the newly added page.
             </summary>
             <value>A <see cref="T:ComponentPro.Pdf.PdfPage" /> object representing the page which is added in the document.</value>
             <seealso cref="T:ComponentPro.Pdf.PdfPage" /> Class.
        </member>
        <member name="T:ComponentPro.Pdf.PageAddedEventHandler">
            <summary>
            Represents the method that executes on a PdfDocument when a new page is created.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">A <see cref="T:ComponentPro.Pdf.PageAddedEventArgs" /> that contains the event data.</param>
        </member>
        <member name="T:ComponentPro.Pdf.PageScalingMode">
            <summary>
            Specifies the different page scaling option that shall be selected when a print dialog is displayed for this document.
            </summary>
            <remarks>Default value is AppDefault.</remarks>
            <seealso cref="T:ComponentPro.Pdf.PdfViewerPreferences" /> Class    
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class    
        </member>
        <member name="F:ComponentPro.Pdf.PageScalingMode.AppDefault">
            <summary>
            Indicates the conforming reader�s default print scaling.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PageScalingMode.None">
            <summary>
            Indicates no page scaling.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.DataFormat">
            <summary>
            Specifies the format of Export or Import data.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfImportedForm" /> Class  
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument" /> Class  
        </member>
        <member name="F:ComponentPro.Pdf.DataFormat.Xml">
            <summary>
            Specifies  XML file format
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.DataFormat.Fdf">
            <summary>
            Specifies  Forms Data Format file format
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.DataFormat.XFdf">
            <summary>
            Specifies  XFDF file format.
            </summary>    
        </member>
        <member name="P:ComponentPro.Pdf.MatchedItem.Bounds">
            <summary>
            Rectangle bounds of the searched text.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.MatchedItem.Text">
            <summary>
            The searched text. 
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Annotations.PdfImportedAnnotationCollection">
            <summary>
            The class provides methods and properties to handle the collection of <see cref="T:ComponentPro.Pdf.Annotations.PdfImportedAnnotation"/>.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfImportedAnnotationCollection.Add(ComponentPro.Pdf.Annotations.PdfAnnotation)">
            <summary>
            Adds annotation to the collection.
            </summary>
            <param name="annotation">Annotation to be added to collection.</param>
            <returns>Position of the annotation in collection.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfImportedAnnotationCollection.DoAdd(ComponentPro.Pdf.Annotations.PdfAnnotation)">
            <summary>
            Adds a annotation to collection.
            </summary>
            <param name="annot">The annotation.</param>
            <returns></returns>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfImportedAnnotationCollection.DoClear">
            <summary>
            Clears the collection.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfImportedAnnotationCollection.DoInsert(System.Int32,ComponentPro.Pdf.Annotations.PdfAnnotation)">
            <summary>
            Inserts a annotation into collection.
            </summary>
            <param name="index">The index.</param>
            <param name="field">The annotation.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfImportedAnnotationCollection.DoRemove(ComponentPro.Pdf.Annotations.PdfAnnotation)">
            <summary>
            Removes the annotation from collection.
            </summary>
            <param name="field">The annotation.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Annotations.PdfImportedAnnotationCollection.DoRemoveAt(System.Int32)">
            <summary>
            Removes the annotation at the specified position.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfImportedAnnotationCollection.Flatten">
            <summary>
            Gets or sets the boolean flag to flatten the annotations.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfImportedAnnotationCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ComponentPro.Pdf.Annotations.PdfAnnotation"/> at the specified index.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfImportedAnnotationCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:ComponentPro.Pdf.Annotations.PdfAnnotation"/> using specified annotation name.
            </summary>
            <param name="name">The specified annotation name.</param>
        </member>
        <member name="P:ComponentPro.Pdf.Annotations.PdfImportedAnnotationCollection.Page">
            <summary>
            Gets and sets the <see cref="T:ComponentPro.Pdf.PdfImportedPage" /> where the annotation is present.
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.PdfImportedPage" /> of the existing PDF document</value>
        </member>
        <member name="T:ComponentPro.Pdf.Forms.PdfImportedButtonField">
            <summary>
            Represents a button field of an existing PDF document.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument" /> Class    
            <seealso cref="T:ComponentPro.Pdf.PdfImportedForm" /> Class    
        </member>
        <member name="T:ComponentPro.Pdf.Forms.PdfImportedStyledField">
            <summary>
            Represents loaded styled field.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfImportedField" /> Class
        </member>
        <member name="T:ComponentPro.Pdf.Forms.PdfImportedField">
            <summary>
            Represents base class for loaded fields.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfField"/> Class    
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfImportedField.SetName(System.String)">
            <summary>
            Sets the name of the field.
            </summary>
            <param name="name">New name of the field.</param>
        </member>
        <member name="F:ComponentPro.Pdf.Forms.PdfImportedField.ObjectID">
            <summary>
            Form field identifier
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedField.Export">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:ComponentPro.Pdf.Forms.PdfImportedField"/> is export.
            </summary>
            <value><c>true</c> if export; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedField.Form">
            <summary>
            Gets the form of the <see cref="T:ComponentPro.Pdf.Forms.PdfImportedField"/>.[Read-Only]
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedField.MappingName">
            <summary>
            Gets or sets the mapping name to be used when exporting interactive form field data from the document.
            </summary>
            <value>A string value specifying the mapping name of the field. </value>        
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfImportedField"/> Class   
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument"/> Class   
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedField.Name">
            <summary>
            Gets the name of the field.[Read-Only]
            </summary>
            <value>A string value specifying the name of the field.</value>
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfImportedField"/> Class   
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument"/> Class   
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedField.Page">
            <summary>
            Gets the page of the form field.[Read-Only]
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfImportedField"/> Class   
            <seealso cref="T:ComponentPro.Pdf.PdfPageBase"/> Class  
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedField.ReadOnly">
            <summary>
            Gets or sets a value indicating whether [read-only].
            </summary>
            <value>True if the field is read-only, false otherwise. Default is false.</value>
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument"/> Class   
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfImportedField"/> Class  
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedField.Required">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:ComponentPro.Pdf.Forms.PdfImportedField"/> is required.
            </summary>
            <value>True if the field is required, false otherwise. Default is false.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedField.ToolTip">
            <summary>
            Gets or sets the tool tip of the form field.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfImportedField"/> Class   
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument"/> Class   
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfImportedStyledField.DefineDefaultAppearance">
            <summary>
            Defines the default appearance.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfImportedStyledField.GetGraphicsProperties(ComponentPro.Pdf.Forms.PdfImportedStyledField.GraphicsProperties@,ComponentPro.Pdf.Forms.PdfImportedFieldItem)">
            <summary>
            Gets the graphics properties.
            </summary>
            <param name="graphicsProperties">The graphics properties.</param>
            <param name="item">The item.</param>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedStyledField.BorderColor">
            <summary>
            Gets or sets the color of the border.
            </summary>
            <value>The color of the border.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedStyledField.BorderStyle">
            <summary>
            Gets or sets the style of the border.
            </summary>
            <value>The color of the border.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedStyledField.BorderWidth">
            <summary>
            Gets or Sets the width of the border.
            </summary>
            <value>The width of the border.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedStyledField.Bounds">
            <summary>
            Gets or sets the bounds.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedStyledField.DefaultIndex">
            <summary>
            Gets the default index.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedStyledField.Font">
            <summary>
            Gets the font.
            </summary>
            <value>The font.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedStyledField.GotFocus">
            <summary>
            Gets or sets the action to be performed when the annotation receives the 
            input focus.
            </summary>
            <value>The got focus action.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedStyledField.Location">
            <summary>
            Gets or sets the location.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedStyledField.LostFocus">
            <summary>
            Gets or sets the action to be performed when the annotation loses the 
            input focus.
            </summary>
            <value>The lost focus action.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedStyledField.MouseDown">
            <summary>
            Gets or sets the action to be performed when the mouse button is pressed inside the 
            annotation�s active area.
            </summary>
            <value>The mouse down action.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedStyledField.MouseEnter">
            <summary>
            Gets or sets the action to be performed when the cursor enters the annotation�s 
            active area.
            </summary>
            <value>The mouse enter action.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedStyledField.MouseLeave">
            <summary>
            Gets or sets the action to be performed when the cursor exits the annotation�s 
            active area.
            </summary>
            <value>The mouse leave action.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedStyledField.MouseUp">
            <summary>
            Gets or sets the action to be performed when the mouse button is released 
            inside the annotation�s active area.
            </summary>
            <value>The mouse up action.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedStyledField.Size">
            <summary>
            Gets or sets the size.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedStyledField.Visibility">
            <summary>
            Gets or sets the form field visibility
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedStyledField.Visible">
            <summary>
            Gets a value indicating the visibility of the field.[Read-Only]
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfImportedButtonField.AddPrintAction">
            <summary>
            Adds Print action to current button field.</summary>
            <remarks>Clicking on the specified button will trigger the Print Dialog Box.</remarks>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedButtonField.Items">
            <summary>
            Gets the collection of button items.[Read-Only]
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument" /> Class    
            <seealso cref="T:ComponentPro.Pdf.PdfImportedButtonField" /> Class 
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedButtonField.Text">
            <summary>
            Gets or sets the caption text.
            </summary>
            <value>A string value specifying the caption of the button.</value>
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument" /> Class    
            <seealso cref="T:ComponentPro.Pdf.PdfImportedForm" /> Class
        </member>
        <member name="T:ComponentPro.Pdf.Forms.PdfImportedButtonItem">
            <summary>
            Represents button group item of an existing PDF document.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument"/> Class    
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfImportedButtonField"/> Class 
        </member>
        <member name="T:ComponentPro.Pdf.Forms.PdfImportedFieldItem">
            <summary>
            Represents base class for field's group items.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedFieldItem.Bounds">
            <summary>
            Gets or sets the bounds.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedFieldItem.Field">
            <summary>
            Get the current Loaded style Field.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedFieldItem.Location">
            <summary>
            Gets or sets the location of the field.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedFieldItem.Page">
            <summary>
            Gets the page of the field.[Read-Only]
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedFieldItem.Size">
            <summary>
            Gets or sets the size of the field.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Forms.PdfImportedButtonItemCollection">
            <summary>
            Represents collection of button item.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument"/> Class    
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfImportedButtonField"/> Class 
            <seealso cref="T:ComponentPro.Pdf.PdfCollection"/> Class  
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedButtonItemCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ComponentPro.Pdf.Forms.PdfImportedButtonItem"/> at the specified index.[Read-Only]
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument"/> Class    
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfImportedButtonField"/> Class 
        </member>
        <member name="T:ComponentPro.Pdf.Forms.PdfImportedCheckBoxField">
            <summary>
            Represents check box of an existing PDF document. 
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfImportedStateField"/> Class 
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument"/> Class     
        </member>
        <member name="T:ComponentPro.Pdf.Forms.PdfImportedStateField">
            <summary>
            Represents the base class for loaded state field.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfImportedStyledField" /> Class
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfImportedStateField.SetCheckedStatus(System.Boolean)">
            <summary>
            Sets checked status of the field.
            </summary>
            <param name="value">Checked status.</param>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedStateField.Items">
            <summary>
            Gets the items collection.[Read-Only]
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfImportedStateItemCollection" /> Class
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedCheckBoxField.Checked">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:ComponentPro.Pdf.Forms.PdfImportedCheckBoxField"/> is checked.
            </summary>
            <value>True if the check box is checked, false otherwise. </value>
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfImportedCheckBoxField"/> Class 
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument"/> Class     
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedCheckBoxField.Items">
            <summary>
            Gets the collection of check box items.[Read-Only]
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfImportedStateField"/> Class 
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfImportedCheckBoxField"/> Class  
        </member>
        <member name="T:ComponentPro.Pdf.Forms.PdfImportedCheckBoxItem">
            <summary>
            Represents loaded check box item.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfImportedStateItem"/> Class    
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfImportedCheckBoxItemCollection"/> Class
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument"/> Class
        </member>
        <member name="T:ComponentPro.Pdf.Forms.PdfImportedStateItem">
            <summary>
            Represents the loaded state item.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfImportedFieldItem"/> Class
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedStateItem.Checked">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:ComponentPro.Pdf.Forms.PdfImportedStateItem"/> is checked.
            </summary>           
        </member>
        <member name="T:ComponentPro.Pdf.Forms.PdfImportedCheckBoxItemCollection">
            <summary>
            Represents collection of text box group items.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfImportedStateField"/> Class 
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfImportedCheckBoxField"/> Class  
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfImportedStateItemCollection"/> Class 
        </member>
        <member name="T:ComponentPro.Pdf.Forms.PdfImportedStateItemCollection">
            <summary>
            Represents the collection of loaded state item.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfCollection"/> Class
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedStateItemCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ComponentPro.Pdf.Forms.PdfImportedStateItem"/> at the specified index.[Read-Only]
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedCheckBoxItemCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ComponentPro.Pdf.Forms.PdfImportedCheckBoxItem"/> at the specified index.[Read-Only]
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Forms.PdfImportedChoiceField">
            <summary>
            Represents a choice field of an existing PDF document.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfImportedStyledField" /> Class 
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument" /> Class 
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfImportedChoiceField.AssignSelectedIndex(System.Int32[])">
            <summary>
            Sets selected index.
            </summary>
            <param name="value">Selected index.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfImportedChoiceField.AssignSelectedValue(System.String[])">
            <summary>
            Sets selected value.
            </summary>
            <param name="value">Selected value.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfImportedChoiceField.ObtainSelectedIndex">
            <summary>
            Gets selected index.
            </summary>
            <returns>Selected index.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfImportedChoiceField.ObtainSelectedValue">
            <summary>
            Gets selected value.
            </summary>
            <returns>Selected value.</returns>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedChoiceField.SelectedIndex">
            <summary>
            Gets or sets the first selected item in the list.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfImportedStyledField" /> Class 
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument" /> Class 
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedChoiceField.SelectedItem">
            <summary>
            Gets the first selected item in the list.[Read-Only]
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument" /> Class   
            <seealso cref="T:ComponentPro.Pdf.PdfImportedChoiceField" /> Class   
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedChoiceField.SelectedValue">
            <summary>
            Gets or sets the value of the first selected item in the list.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument" /> Class   
            <seealso cref="T:ComponentPro.Pdf.PdfImportedChoiceField" /> Class   
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedChoiceField.Values">
            <summary>
            Gets the collection of choice items.[Read-Only]
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Forms.PdfImportedComboBoxField">
            <summary>
            Represents the combo box field of an existing item.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfImportedChoiceField" /> Class   
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedComboBoxField.Editable">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:ComponentPro.Pdf.Forms.PdfComboBoxField"/> is editable.
            </summary>
            <value>True if the drop down list is editable, false otherwise. Default is false.</value>
            <seealso cref="T:ComponentPro.Pdf.PdfImportedListItem"/> Class
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument"/> Class
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedComboBoxField.Items">
            <summary>
            Gets the collection of combo box items.[Read-Only]
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument" /> Class
            <seealso cref="T:ComponentPro.Pdf.PdfImportedComboBoxItem" /> Class
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedComboBoxField.SelectedIndex">
            <summary>
            Gets or sets the index which is to be selected.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedComboBoxField.SelectedValue">
            <summary>
            Gets or sets the value which is to be selected.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Forms.PdfImportedComboBoxItem">
            <summary>
            Represents group for combo box field.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfImportedFieldItem"/> Class   
        </member>
        <member name="T:ComponentPro.Pdf.Forms.PdfImportedComboBoxItemCollection">
            <summary>
            Represents collection of Combo box items.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfCollection"/> Class  
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfImportedComboBoxField"/> Class  
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument"/> Class  
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedComboBoxItemCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ComponentPro.Pdf.Forms.PdfImportedComboBoxItem"/> at the specified index.[Read-Only]
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfCollection"/> Class  
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfImportedComboBoxField"/> Class  
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument"/> Class  
        </member>
        <member name="T:ComponentPro.Pdf.PdfImportedDocument">
            <summary>
            Represents a PdfImportedDocument. You can use this class to load or modify an existing PDF document
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfDocumentBase" /> Class
            <seealso cref="T:ComponentPro.Pdf.PdfFileStructure" /> Class
        </member>
        <member name="T:ComponentPro.Pdf.PdfDocumentBase">
            <summary>
            Represent common properties of PdfDocument and PdfImportedDocument classes.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.PdfDocumentBase.Append(ComponentPro.Pdf.PdfImportedDocument)">
            <summary>
            Appends the loaded document given as parameter to the current document.
            </summary>
            <param name="ldDoc">The loaded document to be imported.</param>
            <remarks>The appended loaded document must remain open until the current document is saved.</remarks>
        </member>
        <member name="M:ComponentPro.Pdf.PdfDocumentBase.CheckFields(ComponentPro.Pdf.PdfImportedDocument,ComponentPro.Pdf.PdfPageBase,System.Collections.Generic.List{ComponentPro.Pdf.Forms.PdfField})">
            <summary>
            Checks form fields are connected with the page.
            </summary>
            <param name="ldDoc">The loaded document.</param>
            <param name="page">The page.</param>
            <param name="fields">An array where the fields connected to the page are stored.</param>
        </member>
        <member name="M:ComponentPro.Pdf.PdfDocumentBase.Close">
            <summary>
            Closes the document. Releases all common resources.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.PdfDocumentBase.Close(System.Boolean)">
            <summary> 
            Closes the document.
            </summary>
            <param name="completely">if set to <c>true</c> the document should close its stream as well.</param>
        </member>
        <member name="M:ComponentPro.Pdf.PdfDocumentBase.DisposeOnClose(System.IDisposable)">
            <summary>
            Adds an object to a collection of the objects that will be disposed during document closing.
            </summary>
            <param name="obj">The object that will be disposed during document closing.</param>
        </member>
        <member name="M:ComponentPro.Pdf.PdfDocumentBase.ImportPage(ComponentPro.Pdf.PdfImportedDocument,ComponentPro.Pdf.PdfPageBase)">
            <summary>
            Imports the specified page into the current document pages collection
            </summary>
            <param name="ldDoc">The loaded document to be imported.</param>
            <param name="page">The page to be inserted.</param>
            <returns>The page in the target document.</returns>
            <remarks>The loaded document must remain open until the current document is saved</remarks>
        </member>
        <member name="M:ComponentPro.Pdf.PdfDocumentBase.ImportPage(ComponentPro.Pdf.PdfImportedDocument,System.Int32)">
            <summary>
            Imports the loaded document's page index to the current document.
            </summary>
            <param name="ldDoc">The loaded document to be imported.</param>
            <param name="pageIndex">Index of the page.</param>
            <returns>The page in the target document.</returns>
            <remarks>The loaded document must remain open until the current document is saved</remarks>
        </member>
        <member name="M:ComponentPro.Pdf.PdfDocumentBase.ImportPageRange(ComponentPro.Pdf.PdfImportedDocument,System.Int32,System.Int32)">
            <summary>
            Imports a page range from a loaded document to the current document
            </summary>
            <param name="ldDoc">The loaded document to be imported.</param>
            <param name="startIndex">The start page index.</param>
            <param name="endIndex">The end page index.</param>
            <returns>The last created page in the target document.</returns>
            <remarks>The loaded document must remain open until the current document is saved</remarks>
        </member>
        <member name="M:ComponentPro.Pdf.PdfDocumentBase.Merge(System.String[])">
            <summary>
            Merges the PDF documents specified by the paths.
            </summary>
            <remarks>This method is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight</remarks>
            <param name="paths">The array of string paths.</param>
            <returns>A new PDF document containing all merged documents.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.PdfDocumentBase.Merge(ComponentPro.Pdf.PdfDocumentBase,System.Object[])">
            <summary>
            Merges the specified source documents and return destination document.
            </summary>
            <remarks>This method is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight</remarks>
            <param name="dest">The destination document, where the other documents are merged into.
            If it's null a new document object will be created.</param>
            <param name="sourceDocuments">The source documents.</param>
            <returns>The document containing merged documents.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.PdfDocumentBase.Merge(ComponentPro.Pdf.PdfDocumentBase,ComponentPro.Pdf.PdfImportedDocument)">
            <summary>
            Merges the specified dest.
            </summary>
            <param name="dest">The destination document.</param>
            <param name="src">The source document.</param>
            <returns>The merged document</returns>
        </member>
        <member name="M:ComponentPro.Pdf.PdfDocumentBase.Save(System.String)">
            <summary>
            Saves the document to the specified filename.
            </summary>
            <param name="filename">The name of the file where to save the document. It can be a full path or a relative path.</param>
        </member>
        <member name="M:ComponentPro.Pdf.PdfDocumentBase.Save(System.IO.Stream)">
            <summary>
            Saves the document to the specified output stream.
            </summary>
            <param name="stream">The stream object where PDF document will be saved.</param>
        </member>
        <member name="M:ComponentPro.Pdf.PdfDocumentBase.Save(System.IO.Stream,System.Web.HttpContext)">
            <summary>
            Saves the document into a HTTP response stream.
            </summary>
            <remarks>This method is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight</remarks>
            <param name="stream">The stream where to save the PDF document.</param>
            <param name="response">The HTTP response stream object.</param>
        </member>
        <member name="M:ComponentPro.Pdf.PdfDocumentBase.Save(System.String,System.Web.HttpResponse,ComponentPro.Pdf.HttpReadType)">
            <summary>
            Saves the document into a HTTP response stream.
            </summary>
            <param name="fileName">The name of the document.</param>
            <param name="response">The HTTP response stream object.</param>
            <param name="type">The type of the reading document.</param>
            <remarks>
            If a document containing digital signature needs to be saved then
            the destination stream must support seeking, otherwise an exception will be raised.
            Since the HTTP response stream does not support seeking please write the document to a memory stream first and then flush it to the destination stream to avoid raising an exception.
            This method is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight
            </remarks>
        </member>
        <member name="P:ComponentPro.Pdf.PdfDocumentBase.Bookmarks">
            <summary>
            Gets the bookmarks.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfDocumentBase.CompressionLevel">
            <summary>
            Gets or  sets the PDF document compression level. By default the compression level is None
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfDocumentBase.DocumentInformation">
            <summary>
            Gets or sets document's information and properties such as document's title, subject, keyword etc.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfDocumentBase.EnableMemoryOptimization">
            <summary>
            Gets or sets whether to optimize memory.
            </summary>
            <remarks>Optimization will be effective only with merge, append and import functions. 
            Only memory will be optimized, different in time occur based on the document size.
            </remarks>
        </member>
        <member name="P:ComponentPro.Pdf.PdfDocumentBase.FileStructure">
            <summary>
            Gets or sets the internal structure of the PDF document.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfDocumentBase.Security">
            <summary>
            Gets the security features of the document like encryption.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfDocumentBase.ViewerPreferences">
            <summary>
            Gets or sets a viewer preferences. This property is used for presenting the PDF document in a viewer.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.PdfImportedDocument.#ctor(System.String)">
            <param name="filename">A relative or absolute path for the file.</param>
            /// <remarks>This constructor is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight</remarks>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class
        </member>
        <member name="M:ComponentPro.Pdf.PdfImportedDocument.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:PdfImportedDocument" /> class with the specified byte array.
            </summary>
            <param name="file">The array of bytes containing the PDF document to load.</param>
        </member>
        <member name="M:ComponentPro.Pdf.PdfImportedDocument.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:PdfImportedDocument" /> class with the specified stream.
            </summary>
            <param name="file">The stream containing the PDF document to load.</param>
        </member>
        <member name="M:ComponentPro.Pdf.PdfImportedDocument.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:PdfImportedDocument" /> class with the specified input file path and repair document
            </summary>
            <param name="filename">A relative or absolute path for the file.</param>
            <param name="openAndRepair">True to repair the document to prevent document corruption</param>
            <remarks>This constructor loads the document and also repairs the wrong offsets. 
            The repairing engine is not capable of fixing all kinds of corruption and the process may delay the loading time depending on the type of issue. This constructor is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight. </remarks>        
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class
        </member>
        <member name="M:ComponentPro.Pdf.PdfImportedDocument.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:PdfImportedDocument" /> class with the specified input file path and password
            </summary>
            <param name="filename">A relative or absolute path for the file.</param>
            <param name="password">The password (user or owner) of the encrypted document to open.</param>
            <remarks>This constructor is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight</remarks>
        </member>
        <member name="M:ComponentPro.Pdf.PdfImportedDocument.#ctor(System.Byte[],System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:PdfImportedDocument" /> class with specified byte array and repair document.
            </summary>
            <param name="file">The array of bytes containing the PDF document to load.</param>
            <param name="openAndRepair">True to repair the document to prevent document corruption</param>
            <remarks>This constructor loads the document and also repairs the wrong offsets. The repairing engine is not capable of fixing all kinds of corruption and the process may delay the loading time depending on the type of issue. </remarks>
        </member>
        <member name="M:ComponentPro.Pdf.PdfImportedDocument.#ctor(System.Byte[],System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:PdfImportedDocument" /> class with the specified byte array and password.
            </summary>
            <param name="file">The array of bytes containing the PDF document to load.</param>
            <param name="password">The password (user or owner) of the encrypted document.</param>
        </member>
        <member name="M:ComponentPro.Pdf.PdfImportedDocument.#ctor(System.IO.Stream,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:PdfImportedDocument" /> class.
            </summary>
            <param name="file">The stream containing the PDF document to load</param>
            <param name="openAndRepair">True to repair the document to prevent document corruption.</param>
            <remarks>This constructor loads the document and also repairs the wrong offsets. The repairing engine is not capable of fixing all kinds of corruption and the process may delay the loading time depending on the type of issue. </remarks>
        </member>
        <member name="M:ComponentPro.Pdf.PdfImportedDocument.#ctor(System.IO.Stream,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:PdfImportedDocument" /> class.
            </summary>
            <param name="file">The stream containing the PDF document to load.</param>
            <param name="password">The password (user or owner) of the encrypted document.</param>
        </member>
        <member name="M:ComponentPro.Pdf.PdfImportedDocument.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:PdfImportedDocument" /> class with the specified password and repair document.
            </summary>
            <param name="filename">A relative or absolute path for the file.</param>
            <param name="password">The password (user or owner) of the encrypted document to open.</param>
            <param name="openAndRepair">True to repair the document to prevent document corruption</param>
            <remarks>This constructor loads the document and also repairs the wrong offsets. 
            The repairing engine is not capable of fixing all kinds of corruption and the process may delay the loading time depending on the type of issue. This constructor is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
        </member>
        <member name="M:ComponentPro.Pdf.PdfImportedDocument.#ctor(System.Byte[],System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:PdfImportedDocument" /> class.
            </summary>
            <param name="file">The array of bytes containing the PDF document to load.</param>
            <param name="password">The password (user or owner) of the encrypted document.</param>
            <param name="openAndRepair">True to repair the document to prevent document corruption</param>
            <remarks>This constructor loads the document and also repairs the wrong offsets. The repairing engine is not capable of fixing all kinds of corruption and the process may delay the loading time depending on the type of issue. </remarks>
        </member>
        <member name="M:ComponentPro.Pdf.PdfImportedDocument.Clone">
            <summary>
            Creates a shallow copy of the current document.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.PdfImportedDocument.Close(System.Boolean)">
            <summary>
            Releases all the resources allocated by this PDF document
            </summary>
            <param name="completely">if set to <c>true</c> the document should
            close its stream as well.</param>
        </member>
        <member name="M:ComponentPro.Pdf.PdfImportedDocument.CreateAttachment">
            <summary>
            Creates a PDF attachments to the loaded document
            </summary>
            <returns>The collection of attachments in the loaded document.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.PdfImportedDocument.CreateBookmarkRoot">
            <summary>
            Creates a bookmarks collection to the loaded document.
            </summary>
            <returns>The collection of bookmarks in the loaded document.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.PdfImportedDocument.CreateForm">
            <summary>
            Creates a new form to the loaded document
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.PdfImportedDocument.Dispose">
            <summary>
            Release all the resource used by the document instance
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.PdfImportedDocument.ExportAsImage(System.Int32)">
            <summary>
            Exports the specified page as Image
            </summary>
            <param name="pageIndex">The page index to be converted into image</param>
            <returns>Returns the specified page as Image</returns>
        </member>
        <member name="M:ComponentPro.Pdf.PdfImportedDocument.ExportAsImage(System.Int32,System.Int32)">
            <summary>
            Exports the specified pages as Images
            </summary>
            <param name="startIndex">The starting page index</param>
            <param name="endIndex">The ending page index</param>
            <returns>Returns the specified pages as Images</returns>
        </member>
        <member name="M:ComponentPro.Pdf.PdfImportedDocument.ExportAsImage(System.Int32,System.Single,System.Single)">
            <summary>
            Exports the specified page as Image with respect to dpi specified.
            </summary>
            <param name="pageIndex">The page index to be converted into image</param>
            <param name="dpiX">The horizontal DPI of the resultant image.</param>
            <param name="dpiY">The vertical DPI of the resultant image.</param>
            <returns>Returns the specified page as Image  with custom resolution</returns>
        </member>
        <member name="M:ComponentPro.Pdf.PdfImportedDocument.ExportAsImage(System.Int32,System.Drawing.SizeF,System.Boolean)">
            <summary>
            Exports the specified page as Image
            </summary>
            <param name="pageIndex">The page index to be converted into image</param>
            <param name="customSize">The custom size of the converted image</param>
            <param name="keepAspectRatio">Whether need to maintain the pdf page size</param>
            Returns the specified page as image with custom size
        </member>
        <member name="M:ComponentPro.Pdf.PdfImportedDocument.ExportAsImage(System.Int32,System.Int32,System.Single,System.Single)">
            <summary>
            Exports the specified pages as Images with respect to dpi specified.
            </summary>
            <param name="startIndex">The starting page index</param>
            <param name="endindex">The ending page index</param>
            <param name="dpiX">The horizontal DPI of the resultant image.</param>
            <param name="dpiY">The vertical DPI of the resultant image.</param>
            <returns>Returns the specified pages as Images with custom resolution</returns>
        </member>
        <member name="M:ComponentPro.Pdf.PdfImportedDocument.ExportAsImage(System.Int32,System.Int32,System.Drawing.SizeF,System.Boolean)">
            <summary>
            Exports the specified pages as Images
            </summary>
            <param name="startIndex">The starting page index</param>
            <param name="endIndex">The ending page index</param>
            <param name="customSize">The custom size of the converted image</param>
            <param name="keepAspectRatio">Whether need to maintain the pdf page size</param>
            <returns>Returns the specified pages as images with custom size</returns>
        </member>
        <member name="M:ComponentPro.Pdf.PdfImportedDocument.ExportAsImage(System.Int32,System.Drawing.SizeF,System.Single,System.Single,System.Boolean)">
            <summary>
            Exports the specified page as Image
            </summary>
            <param name="pageIndex">The page index to be converted into image</param>
            <param name="customSize">The custom size of the converted image</param>
            <param name="dpiX">The horizontal DPI of the resultant image.</param>
            <param name="dpiY">The vertical DPI of the resultant image.</param>
            <param name="keepAspectRatio">Whether need to maintain the pdf page size</param>
            Returns the specified page as image with custom size and resolution
        </member>
        <member name="M:ComponentPro.Pdf.PdfImportedDocument.ExportAsImage(System.Int32,System.Int32,System.Drawing.SizeF,System.Single,System.Single,System.Boolean)">
            <summary>
            Exports the specified pages as Images
            </summary>
            <param name="startIndex">The starting page index</param>
            <param name="endIndex">The ending page index</param>
            <param name="customSize">The custom size of the converted image</param>
            <param name="dpiX">The horizontal DPI of the resultant image.</param>
            <param name="dpiY">The vertical DPI of the resultant image.</param>
            <param name="keepAspectRatio">Whether need to maintain the pdf page size</param>
            <returns>Returns the specified pages as images with custom size and resolution</returns>
        </member>
        <member name="M:ComponentPro.Pdf.PdfImportedDocument.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:ComponentPro.Pdf.PdfImportedDocument" /> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.PdfImportedDocument.FindText(System.String,System.Collections.Generic.Dictionary{System.Int32,System.Collections.Generic.List{System.Drawing.RectangleF}}@)">
            <summary>
            Returns the page number and rectangle positions of the text matchs
            </summary>
            <param name="text">The text to be searched</param>
            <param name="matchRect">Holds the page number and rectangle positions of the text matches</param>       
        </member>
        <member name="M:ComponentPro.Pdf.PdfImportedDocument.FindText(System.Collections.Generic.List{System.String},ComponentPro.Pdf.TextSearchResultCollection@)">
            <summary>
            Returns the TextSearchResultCollection instance which contains collection of MatchedItemCollection
            </summary>
            <param name="searchItems">List of items to be searched.</param>
            <param name="searchResult">Instance of TextSearchResultCollection</param>
            <returns>Returns true if found any match</returns>
        </member>
        <member name="M:ComponentPro.Pdf.PdfImportedDocument.FindText(System.Collections.Generic.List{ComponentPro.Pdf.TextSearchItem},ComponentPro.Pdf.TextSearchResultCollection@)">
            <summary>
            Returns the dictionary of page number and list of text search items in the PDF document.
            </summary>
            <param name="searchItems">List of items to be searched.</param>
            <param name="searchResults">The dictionary of page number and list of search results.</param>
            <returns>Returns true if found any match</returns>
        </member>
        <member name="M:ComponentPro.Pdf.PdfImportedDocument.FindText(System.Collections.Generic.List{System.String},ComponentPro.Pdf.TextSearchOptions,ComponentPro.Pdf.TextSearchResultCollection@)">
            <summary>
            Returns the dictionary of page number and list of captured terms in the PDF document.
            </summary>
            <param name="searchItems">List of items to be searched.</param>
            <param name="searchResults">The dictionary of page number and list of search results.</param>
            <param name="textSearchOption">Search option to find the texts</param>
            <returns>Returns true if found any match</returns>
        </member>
        <member name="M:ComponentPro.Pdf.PdfImportedDocument.Save">
            <summary>
            Saves the document into the same stream or file.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument" /> Class
        </member>
        <member name="M:ComponentPro.Pdf.PdfImportedDocument.Save(System.IO.Stream)">
            <summary>
            Saves the PDF document to the specified stream.
            </summary>
            <param name="stream">The stream where to save the PDF document.</param>
        </member>
        <member name="M:ComponentPro.Pdf.PdfImportedDocument.Split(System.String)">
            <summary>
            Splits a PDF document into individual pages.
            </summary>
            <param name="destFilePattern">The name of the individual destination pages.</param>
            <remarks>
            This method splits a PDF document to individual pages. Each page is named using destFilePattern parameter after which a numeric index is appended.
            This method is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.
            </remarks>
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument" /> Class
        </member>
        <member name="M:ComponentPro.Pdf.PdfImportedDocument.Split(System.String,System.Int32)">
            <summary>
            Splits a PDF document into individual pages
            </summary>
            <param name="destFilePattern">The name of the individual destination pages</param>
            <param name="startNumber">The number that is use as a start
            point for the page numbering.</param>
            <remarks>This method splits a PDF document to individual pages. Each page is named using destFilePattern parameter after which a numeric index is appended.
            </remarks>
            <remarks>This method is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight</remarks>
        </member>
        <member name="P:ComponentPro.Pdf.PdfImportedDocument.Attachments">
            <summary>
            Gets the list of attachments embedded in the document.  
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfAttachment"/> Class
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument"/> Class
        </member>
        <member name="P:ComponentPro.Pdf.PdfImportedDocument.Bookmarks">
            <summary>
            Gets the list of bookmarks in the PDF document. 
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument"/> Class  
            <seealso cref="T:ComponentPro.Pdf.PdfBookmark"/> Class  
        </member>
        <member name="P:ComponentPro.Pdf.PdfImportedDocument.ColorSpace">
            <summary>
            Gets or sets the color space of the document. This property can be used to create PDF document in RGB, Grayscale or CMYK color spaces. By default the document uses RGB color space. 
            </summary>
            <remarks>This property has impact on the new created pages only.</remarks>
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument" /> Class
        </member>
        <member name="P:ComponentPro.Pdf.PdfImportedDocument.CompressionOptions">
            <summary>
            Gets or sets the compression options.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfImportedDocument.Conformance">
            <summary>
            Gets the conformance level applied in the loaded document.
            </summary>
            <remarks>Returns only levels supported by PdfDocumentConformanceLevel enum, otherwise None. This method is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
            <seealso cref="T:ComponentPro.Pdf.PdfDocumentConformanceLevel" /> Class
        </member>
        <member name="P:ComponentPro.Pdf.PdfImportedDocument.DocumentInformation">
            <summary>
            Gets the document's information such as documents title, keywords, subject etc.,
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfImportedDocument.Form">
            <summary>
            Gets the PDF form fields included in the document.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfForm"/> Class    
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument"/> Class
        </member>
        <member name="P:ComponentPro.Pdf.PdfImportedDocument.IsLinearized">
            <summary>
            Gets whether the document is linearized or not
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfImportedDocument.IsPortfolio">
            <summary>
            Gets whether the document has portfolio content or not
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfImportedDocument.LoadedPageLabel">
            <summary>
            Gests or sets the PdfPageLabel for the loaded PDF document page number.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument" /> Class
            <seealso cref="T:ComponentPro.Pdf.PdfPageLabel" /> Class
        </member>
        <member name="P:ComponentPro.Pdf.PdfImportedDocument.NamedDestinationCollection">
            <summary>
            Gets the list of named destinations in the PDF document. 
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument"/> Class  
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfNamedDestination"/> Class  
        </member>
        <member name="P:ComponentPro.Pdf.PdfImportedDocument.Pages">
            <summary>
            Gets the document's collection of pages.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfImportedPage" /> Class   
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument" /> Class
        </member>
        <member name="P:ComponentPro.Pdf.PdfImportedDocument.PortfolioInformation">
            <summary>
            Gets the portfolio information associated with this document
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfPortfolioInformation" /> Class
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument" /> Class
        </member>
        <member name="P:ComponentPro.Pdf.PdfImportedDocument.UsedFonts">
            <summary>
            Gets the fonts which are available in the PDF document.
            </summary>
            <value>Retruns the fonts which are used in the PDF document.</value>
            <remarks>This method is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight</remarks>
        </member>
        <member name="T:ComponentPro.Pdf.Forms.PdfImporteddStateItemCollection">
            <summary>
            Represents a collection of state items.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfCollection"/> Class   
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImporteddStateItemCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ComponentPro.Pdf.Forms.PdfImportedStateItem"/> at the specified index.[Read-Only]
            </summary>  
            <value>The index of specified <see cref="T:ComponentPro.Pdf.Forms.PdfImportedStateItem"/> item.</value>
        </member>
        <member name="T:ComponentPro.Pdf.Forms.PdfImportedFieldImportError">
            <summary>
            Represents errors on importing loaded field.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedFieldImportError.Exception">
            <summary>
            Gets the exception.
            </summary>
            <value>The exception.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedFieldImportError.Field">
            <summary>
            Gets the field.
            </summary>
            <value>The field.</value>
        </member>
        <member name="T:ComponentPro.Pdf.Forms.PdfImportedForm">
            <summary>
            Represents Loaded form of the PDF document.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfForm"/> Class
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument"/> Class  
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfImportedForm.ExportData(System.String,ComponentPro.Pdf.DataFormat,System.String)">
            <summary>
            Export the form data to a file with the specific <see cref="T:ComponentPro.Pdf.DataFormat"/> and form name.
            </summary>
            <param name="fileName">Name of the document which is need to export.</param>
            <param name="dataFormat">The format of exported data.</param>
            <param name="formName"> The name of the PDF file the data is exported from.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfImportedForm.ExportData(System.IO.Stream,ComponentPro.Pdf.DataFormat,System.String)">
            <summary>
            Export the form data to a stream with the specific <see cref="T:ComponentPro.Pdf.DataFormat"/> and form name.
            </summary>
            <param name="fileName">The stream where form data will be exported.</param>
            <param name="dataFormat">The format of exported data</param>
            <param name="formName"> The name of the PDF file the data is exported from</param>
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfImportedForm.HighlightFields(System.Boolean)">
            <summary>
            Sets or resets the form field highlight option.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfImportedForm.ImportData(System.String,ComponentPro.Pdf.DataFormat)">
            <summary>
            Imports the form data from the file with the specific <see cref="T:ComponentPro.Pdf.DataFormat"/>.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="dataFormat">The data format.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfImportedForm.ImportData(System.String,ComponentPro.Pdf.DataFormat,System.Boolean)">
            <summary>
            Imports the form data from the file with the specific <see cref="T:ComponentPro.Pdf.DataFormat"/>.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="dataFormat">The data format.</param>
            <param name="errorFlag">if it is error flag, set to <c>true</c>.</param>
            <returns>Error messages wile importing.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfImportedForm.ImportDataFDF(System.IO.Stream,System.Boolean)">
            <summary>
            Import form data from FDF file.
            </summary>
            <param name="stream">The FDF file stream</param>
            <param name="continueImportOnError">False if the import should stop on the first field that generates an error, or true if the import should ignore the error and continue with the next field.</param>
            <returns>Error messages wile importing.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfImportedForm.ImportDataXFDF(System.String)">
            <summary>
            Imports XFDF Data from the specific file.
            </summary>
            <param name="fileName"></param>
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfImportedForm.ImportDataXFDF(System.IO.Stream)">
            <summary>
            Imports XFDF Data form the specific stream.
            </summary>
            <param name="Stream"></param>
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfImportedForm.OnlyHexInString(System.String)">
            <summary>
            Called when [hex in string].
            </summary>
            <param name="test">The test.</param>
            <returns></returns>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedForm.Fields">
            <summary>
            Gets the field collection.[Read-Only]
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument"/> Class
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfImportedForm"/> Class
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedForm.ReadOnly">
            <summary>
            Gets or sets a value indicating whether the form is read only.
            </summary>
            <value>True if the field is read-only, false otherwise. Default is false.</value>
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument"/> Class
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfImportedForm"/> Class
        </member>
        <member name="T:ComponentPro.Pdf.Forms.PdfImportedFormFieldCollection">
            <summary>
            Represents field collection of loaded form.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfFieldCollection"/> Class
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfImportedFormFieldCollection.#ctor(ComponentPro.Pdf.Forms.PdfImportedForm)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Forms.PdfImportedFormFieldCollection"/> class with the specific <see cref="T:ComponentPro.Pdf.Forms.PdfImportedForm"/>.
            </summary>
            <param name="form">The form.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfImportedFormFieldCollection.DoAdd(ComponentPro.Pdf.Forms.PdfField)">
            <summary>
            Adds a field to collection.
            </summary>
            <param name="field">The field.</param>
            <returns></returns>
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfImportedFormFieldCollection.DoClear">
            <summary>
            Clears the collection.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfImportedFormFieldCollection.DoInsert(System.Int32,ComponentPro.Pdf.Forms.PdfField)">
            <summary>
            Inserts a filed into collection.
            </summary>
            <param name="index">The index.</param>
            <param name="field">The field.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfImportedFormFieldCollection.DoRemove(ComponentPro.Pdf.Forms.PdfField)">
            <summary>
            Removes the field from collection.
            </summary>
            <param name="field">The field.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfImportedFormFieldCollection.DoRemoveAt(System.Int32)">
            <summary>
            Removes the field at the specified position.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfImportedFormFieldCollection.TryGetField(System.String,ComponentPro.Pdf.Forms.PdfImportedField@)">
            <summary>
            Gets the form field with the given field name
            </summary>
            <param name="fieldName">Name of the field</param>
            <param name="field">Loaded Form Field</param>
            <returns>True, if form field exists, else False.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfImportedFormFieldCollection.TryGetValue(System.String,System.String@)">
            <summary>
            Gets the filed value from the given field name
            </summary>
            <param name="fieldName">Name of the loaded form filed</param>
            <param name="fieldValue">Value of the field</param>
            <returns>True, if form field exists with the specific name, else False.</returns>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedFormFieldCollection.Form">
            <summary>
            Gets or sets the form.
            </summary>      
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedFormFieldCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ComponentPro.Pdf.Forms.PdfField"/> at the specified index.[Read-Only]
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument"/> Class
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedFormFieldCollection.Item(System.String)">
            <summary>
            Returns field with specified name.[Read-Only]
            </summary>
            <param name="name">The specified field name.</param>
        </member>
        <member name="T:ComponentPro.Pdf.Forms.PdfImportedListBoxField">
            <summary>
            Represents loaded list box field.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfImportedChoiceField" /> Class  
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedListBoxField.Items">
            <summary>
            Gets the collection of list field.[Read-Only]
            </summary>
            <value>The collection of list box items.</value>
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument" /> Class  
            <seealso cref="T:ComponentPro.Pdf.PdfImportedListBoxField" /> Class 
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedListBoxField.MultiSelect">
            <summary>
            Gets or sets a value indicating whether the field is multi-selectable.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument" /> Class  
            <seealso cref="T:ComponentPro.Pdf.PdfImportedListBoxField" /> Class  
        </member>
        <member name="T:ComponentPro.Pdf.Forms.PdfImportedListFieldItem">
            <summary>
            Represents group item for list field.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfImportedFieldItem"/> Class
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfImportedFieldItem"/> Class  
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument"/> Class  
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfImportedListBoxField"/> Class  
        </member>
        <member name="T:ComponentPro.Pdf.Forms.PdfImportedListFieldItemCollection">
            <summary>
            Represents loaded list field item collection.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfCollection"/> Class
            <seealso cref="T:ComponentPro.Pdf.PdfCollection"/> Class  
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedListFieldItemCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ComponentPro.Pdf.Forms.PdfImportedListFieldItem"/> at the specified index.[Read-Only]
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument"/> Class  
        </member>
        <member name="T:ComponentPro.Pdf.Forms.PdfImportedListItem">
            <summary>
            Represents loaded list item.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument"/> Class
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfImportedListBoxField"/> Class
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfImportedListItem.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Forms.PdfImportedListItem"/> class with the specific text and value.
            </summary>
            <param name="text">The text.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedListItem.Value">
            <summary>
            Gets or sets the value of the list item.
            </summary>
            <value>A string value representing the value of the item. </value>
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument"/> Class
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfImportedListBoxField"/> Class
        </member>
        <member name="T:ComponentPro.Pdf.Forms.PdfImportedListItemCollection">
            <summary>
            Represents a collection of list box field items.
            </summary>   
            <seealso cref="T:ComponentPro.Pdf.PdfCollection"/> Class
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfImportedListBoxField"/> Class
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument"/> Class
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfImportedListItemCollection.Add(ComponentPro.Pdf.Forms.PdfImportedListItem)">
            <summary>
            Inserts an list item at the end of the collection. 
            </summary>
            <param name="item">a <see cref="T:ComponentPro.Pdf.Forms.PdfImportedListItem"/>object to be added to collection.</param>
            <returns>The index of item.</returns>        
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfImportedListBoxField"/> Class
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument"/> Class
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfImportedListItemCollection.Clear">
            <summary>
            Clears the item collection.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfImportedListBoxField"/> Class
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument"/> Class
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfImportedListItemCollection.Insert(System.Int32,ComponentPro.Pdf.Forms.PdfImportedListItem)">
            <summary>
            Inserts the list item at the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="item">The item.</param>
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfImportedListBoxField"/> Class
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument"/> Class
        </member>
        <member name="M:ComponentPro.Pdf.Forms.PdfImportedListItemCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the list item at the specified index.
            </summary>
            <param name="index">The index.</param>
            <remarks>Throws IndexOutOfRange exception if the index is out of bounds.</remarks>
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfImportedListBoxField"/> Class
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument"/> Class
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedListItemCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ComponentPro.Pdf.Forms.PdfImportedListItem"/> at the specified index.[Read-Only]
            </summary>        
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfImportedListBoxField"/> Class
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument"/> Class
        </member>
        <member name="T:ComponentPro.Pdf.PdfImportedPageCollection">
            <summary>
            The class provides methods and properties to handle the collections of loaded PDF pages
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.PdfImportedPageCollection.Add">
            <summary>
            Creates a new page and adds it to the collection.
            </summary>
            <returns>The created page.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.PdfImportedPageCollection.Add(System.Drawing.SizeF)">
            <summary>
            Creates a new page of the specified size and adds it to the collection.
            </summary>
            <param name="size">The size of the new page.</param>
            <returns>The created page.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.PdfImportedPageCollection.Add(System.Drawing.SizeF,ComponentPro.Pdf.Graphics.PdfMargins)">
            <summary>
            Creates a new page of the specified size and with the specified margins
            and adds it to the collection.
            </summary>
            <param name="size">The size of the new page.</param>
            <param name="margins">The margins of the new page.</param>
            <returns>The created page.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.PdfImportedPageCollection.Add(System.Drawing.SizeF,ComponentPro.Pdf.Graphics.PdfMargins,ComponentPro.Pdf.PdfPageRotateAngle)">
            <summary>
            Creates a new page of the specified size and with the specified margins
            and adds it to the collection.
            </summary>
            <param name="size">The size of the new page.</param>
            <param name="margins">The margins of the new page.</param>
            <param name="rotation">The rotation of the new page.</param>
            <returns>The created page.</returns>		
        </member>
        <member name="M:ComponentPro.Pdf.PdfImportedPageCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"></see>
            object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:ComponentPro.Pdf.PdfImportedPageCollection.Insert(System.Int32)">
            <summary>
            Creates a new page and inserts it at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>The created page.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.PdfImportedPageCollection.Insert(System.Int32,System.Drawing.SizeF)">
            <summary>
            Creates a new page and inserts it at the specified index with specified size.
            </summary>
            <param name="index">The index.</param>
            <param name="size">The size of the page.</param>
            <returns>The created page.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.PdfImportedPageCollection.Insert(System.Int32,ComponentPro.Pdf.PdfPageBase)">
            <summary>
            Inserts loaded page into loaded document at specified index
            </summary>
            <param name="index">The index at which page to be inserted.</param>
            <param name="loadedPage">The page to be inserted.</param>
        </member>
        <member name="M:ComponentPro.Pdf.PdfImportedPageCollection.Insert(System.Int32,System.Drawing.SizeF,ComponentPro.Pdf.Graphics.PdfMargins)">
            <summary>
            Creates a new page and inserts it at the specified index with specified size and margins.
            </summary>
            <param name="index">The index.</param>
            <param name="size">The size of the page.</param>
            <param name="margins">The margins of the page.</param>
            <returns>The created page.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.PdfImportedPageCollection.Insert(System.Int32,System.Drawing.SizeF,ComponentPro.Pdf.Graphics.PdfMargins,ComponentPro.Pdf.PdfPageRotateAngle)">
            <summary>
            Creates a new page and inserts it at the specified index with specified size, margins and rotation angle
            </summary>
            <param name="index">The index.</param>
            <param name="size">The size of the page.</param>
            <param name="margins">The margins of the page.</param>
            <param name="rotation">The rotation of the new page.</param>
            <returns>The created page.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.PdfImportedPageCollection.Insert(System.Int32,System.Drawing.SizeF,ComponentPro.Pdf.Graphics.PdfMargins,ComponentPro.Pdf.PdfPageRotateAngle,ComponentPro.Pdf.PdfPageOrientation)">
            <summary>
            Creates a new page and inserts it at the specified index with specified size,margins,rotation angle and orientation
            </summary>
            <param name="index">The index.</param>
            <param name="size">The size of the page.</param>
            <param name="margins">The margins of the page.</param>
            <param name="rotation">The rotation of the new page.</param>
            <param name="orientation">The orientation of the new page.</param>
            <returns>The created page.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.PdfImportedPageCollection.ReArrange(System.Int32[])">
            <summary>
            Re arrange the Pages in the Loaded Document.
            </summary>
            <param name="orderArray">The page sequence to arrange the pages.</param>
        </member>
        <member name="M:ComponentPro.Pdf.PdfImportedPageCollection.Remove(ComponentPro.Pdf.PdfPageBase)">
            <summary>
            Removes the specified page.
            </summary>
            <param name="page">The page to be remove.</param>
        </member>
        <member name="M:ComponentPro.Pdf.PdfImportedPageCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the page at the given specified index.
            </summary>
            <param name="index"> Index of the page.</param>
        </member>
        <member name="P:ComponentPro.Pdf.PdfImportedPageCollection.Count">
            <summary>
            Gets the number of pages presnt in the document
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfImportedPageCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:PdfPageBase" /> at the specified index.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfImportedPageCollection.SectionCount">
            <summary>
            Gets the number of sections present in the document
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.PdfImportedPageEnumerator">
            <summary>
            Implements enumerator to the loaded page collection.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.PdfImportedPageEnumerator.#ctor(ComponentPro.Pdf.PdfImportedPageCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:PdfImportedPageEnumerator" /> class.
            </summary>
            <param name="collection">The <see cref="T:ComponentPro.Pdf.PdfImportedPageCollection" />.</param>
        </member>
        <member name="M:ComponentPro.Pdf.PdfImportedPageEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
            true if the enumerator was successfully advanced to the next element;
            false if the enumerator has passed the end of the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created. </exception>
        </member>
        <member name="M:ComponentPro.Pdf.PdfImportedPageEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position,
            which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created. </exception>
        </member>
        <member name="P:ComponentPro.Pdf.PdfImportedPageEnumerator.Current">
            <summary>
            Gets the current element in the collection.
            </summary>
            <value></value>
            <returns>The current element in the collection.</returns>
            <exception cref="T:System.InvalidOperationException">
            The enumerator is positioned before the first element of the collection
            or after the last element. </exception>
        </member>
        <member name="T:ComponentPro.Pdf.Forms.PdfImportedRadioButtonItem">
            <summary>
            Represents radio button field of an existing PDF document.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfImportedStateItem"/> Class
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument"/> Class
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfImportedRadioButtonListField"/> Class
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedRadioButtonItem.Selected">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:ComponentPro.Pdf.Forms.PdfImportedRadioButtonItem"/> is selected.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument"/> Class
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfImportedRadioButtonListField"/> Class
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedRadioButtonItem.Value">
            <summary>
            Gets or sets the value of the radio button.
            </summary>
            <value>The value of the radio button item.</value>
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument"/> Class
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfImportedRadioButtonListField"/> Class
        </member>
        <member name="T:ComponentPro.Pdf.Forms.PdfImportedRadioButtonItemCollection">
            <summary>
            Represents collection of radio box group items.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfImportedStateItemCollection"/> Class    
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfImportedRadioButtonItem"/> Class
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument"/> Class
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedRadioButtonItemCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ComponentPro.Pdf.Forms.PdfImportedRadioButtonItem"/> at the specified index.[Read-Only]
            </summary>
            <returns>Returns <see cref="T:ComponentPro.Pdf.Forms.PdfImportedRadioButtonItem"/> object at the specified index.</returns>
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfImportedStateItemCollection"/> Class    
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfImportedRadioButtonItem"/> Class
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument"/> Class
        </member>
        <member name="T:ComponentPro.Pdf.Forms.PdfImportedRadioButtonListField">
            <summary>
            Represents radio button field of an existing PDF document.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfImportedStateField"/> Class
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument"/> Class
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedRadioButtonListField.Items">
            <summary>
            Gets the collection of radio button items.[Read-Only]
            </summary>
            <value>A <see cref="T:ComponentPro.Pdf.Forms.PdfImportedRadioButtonItemCollection"/> that represents the items within the list.</value>
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument"/> Class
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfImportedRadioButtonListField"/> Class
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfImportedRadioButtonItem"/> Class
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedRadioButtonListField.SelectedIndex">
            <summary>
            Gets or sets the index of the selected item in the list.
            </summary>
            <value>The lowest ordinal index of the selected items in the list. The default is -1, which indicates that nothing is selected. </value>
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument"/> Class
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfImportedRadioButtonListField"/> Class
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedRadioButtonListField.SelectedItem">
            <summary>
            Gets the selected item.[Read-Only]
            </summary>
            <value>Return the item as PdfImportedRadioButtonItem class</value>
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument"/> Class
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfImportedRadioButtonListField"/> Class
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedRadioButtonListField.SelectedValue">
            <summary>
            Gets or sets the value of the first selected item in the list. 
            </summary>
            <value>A string value specifying the value of the first selected item, null (Nothing in VB.NET) if there is no selected item.</value>
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument"/> Class
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfImportedRadioButtonListField"/> Class
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedRadioButtonListField.Value">
            <summary>
            Gets or sets the value of specified item.
            </summary>
            <value>A string value representing the value of the item.</value>
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument"/> Class
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfImportedRadioButtonListField"/> Class
        </member>
        <member name="T:ComponentPro.Pdf.Forms.PdfImportedSignatureField">
            <summary>
            Represents the signature field of an existing PDF document.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfImportedStyledField" /> Class
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument" /> Class
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedSignatureField.Signature">
            <summary>
            Gets or sets the digital signature for signing the field. 
            </summary>
            <value>A <see cref="T:ComponentPro.Pdf.Security.PdfDigitalSignature" /> object specifying the digital signature for signing the field.</value>
            <seealso cref="T:ComponentPro.Pdf.Security.PdfDigitalSignature" /> Class
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument" /> Class
            <seealso cref="T:ComponentPro.Pdf.Security.PdfCertificate" /> Class
        </member>
        <member name="T:ComponentPro.Pdf.Forms.PdfImportedTexBoxItem">
            <summary>
            Represents an item in a text box field collection.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfImportedTextBoxField" /> Class
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument" /> Class
            <seealso cref="T:ComponentPro.Pdf.PdfImportedFieldItem" /> Class
        </member>
        <member name="T:ComponentPro.Pdf.Forms.PdfImportedTextBoxField">
            <summary>
            Represents the text box field of an existing PDF document.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument" /> Class    
            <seealso cref="T:ComponentPro.Pdf.PdfImportedStyledField" /> Class
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedTextBoxField.BackColor">
            <summary>
            Get or Set the back color of the field
            </summary>
            <value>A <see cref="T:ComponentPro.Pdf.Graphics.PdfColor" /> object specifying the background color of field. </value>
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument" /> Class    
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfColor" /> Class    
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedTextBoxField.ForeColor">
            <summary>
            Gets or Set the fore color of the field.
            </summary>
            <value>A <see cref="T:ComponentPro.Pdf.Graphics.PdfColor" /> object specifying the background color of field.</value>
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument" /> Class    
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfColor" /> Class    
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedTextBoxField.HighlightMode">
            <summary>
            Get or Set the HighLightMode of the Field.
            </summary>
            <value>A <see cref="T:ComponentPro.Pdf.Forms.PdfHighlightMode"/> enumeration member specifying the highlight mode in a text box.</value>
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument"/> Class    
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfHighlightMode"/> Class    
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedTextBoxField.InsertSpaces">
            <summary>
            Meaningful only if the MaxLength property is set and the Multiline, Password properties are false.
            If set, the field is automatically divided into as many equally spaced positions, or combs, 
            as the value of MaxLength, and the text is laid out into those combs.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument" /> Class 
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedTextBoxField.Items">
            <summary>
            Gets the collection of text box field items.[Read-Only]
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument" /> Class 
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedTextBoxField.MaxLength">
            <summary>
            Gets or sets the maximum length of the field, in characters.
            </summary>
            <value>A positive integer value specifying the maximum number of characters that can be entered in the text edit field.</value>
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument" /> Class 
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedTextBoxField.Multiline">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:ComponentPro.Pdf.Forms.PdfTextBoxField"/> is multiline.
            </summary>       
            <value>True if the field is multiline, false otherwise. Default is false.</value>
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument"/> Class 
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedTextBoxField.Password">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:ComponentPro.Pdf.Forms.PdfTextBoxField"/> is password field.
            </summary>
            <value>True if the field is a password field, false otherwise. Default is false.</value>
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument"/> Class 
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedTextBoxField.Scrollable">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:ComponentPro.Pdf.Forms.PdfTextBoxField"/> is scrollable.
            </summary>
            <value>True if the field content can be scrolled, false otherwise. Default is true.</value>
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument"/> Class 
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedTextBoxField.SpellCheck">
            <summary>
            Gets or sets a value indicating whether to check spelling.
            </summary>
            <value>True if the field content should be checked for spelling erorrs, false otherwise. Default is true.</value>
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument" /> Class 
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedTextBoxField.Text">
            <summary>
            Gets or Set value of the text box field.
            </summary>
            <value>A string value representing the value of the item. </value>
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument" /> Class            
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedTextBoxField.TextAlignment">
            <summary>
            Get or Set the text alignment in a text box.
            </summary>
            <value>A <see cref="T:ComponentPro.Pdf.Graphics.PdfTextAlignment" /> enumeration member specifying the text alignment in a text box.</value>
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument" /> Class    
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfTextAlignment" /> Class    
        </member>
        <member name="T:ComponentPro.Pdf.Forms.PdfImportedTextBoxItemCollection">
            <summary>
            Represents collection of text box group items.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfCollection"/> Class
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfImportedTextBoxField"/> Class
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument"/> Class
        </member>
        <member name="P:ComponentPro.Pdf.Forms.PdfImportedTextBoxItemCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ComponentPro.Pdf.Forms.PdfImportedTexBoxItem"/> at the specified index.[Read-Only]
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument"/> Class
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfImportedTextBoxField"/> Class
            <seealso cref="T:ComponentPro.Pdf.Forms.PdfImportedTextBoxItemCollection"/> Class
        </member>
        <member name="T:ComponentPro.Pdf.XFdfDocument">
            <summary>
            Represents base class of XFDF.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.XFdfDocument.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.XFdfDocument"/> class.
            </summary>
            <param name="filename">The filename.</param>
        </member>
        <member name="T:ComponentPro.Pdf.PdfAlignmentStyle">
            <summary>
            Specifies how the page template is aligned relative to the template area.    
            </summary>
            <remarks>This enumeration is used in <see cref="T:ComponentPro.Pdf.PdfPageTemplateElement" /> class.</remarks>
        </member>
        <member name="F:ComponentPro.Pdf.PdfAlignmentStyle.None">
            <summary>
            Specifies no alignment.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfAlignmentStyle.TopLeft">
            <summary>
            The template is top left aligned.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfAlignmentStyle.TopCenter">
            <summary>
            The template is top center aligned.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfAlignmentStyle.TopRight">
            <summary>
            The template is top right aligned.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfAlignmentStyle.MiddleLeft">
            <summary>
            The template is middle left aligned.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfAlignmentStyle.MiddleCenter">
            <summary>
            The template is middle center aligned.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfAlignmentStyle.MiddleRight">
            <summary>
            The template is middle right aligned.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfAlignmentStyle.BottomLeft">
            <summary>
            The template is bottom left aligned.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfAlignmentStyle.BottomCenter">
            <summary>
            The template is bottom center aligned.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfAlignmentStyle.BottomRight">
            <summary>
             The template is bottom right aligned.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.PdfAnnotationException">
            <summary>
            Exception of this type is raised when annotation object is used incorrectly.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.PdfDocumentException">
            <summary>
            The class represents general PDF document level exceptions.
             The <see cref="T:ComponentPro.Pdf.PdfDocumentException" /> inherited from the <see cref="T:ComponentPro.Pdf.PdfException" /> class
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.PdfException">
            <summary>
                        The class represents general PDF exceptions.
                        The <see cref="T:ComponentPro.Pdf.PdfException" /> inherited from the <see cref="T:System.Exception" /> class
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.PdfException.#ctor">
            <property name="flag" value="Finished" />
            <summary>
            Initializes object by default error message.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.PdfException.#ctor(System.String)">
            <property name="flag" value="Finished" />
            <summary>
            Initializes object by specified error message.
            </summary>
            <param name="message">User defined error message.</param>
        </member>
        <member name="M:ComponentPro.Pdf.PdfException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes object by specified error message and inner
            exception object.
            </summary>
            <param name="message">User defined error message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:ComponentPro.Pdf.PdfDocumentException.#ctor">
            <property name="flag" value="Finished" />
            <summary>
            Initializes object by default error message.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.PdfDocumentException.#ctor(System.Exception)">
            <summary>
            Initializes object by default error message and inner
            exception object.
            </summary>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:ComponentPro.Pdf.PdfDocumentException.#ctor(System.String)">
            <property name="flag" value="Finished" />
            <summary>
            Initializes object by specified error message.
            </summary>
            <param name="message">User defined error message.</param>
        </member>
        <member name="M:ComponentPro.Pdf.PdfDocumentException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes object by specified error message and inner
            exception object.
            </summary>
            <param name="message">User defined error message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:ComponentPro.Pdf.PdfAnnotationException.#ctor">
            <summary>
            Initializes object with default error message.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.PdfAnnotationException.#ctor(System.Exception)">
            <summary>
            Initializes object with default error message and inner
            exception object.
            </summary>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:ComponentPro.Pdf.PdfAnnotationException.#ctor(System.String)">
            <summary>
            Initializes object by specified error message.
            </summary>
            <param name="message">User defined error message.</param>
        </member>
        <member name="M:ComponentPro.Pdf.PdfAnnotationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes object with specified error message and inner
            exception object.
            </summary>
            <param name="message">User defined error message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:ComponentPro.Pdf.PdfArtifact">
            <summary>
            Represents the Artifact
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.PdfTag">
            <summary>
            Represents the tag for the element
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfTag.Order">
            <summary>
            Gets or sets the order for the element
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.PdfArtifact.#ctor">
            <summary>
            Initialize the instance of PdfArtifact
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.PdfArtifact.#ctor(ComponentPro.Pdf.PdfArtifactType)">
            <summary>
            Initialize the instance of PdfArtifact
            </summary>
            <param name="type">Type of the artifact</param>
        </member>
        <member name="M:ComponentPro.Pdf.PdfArtifact.#ctor(ComponentPro.Pdf.PdfArtifactType,ComponentPro.Pdf.PdfAttached)">
            <summary>
            Initialize the instance of PdfArtifact
            </summary>
            <param name="type">Type of the artifact</param>
            <param name="attached">represents the attachment for artifact</param>
        </member>
        <member name="M:ComponentPro.Pdf.PdfArtifact.#ctor(ComponentPro.Pdf.PdfArtifactType,ComponentPro.Pdf.PdfAttached,ComponentPro.Pdf.PdfArtifactSubType)">
            <summary>
            Initialize the instance of PdfArtifact
            </summary>
            <param name="type">Type of the artifact</param>
            <param name="attached">attachment for artifact</param>
            <param name="subType">Subtype of the artifact</param>
        </member>
        <member name="M:ComponentPro.Pdf.PdfArtifact.#ctor(ComponentPro.Pdf.PdfArtifactType,System.Drawing.RectangleF,ComponentPro.Pdf.PdfAttached,ComponentPro.Pdf.PdfArtifactSubType)">
            <summary>
             Initialize the instance of PdfArtifact
            </summary>
            <param name="type">Type of the artifact</param>
            <param name="bBox">Bounding box of the artifact</param>
            <param name="attached">attachment for the artifact</param>
            <param name="subType">Subtype of the artifact</param>
        </member>
        <member name="P:ComponentPro.Pdf.PdfArtifact.ArtifactType">
            <summary>
            Gets or sets the artifact type
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfArtifact.Attached">
            <summary>
            Gets or sets the attachment for the artifact.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfArtifact.BoundingBox">
            <summary>
            Gets or sets the bounding box for the artifact.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfArtifact.SubType">
            <summary>
            Gets or sets the subtype of the artifact
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.PdfArtifactSubType">
            <summary>
            Represents the subtype of the artifact
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.PdfArtifactType">
            <summary>
            Represents the type of the artifact
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.PdfAttached">
            <summary>
            Represents the logically attached artifcat on the page.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.PdfAttached.#ctor(ComponentPro.Pdf.PdfEdge)">
            <summary>
            Initialize the PdfAttached
            </summary>
            <param name="value">page edge</param>
        </member>
        <member name="M:ComponentPro.Pdf.PdfAttached.#ctor(ComponentPro.Pdf.PdfEdge,ComponentPro.Pdf.PdfEdge)">
            <summary>
            Initialize the PdfAttached
            </summary>
            <param name="value1">edge of the page</param>
            <param name="value2">edge of the page</param>
        </member>
        <member name="M:ComponentPro.Pdf.PdfAttached.#ctor(ComponentPro.Pdf.PdfEdge,ComponentPro.Pdf.PdfEdge,ComponentPro.Pdf.PdfEdge,ComponentPro.Pdf.PdfEdge)">
            <summary>
            Initialize the PdfAttached
            </summary>
            <param name="leftEdge">left edge of the page</param>
            <param name="rightEdge">right edge of the page</param>
            <param name="topEdge">top edge of the page</param>
            <param name="bottomEdge">bottom edge of the page</param>
        </member>
        <member name="M:ComponentPro.Pdf.PdfAttached.SetEdge(ComponentPro.Pdf.PdfEdge[])">
            <summary>
            Set edges for the page
            </summary>
            <param name="edges">the page edges</param>
        </member>
        <member name="T:ComponentPro.Pdf.Fields.PdfAutomaticField">
            <summary>
            Represents a fields which is calculated before the document saves.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfGraphicsElement"/> Class    
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfAutomaticField.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Fields.PdfAutomaticField"/> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfAutomaticField.#ctor(ComponentPro.Pdf.Graphics.PdfFont)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Fields.PdfAutomaticField"/> class with <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/>
            </summary>
            <param name="font">The <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> represents the format of the text.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfAutomaticField.#ctor(ComponentPro.Pdf.Graphics.PdfFont,ComponentPro.Pdf.Graphics.PdfBrush)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Fields.PdfAutomaticField"/> class with <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> and <see cref="T:ComponentPro.Pdf.Graphics.PdfBrush"/>.
            </summary>
            <param name="font">The <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> represents the format of the text.</param>
            <param name="brush">The <see cref="T:ComponentPro.Pdf.Graphics.PdfBrush"/> provides color and texture to the text.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfAutomaticField.#ctor(ComponentPro.Pdf.Graphics.PdfFont,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Fields.PdfAutomaticField"/> class with <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> and bounds.
            </summary>
            <param name="font">The <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> represents the format of the text.</param>
            <param name="bounds">The bounds.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfAutomaticField.Draw(ComponentPro.Pdf.Graphics.PdfGraphics,System.Single,System.Single)">
            <summary>
            Draws an element on the Graphics.
            </summary>
            <param name="graphics">Graphics context where the element should be printed.</param>
            <param name="x">X co-ordinate of the element.</param>
            <param name="y">Y co-ordinate of the element.</param>
            <exclude />
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfAutomaticField.DrawInternal(ComponentPro.Pdf.Graphics.PdfGraphics)">
            <summary>
            Draws an element on the Graphics.
            </summary>
            <param name="graphics">Graphics context where the element should be printed.</param>
            <exclude />
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfAutomaticField.GetValue(ComponentPro.Pdf.Graphics.PdfGraphics)">
            <summary>
            Gets the value of the field at the specified graphics.
            </summary>
            <param name="graphics">The graphics.</param>
            <exclude />
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfAutomaticField.ObtainBrush">
            <summary>
            Gets the brush. If brush is undefined default black brush will be used.
            </summary>
            <returns>The brush </returns>
            <exclude />
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfAutomaticField.ObtainFont">
            <summary>
            Gets the font. If font is undefined default font will be used.
            </summary>
            <returns></returns>
            <exclude />
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfAutomaticField.ObtainSize">
            <summary>
            Gets the template size.
            </summary>
            <returns>The template size.</returns>
            <exclude />
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfAutomaticField.PerformDraw(ComponentPro.Pdf.Graphics.PdfGraphics,System.Drawing.PointF,System.Single,System.Single)">
            <summary>
            Performs draw.
            </summary>
            <param name="graphics">The graphics.</param>
            <param name="location">The location.</param>
            <param name="scalingX">The scaling X.</param>
            <param name="scalingY">The scaling Y.</param>
            <exclude />
        </member>
        <member name="P:ComponentPro.Pdf.Fields.PdfAutomaticField.Bounds">
            <summary>
            Gets or sets the bounds of the field.
            </summary>
            <value>The bounds value.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Fields.PdfAutomaticField.Brush">
            <summary>
            Gets or sets the <see cref="T:ComponentPro.Pdf.Graphics.PdfBrush"/> of the field
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.Graphics.PdfBrush"/> provides color and texture to the text.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Fields.PdfAutomaticField.Font">
            <summary>
            Gets or sets the <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> of the field.
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> represents the format of the text.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Fields.PdfAutomaticField.Location">
            <summary>
            Gets or sets the location of the field.
            </summary>
            <value>The location.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Fields.PdfAutomaticField.Pen">
            <summary>
            Gets or sets the <see cref="T:ComponentPro.Pdf.Graphics.PdfPen"/> of the field.
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.Graphics.PdfPen"/> that determines the color, width, and style of the text.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Fields.PdfAutomaticField.Size">
            <summary>
            Gets or sets the size of the field.
            </summary>
            <value>The size of the field.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Fields.PdfAutomaticField.StringFormat">
            <summary>
            Gets or sets the <see cref="T:ComponentPro.Pdf.Graphics.PdfStringFormat"/> of the field.
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.Graphics.PdfStringFormat"/> determines text layout information on PDF</value>
        </member>
        <member name="T:ComponentPro.Pdf.PdfBookletUtil">
            <summary>
            Represents a booklet creator, which allows to create a booklet from a PDF document.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" />
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument" />
        </member>
        <member name="M:ComponentPro.Pdf.PdfBookletUtil.CreateBooklet(ComponentPro.Pdf.PdfImportedDocument,System.Drawing.SizeF)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.PdfBookletUtil" /> class with <see cref="T:ComponentPro.Pdf.PdfImportedDocument" /> and page size
            </summary>
            <param name="loadedDocument">The existing PDF document.</param>
            <param name="pageSize">Size of the page.</param>
            <returns>
            The initialized PDF document, which could be saved.
            </returns>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" />
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument" />
        </member>
        <member name="M:ComponentPro.Pdf.PdfBookletUtil.CreateBooklet(System.String,System.String,System.Drawing.SizeF)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.PdfBookletUtil" /> class with source PDF path,destination file name and page size.
            </summary>
            <remarks>This method is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight</remarks>
            <param name="from">The path to the file on the disk, which the booklet should be created from.</param>
            <param name="into">The path to the file on the disk, which the booklet should be saved into.</param>
            <param name="pageSize">Size of the page.</param>
            <returns>
            The initialized PDF document, which could be saved.
            </returns>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" />
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument" />
        </member>
        <member name="M:ComponentPro.Pdf.PdfBookletUtil.CreateBooklet(ComponentPro.Pdf.PdfImportedDocument,System.Drawing.SizeF,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.PdfBookletUtil" /> class <see cref="T:ComponentPro.Pdf.PdfImportedDocument" />, page size and
            flag to set two side print. 
            </summary>
            <param name="loadedDocument">The <see cref="T:ComponentPro.Pdf.PdfImportedDocument" />.</param>
            <param name="pageSize">Size of the page.</param>
            <param name="twoSide">if set to <c>true</c> if the result in document should be printed
            on both sides of paper.</param>
            <returns>
            The initialized PDF document, which could be saved.
            </returns>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" />
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument" />
        </member>
        <member name="M:ComponentPro.Pdf.PdfBookletUtil.CreateBooklet(System.String,System.String,System.Drawing.SizeF,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.PdfBookletUtil" /> class with source path,destination,page size and flag to set two side print. 
            </summary>
            <remarks>This method is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight</remarks>
            <param name="from">The path to the file on the disk, which the booklet should be created from.</param>
            <param name="into">The path to the file on the disk, which the booklet should be saved into.</param>
            <param name="pageSize">Size of the page.</param>
            <param name="twoSide">if set to <c>true</c> if the result in document should be printed
            on both sides of paper.</param>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" />
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument" />
        </member>
        <member name="M:ComponentPro.Pdf.PdfBookletUtil.CreateBooklet(ComponentPro.Pdf.PdfImportedDocument,System.Drawing.SizeF,System.Boolean,ComponentPro.Pdf.Graphics.PdfMargins)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.PdfBookletUtil" /> class.
            </summary>
            <param name="loadedDocument">The <see cref="T:ComponentPro.Pdf.PdfImportedDocument" /></param>
            <param name="pageSize">Size of the page.</param>
            <param name="twoSide">if set to <c>true</c> if the result in document should be printed
            on both sides of paper.</param>
            <param name="margin">The margin value for generated PDF document.</param>
            <returns>The initialized PDF document, which could be saved.</returns>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" />
            <seealso cref="T:ComponentPro.Pdf.PdfImportedDocument" />
        </member>
        <member name="T:ComponentPro.Pdf.PdfBorderOverlapStyle">
             <summary>
             Specifies the values of the border overlap style.
             </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfBorderOverlapStyle.Overlap">
            <summary>
            Cell borders overlap (are drawn using the same coordinates).
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfBorderOverlapStyle.Inside">
            <summary>
            Cell borders are drawn in the cell's interior.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.PdfBorders">
            <summary>
            The class used represents the cell border of the PDF grid
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfBorders.All">
            <summary>
            Sets all.
            </summary>
            <value>All.</value>
        </member>
        <member name="P:ComponentPro.Pdf.PdfBorders.Bottom">
            <summary>
            Gets or sets the bottom.
            </summary>
            <value>The bottom.</value>
        </member>
        <member name="P:ComponentPro.Pdf.PdfBorders.Default">
            <summary>
            Gets the default.
            </summary>
            <value>The default.</value>
        </member>
        <member name="P:ComponentPro.Pdf.PdfBorders.Left">
            <summary>
            Gets or sets the left.
            </summary>
            <value>The left.</value>
        </member>
        <member name="P:ComponentPro.Pdf.PdfBorders.Right">
            <summary>
            Gets or sets the right.
            </summary>
            <value>The right.</value>
        </member>
        <member name="P:ComponentPro.Pdf.PdfBorders.Top">
            <summary>
            Gets or sets the top.
            </summary>
            <value>The top.</value>
        </member>
        <member name="T:ComponentPro.Pdf.Fields.PdfMultipleValueField">
            <summary>
            Represents automatic field which has the same value within the <see cref="T:ComponentPro.Pdf.Graphics.PdfGraphics"/>
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Fields.PdfDynamicField"/> Class  
        </member>
        <member name="T:ComponentPro.Pdf.Fields.PdfDynamicField">
            <summary>
            Represents automatic field which value is dynamically evaluated.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Fields.PdfAutomaticField"/> Class  
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfDynamicField.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Fields.PdfDynamicField"/> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfDynamicField.#ctor(ComponentPro.Pdf.Graphics.PdfFont)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Fields.PdfDynamicField"/> class with <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/>.
            </summary>
            <param name="font">A <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> object that specifies the font attributes (the family name, the size, and the style of the font) to use.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfDynamicField.#ctor(ComponentPro.Pdf.Graphics.PdfFont,ComponentPro.Pdf.Graphics.PdfBrush)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Fields.PdfDynamicField"/> class <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> and <see cref="T:ComponentPro.Pdf.Graphics.PdfBrush"/>.
            </summary>
            <param name="font">A <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> object that specifies the font attributes (the family name, the size, and the style of the font) to use.</param>
            <param name="brush">.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfDynamicField.#ctor(ComponentPro.Pdf.Graphics.PdfFont,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Fields.PdfDynamicField"/> class with <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> and bounds
            </summary>
            <param name="font">A <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> object that specifies the font attributes (the family name, the size, and the style of the font) to use.</param>
            <param name="bounds">The Rectangle bounds.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfMultipleValueField.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Fields.PdfMultipleValueField"/> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfMultipleValueField.#ctor(ComponentPro.Pdf.Graphics.PdfFont)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Fields.PdfMultipleValueField"/> class with <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/>.
            </summary>
            <param name="font">A <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/>object that specifies the font attributes (the family name, the size, and the style of the font) to use.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfMultipleValueField.#ctor(ComponentPro.Pdf.Graphics.PdfFont,ComponentPro.Pdf.Graphics.PdfBrush)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Fields.PdfMultipleValueField"/> class with <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> and <see cref="T:ComponentPro.Pdf.Graphics.PdfBrush"/>.
            </summary>
            <param name="font">A <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/>object that specifies the font attributes (the family name, the size, and the style of the font) to use.</param>
            <param name="brush">The <see cref="T:ComponentPro.Pdf.Graphics.PdfBrush"/> specifies the color and texture to the text.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfMultipleValueField.#ctor(ComponentPro.Pdf.Graphics.PdfFont,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Fields.PdfMultipleValueField"/> class with <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> and rectangle bounds.
            </summary>
            <param name="font">A <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/>object that specifies the font attributes (the family name, the size, and the style of the font) to use.</param>
            <param name="bounds">The rectangle bounds.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfMultipleValueField.PerformDraw(ComponentPro.Pdf.Graphics.PdfGraphics,System.Drawing.PointF,System.Single,System.Single)">
            <summary>
            Performs draw.
            </summary>
            <param name="graphics">The graphics.</param>
            <param name="location">The location.</param>
            <param name="scalingX">The scaling X.</param>
            <param name="scalingY">The scaling Y.</param>
        </member>
        <member name="P:ComponentPro.Pdf.Fields.PdfMultipleValueField.PdfTag">
            <summary>
            Gets or sets the tag for the element
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfCompositeField.#ctor(System.String,ComponentPro.Pdf.Fields.PdfAutomaticField[])">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Fields.PdfCompositeField"/> class with text and list of automatic fields
            </summary>
            <param name="text">The wide-character string to be drawn.</param>
            <param name="list">The list of <see cref="T:ComponentPro.Pdf.Fields.PdfAutomaticField"/> objects.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfCompositeField.#ctor(ComponentPro.Pdf.Graphics.PdfFont,System.String,ComponentPro.Pdf.Fields.PdfAutomaticField[])">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Fields.PdfCompositeField"/> class with <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/>,text and list of automatic fields
            </summary>
            <param name="font">A <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> object that specifies the font attributes (the family name, the size, and the style of the font) to use.</param>
            <param name="text">The wide-character string to be drawn.</param>
            <param name="list">The list of <see cref="T:ComponentPro.Pdf.Fields.PdfAutomaticField"/> objects.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfCompositeField.#ctor(ComponentPro.Pdf.Graphics.PdfFont,ComponentPro.Pdf.Graphics.PdfBrush,System.String,ComponentPro.Pdf.Fields.PdfAutomaticField[])">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Fields.PdfCompositeField"/> class with <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/>,<see cref="T:ComponentPro.Pdf.Graphics.PdfBrush"/>,text and list of automatic fields.
            </summary>
            <param name="font">A <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> object that specifies the font attributes (the family name, the size, and the style of the font) to use.</param>
            <param name="brush">A <see cref="T:ComponentPro.Pdf.Graphics.PdfBrush"/> object that is used to fill the string. </param>
            <param name="text">The wide-character string to be drawn.</param>
            <param name="list">The list of <see cref="T:ComponentPro.Pdf.Fields.PdfAutomaticField"/> objects.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfCompositeField.GetValue(ComponentPro.Pdf.Graphics.PdfGraphics)">
            <summary>
            Gets the value of the field at the specified graphics.
            </summary>
            <param name="graphics">The graphics.</param>
            <returns></returns>
            <exclude />
        </member>
        <member name="P:ComponentPro.Pdf.Fields.PdfCompositeField.AutomaticFields">
            <summary>
            Gets or sets the automatic fields.
            </summary>
            <value>The array of automatic fields <see cref="T:ComponentPro.Pdf.Fields.PdfAutomaticField"/>.</value>
        </member>
        <member name="T:ComponentPro.Pdf.PdfCompressionLevel">
            <summary>
            Defines data compression level.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfCompressionLevel.NoCompression">
            <property name="flag" value="Finished" />
            <summary>
            Pack without compression.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfCompressionLevel.BestSpeed">
            <property name="flag" value="Finished" />
            <summary>
            Use high speed compression, reduce of data size is low.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfCompressionLevel.BelowNormal">
            <property name="flag" value="Finished" />
            <summary>
            Something middle between normal and BestSpeed compressions.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfCompressionLevel.Normal">
            <property name="flag" value="Finished" />
            <summary>
            Use normal compression, middle between speed and size.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfCompressionLevel.AboveNormal">
            <property name="flag" value="Finished" />
            <summary>
            Pack better but require a little more time.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfCompressionLevel.Best">
            <property name="flag" value="Finished" />
            <summary>
            Use best compression, slow enough.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfCompressionOptions.CompressImages">
            <summary>
            Gets or sets whether compress images based on the image quality.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfCompressionOptions.ImageQuality">
            <summary>
            Gets or sets the image quality.
            </summary>
            <remarks>Default value is 50.</remarks>
        </member>
        <member name="P:ComponentPro.Pdf.PdfCompressionOptions.OptimizeFont">
            <summary>
            Gets or sets whether to optimize font data.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfCompressionOptions.OptimizePageContents">
            <summary>
            Gets or sets whether to optimize page contents.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfCompressionOptions.RemoveMetadata">
            <summary>
            Gets or sets whether remove metadata informations.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.PdfConformanceException">
            <summary>
            Exception of this type is raised when the document contains object which are not 
            supported by current document standard.Inherited from <see cref="T:ComponentPro.Pdf.PdfDocumentException" />
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.PdfConformanceException.#ctor">
            <summary>
            Initializes object with default error message.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.PdfConformanceException.#ctor(System.Exception)">
            <summary>
            Initializes object with default error message and inner
            exception object.
            </summary>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:ComponentPro.Pdf.PdfConformanceException.#ctor(System.String)">
            <summary>
            Initializes object by specified error message.
            </summary>
            <param name="message">User defined error message.</param>
        </member>
        <member name="M:ComponentPro.Pdf.PdfConformanceException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes object with specified error message and inner
            exception object.
            </summary>
            <param name="message">User defined error message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:ComponentPro.Pdf.Fields.PdfCreationDateField">
            <summary>
            Represents class to display creation date of the document.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Fields.PdfSingleValueField"/> Class    
        </member>
        <member name="T:ComponentPro.Pdf.Fields.PdfSingleValueField">
            <summary>
            Represents automatic field which has the same value 
            in the whole document.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Fields.PdfDynamicField"/> Class    
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfSingleValueField.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Fields.PdfSingleValueField"/> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfSingleValueField.#ctor(ComponentPro.Pdf.Graphics.PdfFont)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Fields.PdfSingleValueField"/> class with <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/>.
            </summary>
            <param name="font">A <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> object that specifies the font attributes (the family name, the size, and the style of the font) to use.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfSingleValueField.#ctor(ComponentPro.Pdf.Graphics.PdfFont,ComponentPro.Pdf.Graphics.PdfBrush)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Fields.PdfSingleValueField"/> class with <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> and <see cref="T:ComponentPro.Pdf.Graphics.PdfBrush"/>.
            </summary>
            <param name="font">A <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> object that specifies the font attributes (the family name, the size, and the style of the font) to use.</param>
            <param name="brush">A <see cref="T:ComponentPro.Pdf.Graphics.PdfBrush"/> object that is used to fill the string.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfSingleValueField.#ctor(ComponentPro.Pdf.Graphics.PdfFont,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Fields.PdfSingleValueField"/> class with <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> and rectangle bounds of the field
            </summary>
            <param name="font">A <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> object that specifies the font attributes (the family name, the size, and the style of the font) to use.</param>
            <param name="bounds">The bounds.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfSingleValueField.PerformDraw(ComponentPro.Pdf.Graphics.PdfGraphics,System.Drawing.PointF,System.Single,System.Single)">
            <summary>
            Performs draw.
            </summary>
            <param name="graphics">The graphics.</param>
            <param name="location">The location.</param>
            <param name="scalingX">The scaling X.</param>
            <param name="scalingY">The scaling Y.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfCreationDateField.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Fields.PdfCreationDateField"/> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfCreationDateField.#ctor(ComponentPro.Pdf.Graphics.PdfFont)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Fields.PdfCreationDateField"/> class with <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/>
            </summary>
            <param name="font">A <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> object that specifies the font attributes (the family name, the size, and the style of the font) to use.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfCreationDateField.#ctor(ComponentPro.Pdf.Graphics.PdfFont,ComponentPro.Pdf.Graphics.PdfBrush)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Fields.PdfCreationDateField"/> class with <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> and <see cref="T:ComponentPro.Pdf.Graphics.PdfBrush"/>.
            </summary>
            <param name="font">A <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> object that specifies the font attributes (the family name, the size, and the style of the font) to use.</param>
            <param name="brush">A <see cref="T:ComponentPro.Pdf.Graphics.PdfBrush"/> object that is used to fill the string.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfCreationDateField.#ctor(ComponentPro.Pdf.Graphics.PdfFont,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Fields.PdfCreationDateField"/> class.
            </summary>
            <param name="font">A <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/>object that specifies the font attributes (the family name, the size, and the style of the font) to use. </param>
            <param name="bounds">Specifies the location and size of the field.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfCreationDateField.GetValue(ComponentPro.Pdf.Graphics.PdfGraphics)">
            <summary>
            Gets the value of the field at the specified graphics.
            </summary>
            <param name="graphics">The graphics.</param>
            <returns></returns>
            <exclude />
        </member>
        <member name="P:ComponentPro.Pdf.Fields.PdfCreationDateField.DateFormatString">
            <summary>
            Gets or sets the format string.
            </summary>
            <value>The format string.</value> 
        </member>
        <member name="T:ComponentPro.Pdf.PdfCrossReferenceType">
            <summary>
            Specifies the type of the PDF cross-reference.
            </summary>
            <remarks>Default value is CrossReferenceStream</remarks>
            <seealso cref="!:FileStructure" /> Class    
        </member>
        <member name="F:ComponentPro.Pdf.PdfCrossReferenceType.CrossReferenceTable">
            <summary>
            The cross-reference table contains information that permits random access to indirect objects within the file so that the entire file need not be read to locate any particular object. The structure is useful for incremental updates, since it allows a new cross-reference section to be added to the PDF file, containing entries only for objects that have been added or deleted. Cross-reference is represented by cross-reference table. The cross-reference table is the traditional way of representing reference type.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfCrossReferenceType.CrossReferenceStream">
            <summary>
            Cross-reference is represented by cross-reference stream. Cross-reference streams are stream objects, and contain a dictionary and a data stream.
            This leads to more compact representation of the file data especially along with the compression enabled.
            This format is supported by PDF 1.5 version and higher only.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Fields.PdfDateTimeField">
            <summary>
            Represents date and time automated field.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Fields.PdfStaticField"/> Class    
        </member>
        <member name="T:ComponentPro.Pdf.Fields.PdfStaticField">
            <summary>
            Represents automatic field which value can be evaluated in the moment of creation.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Fields.PdfAutomaticField"/> Class    
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfStaticField.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Fields.PdfStaticField"/> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfStaticField.#ctor(ComponentPro.Pdf.Graphics.PdfFont)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Fields.PdfStaticField"/> class with <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/>
            </summary>
            <param name="font">The <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> represents the format of the text.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfStaticField.#ctor(ComponentPro.Pdf.Graphics.PdfFont,ComponentPro.Pdf.Graphics.PdfBrush)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Fields.PdfStaticField"/> class with <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> and <see cref="T:ComponentPro.Pdf.Graphics.PdfBrush"/>
            </summary>
            <param name="font">The <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> represents the format of the text.</param>
            <param name="brush">The <see cref="T:ComponentPro.Pdf.Graphics.PdfBrush"/> provides color and texture to the text.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfStaticField.#ctor(ComponentPro.Pdf.Graphics.PdfFont,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Fields.PdfStaticField"/> class with <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> and bounds
            </summary>
            <param name="font">The <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> represents the format of the text.</param>
            <param name="bounds">The Rectangle bounds.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfStaticField.PerformDraw(ComponentPro.Pdf.Graphics.PdfGraphics,System.Drawing.PointF,System.Single,System.Single)">
            <summary>
            Performs draw.
            </summary>
            <param name="graphics">The graphics.</param>
            <param name="location">The location.</param>
            <param name="scalingX">The scaling X.</param>
            <param name="scalingY">The scaling Y.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfDateTimeField.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Fields.PdfDateTimeField"/> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfDateTimeField.#ctor(ComponentPro.Pdf.Graphics.PdfFont)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Fields.PdfDateTimeField"/> class with <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/>.
            </summary>
            <param name="font">A <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> object that specifies the font attributes (the family name, the size, and the style of the font) to use. </param>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfDateTimeField.#ctor(ComponentPro.Pdf.Graphics.PdfFont,ComponentPro.Pdf.Graphics.PdfBrush)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Fields.PdfDateTimeField"/> class with <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> and <see cref="T:ComponentPro.Pdf.Graphics.PdfBrush"/>.
            </summary>
            <param name="font">A <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> object that specifies the font attributes (the family name, the size, and the style of the font) to use. </param>
            <param name="brush">A <see cref="T:ComponentPro.Pdf.Graphics.PdfBrush"/> object that is used to fill the string. </param>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfDateTimeField.#ctor(ComponentPro.Pdf.Graphics.PdfFont,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Fields.PdfDateTimeField"/> class with <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> and rectangle bounds
            </summary>
            <param name="font">A <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> object that specifies the font attributes (the family name, the size, and the style of the font) to use. </param>
            <param name="bounds">Specifies the location and size of the field.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfDateTimeField.GetValue(ComponentPro.Pdf.Graphics.PdfGraphics)">
            <summary>
            Get the value of the field at the specified graphics.
            </summary>
            <param name="graphics">The graphics.</param>
            <returns>value</returns>
            <exclude />
        </member>
        <member name="P:ComponentPro.Pdf.Fields.PdfDateTimeField.DateFormatString">
            <summary>
            Gets or sets the format string.
            </summary>
            <value>The format string.</value>
        </member>
        <member name="T:ComponentPro.Pdf.Fields.PdfDestinationPageNumberField">
            <summary>
            Represents class which displays destination page's number.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Fields.PdfPageNumberField"/> Class    
        </member>
        <member name="T:ComponentPro.Pdf.Fields.PdfPageNumberField">
            <summary>
            Represents PDF document page number field.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Fields.PdfMultipleNumberValueField"/> Class    
        </member>
        <member name="T:ComponentPro.Pdf.Fields.PdfMultipleNumberValueField">
            <summary>
            Represents automatic field which has the same value within the <see cref="T:ComponentPro.Pdf.Graphics.PdfGraphics"/>
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Fields.PdfMultipleValueField"/> Class   
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfMultipleNumberValueField.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Fields.PdfMultipleNumberValueField"/> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfMultipleNumberValueField.#ctor(ComponentPro.Pdf.Graphics.PdfFont)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Fields.PdfMultipleNumberValueField"/> class with <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/>.
            </summary>
            <param name="font">A <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/>object that specifies the font attributes (the family name, the size, and the style of the font) to use.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfMultipleNumberValueField.#ctor(ComponentPro.Pdf.Graphics.PdfFont,ComponentPro.Pdf.Graphics.PdfBrush)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Fields.PdfMultipleNumberValueField"/> class with <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> and <see cref="T:ComponentPro.Pdf.Graphics.PdfBrush"/>.
            </summary>
            <param name="font">A <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/>object that specifies the font attributes (the family name, the size, and the style of the font) to use.</param>
            <param name="brush">The <see cref="T:ComponentPro.Pdf.Graphics.PdfBrush"/> specifies the color and texture to the text.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfMultipleNumberValueField.#ctor(ComponentPro.Pdf.Graphics.PdfFont,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Fields.PdfMultipleNumberValueField"/> class with <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> and rectangle bounds
            </summary>
            <param name="font">A <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/>object that specifies the font attributes (the family name, the size, and the style of the font) to use.</param>
            <param name="bounds">The bounds.</param>
        </member>
        <member name="P:ComponentPro.Pdf.Fields.PdfMultipleNumberValueField.NumberStyle">
            <summary>
            Gets or sets the specific number style.
            </summary>
            <value>The<see cref="T:ComponentPro.Pdf.PdfNumberStyle"/> provides specific number style.</value>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfPageNumberField.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Fields.PdfPageNumberField"/> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfPageNumberField.#ctor(ComponentPro.Pdf.Graphics.PdfFont)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Fields.PdfPageNumberField"/> class with <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/>
            </summary>
            <param name="font">A <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> object that specifies the font attributes (the family name, the size, and the style of the font) to use.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfPageNumberField.#ctor(ComponentPro.Pdf.Graphics.PdfFont,ComponentPro.Pdf.Graphics.PdfBrush)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Fields.PdfPageNumberField"/> class with <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> and <see cref="T:ComponentPro.Pdf.Graphics.PdfBrush"/>.
            </summary>
            <param name="font">A <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> object that specifies the font attributes (the family name, the size, and the style of the font) to use.</param>
            <param name="brush">A <see cref="T:ComponentPro.Pdf.Graphics.PdfBrush"/> object that is used to fill the string.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfPageNumberField.#ctor(ComponentPro.Pdf.Graphics.PdfFont,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Fields.PdfPageNumberField"/> class with <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> and rectangle bounds.
            </summary>
            <param name="font">A <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> object that specifies the font attributes (the family name, the size, and the style of the font) to use.s</param>
            <param name="bounds">The bounds.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfPageNumberField.GetValue(ComponentPro.Pdf.Graphics.PdfGraphics)">
            <summary>
            Gets the value of the field at the specified graphics.
            </summary>
            <param name="graphics">The graphics.</param>
            <returns>result</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfPageNumberField.InternalGetValue(ComponentPro.Pdf.PdfPage)">
            <summary>
            Internal method to get value of the field.
            </summary>
            <param name="page">The page.</param>
            <returns></returns>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfPageNumberField.InternalLoadedGetValue(ComponentPro.Pdf.PdfImportedPage)">
            <summary>
            Internal method to get value of the field.
            </summary>
            <param name="page">The page</param>
            <returns></returns>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfDestinationPageNumberField.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Fields.PdfDestinationPageNumberField"/> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfDestinationPageNumberField.#ctor(ComponentPro.Pdf.Graphics.PdfFont)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Fields.PdfDestinationPageNumberField"/> class with <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/>
            </summary>
            <param name="font">A <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> object that specifies the font attributes (the family name, the size, and the style of the font) to use.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfDestinationPageNumberField.#ctor(ComponentPro.Pdf.Graphics.PdfFont,ComponentPro.Pdf.Graphics.PdfBrush)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Fields.PdfDestinationPageNumberField"/> class with <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> and <see cref="T:ComponentPro.Pdf.Graphics.PdfBrush"/>.
            </summary>
            <param name="font">A <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> object that specifies the font attributes (the family name, the size, and the style of the font) to use.</param>
            <param name="brush">A <see cref="T:ComponentPro.Pdf.Graphics.PdfBrush"/> object that is used to fill the string.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfDestinationPageNumberField.#ctor(ComponentPro.Pdf.Graphics.PdfFont,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Fields.PdfDestinationPageNumberField"/> class with <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> and rectangle bounds.
            </summary>
            <param name="font">A <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> object that specifies the font attributes (the family name, the size, and the style of the font) to use. </param>
            <param name="bounds">Specifies the location and size of the field.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfDestinationPageNumberField.GetValue(ComponentPro.Pdf.Graphics.PdfGraphics)">
            <summary>
            Gets the value of the field at the specified graphics.
            </summary>
            <param name="graphics">The graphics.</param>
            <returns></returns>
        </member>
        <member name="P:ComponentPro.Pdf.Fields.PdfDestinationPageNumberField.LoadedPage">
            <summary>
            Get and sets the PdfImportedPage
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Fields.PdfDestinationPageNumberField.Page">
            <summary>
            Gets or sets the page.
            </summary>
            <value>The page.</value>
        </member>
        <member name="T:ComponentPro.Pdf.PdfDockStyle">
            <summary>
            Specifies the docking style of the page template.
            </summary>
            <remarks>This enumeration is used in <see cref="T:ComponentPro.Pdf.PdfPageTemplateElement" /> class.</remarks>
        </member>
        <member name="F:ComponentPro.Pdf.PdfDockStyle.None">
            <summary>
            The page template is not docked.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfDockStyle.Bottom">
            <summary>
            The page template edge is docked to the bottom page's side.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfDockStyle.Top">
            <summary>
            The page template edge is docked to the top page's side.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfDockStyle.Left">
            <summary>
            The page template edge is docked to the left page's side.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfDockStyle.Right">
            <summary>
            The page template edge is docked to the right page's side.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfDockStyle.Fill">
            <summary>
            The page template stretch on full page.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.PdfDocument">
            <summary>
            Represents a PDF document and can be used to create a new PDF document from the scratch
            </summary>    
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfFont" /> Class    
            <seealso cref="T:ComponentPro.Pdf.PdfPage" /> Class   
            <seealso cref="T:ComponentPro.Pdf.PdfDocumentBase" /> Class   
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfGraphics" /> Class   
            <seealso cref="T:ComponentPro.Pdf.Parsing.PdfImportedDocument" /> Class    
        </member>
        <member name="M:ComponentPro.Pdf.PdfDocument.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.PdfDocument" /> class.
            </summary>            
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfFont" /> Class    
            <seealso cref="T:ComponentPro.Pdf.PdfPage" /> Class                   
        </member>
        <member name="M:ComponentPro.Pdf.PdfDocument.#ctor(ComponentPro.Pdf.PdfDocumentConformanceLevel)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.PdfDocument" /> class with the specified <see cref="T:ComponentPro.Pdf.PdfDocumentConformanceLevel" />.
            </summary>
            <param name="conformance">The conformance level.</param>
            <remarks>Not Supported under medium trust environment. This Constructor is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight</remarks>  
            <seealso cref="T:ComponentPro.Pdf.PdfDocumentConformanceLevel" /> Enumeration
        </member>
        <member name="M:ComponentPro.Pdf.PdfDocument.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <value>A new object that is a copy of this instance.</value>        
            <remarks>The resulting clone must be of the same type as or a compatible type to the original instance.</remarks>
        </member>
        <member name="M:ComponentPro.Pdf.PdfDocument.Close(System.Boolean)">
            <summary>
            Close the document completely. 
            </summary>
            <param name="completely">if set to <c>true</c> the document should be disposed completely.</param>
            <remarks>The document cannot be saved if Close method was invoked.</remarks>                
        </member>
        <member name="M:ComponentPro.Pdf.PdfDocument.Dispose">
            <summary>
            Releases all the resources used by document instances.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.PdfDocument.OnSaveProgress(ComponentPro.Pdf.ProgressEventArgs)">
            <summary>
            Raises the Progress event.
            </summary>
            <param name="arguments">The <see cref="T:ComponentPro.Pdf.ProgressEventArgs" />
            instance containing the event data.</param>
        </member>
        <member name="M:ComponentPro.Pdf.PdfDocument.Save(System.IO.Stream)">
            <summary>
            Saves the document to the specified output stream.
            </summary>
            <param name="stream">The stream object where PDF document will be saved.</param>    
        </member>
        <member name="P:ComponentPro.Pdf.PdfDocument.Actions">
            <summary>
            Gets the actions to be performed when the document is opened/closed
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.Actions.PdfDocumentActions"/> specifying the document action.</value>
            <seealso cref="T:ComponentPro.Pdf.Actions.PdfLaunchAction"/> Class
            <seealso cref="T:ComponentPro.Pdf.Actions.PdfSoundAction"/> Class
            <seealso cref="T:ComponentPro.Pdf.Actions.PdfFormAction"/> Class
            <seealso cref="T:ComponentPro.Pdf.Actions.PdfGoToAction"/> Class
            <seealso cref="T:ComponentPro.Pdf.Actions.PdfJavaScriptAction"/> Class
            <seealso cref="T:ComponentPro.Pdf.Actions.PdfNamedAction"/> Class
            <seealso cref="T:ComponentPro.Pdf.Actions.PdfFieldActions"/> Class
            <seealso cref="T:ComponentPro.Pdf.Actions.PdfResetFormAction"/> Class
            <seealso cref="T:ComponentPro.Pdf.Actions.PdfSubmitFormAction"/> Class
            <seealso cref="T:ComponentPro.Pdf.Actions.PdfUriAction"/> Class        
        </member>
        <member name="P:ComponentPro.Pdf.PdfDocument.Attachments">
            <summary>
            Gets the attachment collection of the document.
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.Annotations.PdfAttachmentCollection"/> object contains list of files which are attached in the PDF document.</value>
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfAttachment"/> Class.
        </member>
        <member name="P:ComponentPro.Pdf.PdfDocument.AutoTag">
            <summary>
            Gets or sets a value indicates whether the document is auto-tagged or not.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfDocument.Bookmarks">
            <summary>
            Gets the bookmark collection of the document.
            </summary>
            <value>A <see cref="T:ComponentPro.Pdf.PdfBookmarkBase"/> specifies the document's bookmark. </value>
            <seealso cref="T:ComponentPro.Pdf.PdfBookmark"/> Class
        </member>
        <member name="P:ComponentPro.Pdf.PdfDocument.ColorSpace">
            <summary>
            Gets or sets the color space of the document. This property can be used to create PDF document in RGB, Grayscale or CMYK color spaces.
            By default the document uses RGB color space.
            </summary>
            <remarks>This property has impact on the new created pages only.</remarks>
            <value>The <see cref="T:ComponentPro.Pdf.Graphics.PdfColorSpace" /> of the document.</value>
            <see cref="T:ComponentPro.Pdf.Graphics.PdfColorSpace" /> Class
        </member>
        <member name="P:ComponentPro.Pdf.PdfDocument.Conformance">
            <summary>
            Gets or sets the PDF conformance level.
            This property can be used to create PDF/A-1b or Pdf_X1A2001 compliant documents. By default is None.
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.PdfDocumentConformanceLevel" /> ENUM.</value>
            <remarks>Not Supported under Medium Trust environment.</remarks>
            <see cref="T:ComponentPro.Pdf.PdfDocumentConformanceLevel" /> Class
        </member>
        <member name="P:ComponentPro.Pdf.PdfDocument.EnableCache">
            <summary>Gets or sets the enable cache. This property is used to cache the fonts. Default value is True.</summary>       
        </member>
        <member name="P:ComponentPro.Pdf.PdfDocument.EnableThreadSafe">
            <summary>
            Gets or sets the enable thread safe. This property is used to manage the PDF cache objects in multithreading. Default value is false. 
            </summary>       
        </member>
        <member name="P:ComponentPro.Pdf.PdfDocument.EnableUniqueResourceNaming">
            <summary>
            Gets or sets boolean value which enables or disables unique resource naming, Default value is true.
            </summary>
            <remarks> 
            By default this value will be true, if the uniform resource naming is needed then this value can be set false. 
            </remarks>
        </member>
        <member name="P:ComponentPro.Pdf.PdfDocument.Form">
            <summary>
            Gets the interactive form of the document.
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.Forms.PdfForm"/> object contains the list of form elements of the document.</value>
            <see cref="T:ComponentPro.Pdf.Forms.PdfForm"/> Class
            <see cref="T:ComponentPro.Pdf.Forms.PdfField"/> Class
        </member>
        <member name="P:ComponentPro.Pdf.PdfDocument.NamedDestinationCollection">
            <summary>
            Gets the named destination collection of the document.
            </summary>
            <value>A <see cref="T:ComponentPro.Pdf.Annotations.PdfNamedDestinationCollection"/> specifies the document's named destinations. </value>
            <seealso cref="T:ComponentPro.Pdf.Annotations.PdfNamedDestination"/> Class
        </member>
        <member name="P:ComponentPro.Pdf.PdfDocument.Pages">
            <summary>
            Gets the collection of pages in the document.
            </summary>
            <value>A <see cref="T:ComponentPro.Pdf.PdfDocumentPageCollection" /> object containing the list of document's pages. </value>        
            <see cref="T:ComponentPro.Pdf.PdfDocumentPageCollection" /> Class
            <see cref="T:ComponentPro.Pdf.PdfPage" /> Class
            <see cref="T:ComponentPro.Pdf.PdfPageBase" /> Class
        </member>
        <member name="P:ComponentPro.Pdf.PdfDocument.PageSettings">
            <summary>
            Gets or sets the document's page setting.
            </summary>
            <remarks>The changing of the settings doesn't take any effect on the already existing pages.</remarks>
        </member>
        <member name="P:ComponentPro.Pdf.PdfDocument.Sections">
            <summary>Gets the collection of the sections in the document.</summary>
            <value>A <see cref="T:ComponentPro.Pdf.PdfSectionCollection" /> object containing the list of document's sections.</value>      
        </member>
        <member name="P:ComponentPro.Pdf.PdfDocument.Template">
             <summary>
             Gets or sets a template to all pages in the document.
             </summary>        
             <value>The <see cref="T:ComponentPro.Pdf.PdfDocumentTemplate" /> specifying the default template for the document.</value>
             <seealso cref="T:ComponentPro.Pdf.Graphics.PdfTemplate" /> Class
        </member>
        <member name="E:ComponentPro.Pdf.PdfDocument.SaveProgress">
            <summary>
            Occurs when the document is being saved.
            </summary>
            <remarks>
            This event raised on saving the document. It will keep track of the save progress of the document.
            </remarks> 
            <seealso cref="T:ComponentPro.Pdf.PdfDocument.ProgressEventHandler" /> Delegate
        </member>
        <member name="T:ComponentPro.Pdf.PdfDocument.ProgressEventHandler">
            <summary>
            Delegate for the <see cref="T:ComponentPro.Pdf.PdfDocument.ProgressEventHandler" /> event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="arguments">The arguments.</param>
        </member>
        <member name="T:ComponentPro.Pdf.Fields.PdfDocumentAuthorField">
            <summary>
            Represent automatic field which contains document's author name.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Fields.PdfSingleValueField"/> Class    
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfDocumentAuthorField.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Fields.PdfDocumentAuthorField"/> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfDocumentAuthorField.#ctor(ComponentPro.Pdf.Graphics.PdfFont)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Fields.PdfDocumentAuthorField"/> class with <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/>
            </summary>
            <param name="font">A <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> object that specifies the font attributes (the family name, the size, and the style of the font) to use.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfDocumentAuthorField.#ctor(ComponentPro.Pdf.Graphics.PdfFont,ComponentPro.Pdf.Graphics.PdfBrush)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Fields.PdfDocumentAuthorField"/> class with <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> and <see cref="T:ComponentPro.Pdf.Graphics.PdfBrush"/>.
            </summary>
            <param name="font">A <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> object that specifies the font attributes (the family name, the size, and the style of the font) to use.</param>
            <param name="brush">A <see cref="T:ComponentPro.Pdf.Graphics.PdfBrush"/> object that is used to fill the string.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfDocumentAuthorField.#ctor(ComponentPro.Pdf.Graphics.PdfFont,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Fields.PdfDocumentAuthorField"/> class with <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> and rectangle bounds.
            </summary>
            <param name="font">A <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> object that specifies the font attributes (the family name, the size, and the style of the font) to use.</param>
            <param name="bounds">The bounds.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfDocumentAuthorField.GetValue(ComponentPro.Pdf.Graphics.PdfGraphics)">
            <summary>
            Gets the value of the field at the specified graphics.
            </summary>
            <param name="graphics">The graphics.</param>
            <returns></returns>
            <exclude />
        </member>
        <member name="T:ComponentPro.Pdf.PdfDocumentConformanceLevel">
            <summary>
            Specifies the Pdf document's Conformance-level.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class    
            <seealso cref="!:ComponentPro.Pdf.Graphics.Font" /> Class    
        </member>
        <member name="F:ComponentPro.Pdf.PdfDocumentConformanceLevel.None">
            <summary>
            Specifies Default / No Conformance.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfDocumentConformanceLevel.Pdf_A1B">
            <summary>
            This PDF/A ISO standard [ISO 19005-1:2005] is based on Adobe PDF version 1.4
            and This Level B conformance indicates minimal compliance to ensure that the 
            rendered visual appearance of a conforming file is preservable over the long term.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfDocumentConformanceLevel.Pdf_X1A2001">
            <summary>
            This PDF/X-1a:2001 ISO standard [ISO 15930-1] is based on Adobe PDF version 1.3
            which uses only CMYK + Spot Color and this compliance to ensure that the 
            contents will be reliably reproduced in the repress environment.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.PdfDocumentInformation">
            <summary>
            A class containing the information about the document.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.IPdfObject" /> Interface   
        </member>
        <member name="P:ComponentPro.Pdf.PdfDocumentInformation.Author">
            <summary>
            Gets or sets the author.
            </summary>
            <value>The author of the document.</value>
        </member>
        <member name="P:ComponentPro.Pdf.PdfDocumentInformation.CreationDate">
            <summary>
            Gets or sets the creation date of the PDF document
            </summary>
            <value>The <see cref="T:System.DateTime" />.</value>
        </member>
        <member name="P:ComponentPro.Pdf.PdfDocumentInformation.Creator">
            <summary>
            Gets or sets the creator.
            </summary>
            <value>The creator.</value>
        </member>
        <member name="P:ComponentPro.Pdf.PdfDocumentInformation.Keywords">
            <summary>
            Gets or sets the keywords.
            </summary>
            <value>The keywords.</value>
        </member>
        <member name="P:ComponentPro.Pdf.PdfDocumentInformation.ModificationDate">
            <summary>
            Gets or sets the modification date.
            </summary>
            <value>The <see cref="T:System.DateTime" />.</value>
        </member>
        <member name="P:ComponentPro.Pdf.PdfDocumentInformation.Producer">
            <summary>
            If the document was converted to PDF from another format,
            the name of the application (for example, Acrobat Distiller)
            that converted it to PDF.
            </summary>
            <value>The producer of the document.</value>
        </member>
        <member name="P:ComponentPro.Pdf.PdfDocumentInformation.Subject">
            <summary>
            Gets or sets the subject.
            </summary>
            <value>The subject.</value>
        </member>
        <member name="P:ComponentPro.Pdf.PdfDocumentInformation.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>The title.</value>
        </member>
        <member name="P:ComponentPro.Pdf.PdfDocumentInformation.XmpMetadata">
            <summary>
            Gets Xmp metadata of the document.
            </summary>
            <remarks>This property is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight</remarks>
            <value>Represents the document information in Xmp format.</value>
        </member>
        <member name="T:ComponentPro.Pdf.PdfDocumentPageCollection">
            <summary>
            Implements a virtual collection of all pages in the document.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.PdfDocumentPageCollection.Add">
            <summary>
            Creates a page and adds it to the last section in the document.
            </summary>
            <returns>Created <see cref="T:ComponentPro.Pdf.PdfPage" /> object.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.PdfDocumentPageCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"></see> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:ComponentPro.Pdf.PdfDocumentPageCollection.IndexOf(ComponentPro.Pdf.PdfPage)">
            <summary>
            Gets the index of the page in the document.
            </summary>
            <param name="page">The current page.</param>
            <returns>Index of the page in the document if exists, -1 otherwise.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.PdfDocumentPageCollection.Insert(System.Int32,ComponentPro.Pdf.PdfPage)">
            <summary>
            Inserts a page at the specified index to the last section in the document.
            </summary>
            <param name="index">The index of the page in the section.</param>
            <param name="page">The <see cref="T:ComponentPro.Pdf.PdfPage" />.</param>
        </member>
        <member name="M:ComponentPro.Pdf.PdfDocumentPageCollection.Insert(System.Int32,ComponentPro.Pdf.PdfPageBase)">
            <summary>
            Inserts a loaded page in the new PDF document at specified index.
            </summary>
            <param name="index">The index at which the page to be inserted</param>
            <param name="loadedPage">The page to be inserted</param>
        </member>
        <member name="P:ComponentPro.Pdf.PdfDocumentPageCollection.Count">
            <summary>
            Gets the total number of the pages.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfDocumentPageCollection.Item(System.Int32)">
            <summary>
            Gets a page by its index in the document.
            </summary>
        </member>
        <member name="E:ComponentPro.Pdf.PdfDocumentPageCollection.PageAdded">
            <summary>
            Represents the  method that executes on a PdfDocument when a new page is created.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.PdfDocumentTemplate">
            <summary>
            Encapsulates a page template for all the pages in the document.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfDocumentTemplate.Bottom">
            <summary>
            Gets or sets a bottom page template.
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.PdfPageTemplateElement" /> to draw into the PDF page</value>
        </member>
        <member name="P:ComponentPro.Pdf.PdfDocumentTemplate.EvenBottom">
            <summary>
            Gets or sets a bottom page template using on the even pages.
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.PdfPageTemplateElement" /> to draw into the PDF page</value>
        </member>
        <member name="P:ComponentPro.Pdf.PdfDocumentTemplate.EvenLeft">
            <summary>
            Gets or sets a left page template using on the even pages.
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.PdfPageTemplateElement" /> to draw into the PDF page</value>
        </member>
        <member name="P:ComponentPro.Pdf.PdfDocumentTemplate.EvenRight">
            <summary>
            Gets or sets a right page template using on the even pages.
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.PdfPageTemplateElement" /> to draw into the PDF page</value>
        </member>
        <member name="P:ComponentPro.Pdf.PdfDocumentTemplate.EvenTop">
            <summary>
            Gets or sets a top page template using on the even pages.
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.PdfPageTemplateElement" /> to draw into the PDF page</value>
        </member>
        <member name="P:ComponentPro.Pdf.PdfDocumentTemplate.Left">
            <summary>
            Gets or sets a left page template.
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.PdfPageTemplateElement" /> to draw into the PDF page</value>
        </member>
        <member name="P:ComponentPro.Pdf.PdfDocumentTemplate.OddBottom">
            <summary>
            Gets or sets a bottom page template using on the odd pages.
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.PdfPageTemplateElement" /> to draw into the PDF page</value>
        </member>
        <member name="P:ComponentPro.Pdf.PdfDocumentTemplate.OddLeft">
            <summary>
            Gets or sets a left page template using on the odd pages.
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.PdfPageTemplateElement" /> to draw into the PDF page</value>
        </member>
        <member name="P:ComponentPro.Pdf.PdfDocumentTemplate.OddRight">
            <summary>
            Gets or sets a right page template using on the odd pages.
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.PdfPageTemplateElement" /> to draw into the PDF page</value>
        </member>
        <member name="P:ComponentPro.Pdf.PdfDocumentTemplate.OddTop">
            <summary>
            Gets or sets a top page template using on the odd pages.
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.PdfPageTemplateElement" /> to draw into the PDF page</value>
        </member>
        <member name="P:ComponentPro.Pdf.PdfDocumentTemplate.Right">
            <summary>
            Gets or sets a right page template.
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.PdfPageTemplateElement" /> to draw into the PDF page</value>
        </member>
        <member name="P:ComponentPro.Pdf.PdfDocumentTemplate.Stamps">
            <summary>
            Gets a collection of stamp elements.
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.PdfStampCollection" />,a collection of stamps that are applied to the page templates.</value>
        </member>
        <member name="P:ComponentPro.Pdf.PdfDocumentTemplate.Top">
            <summary>
            Gets or sets a top page template.
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.PdfPageTemplateElement" /> to draw into the PDF page</value>
        </member>
        <member name="T:ComponentPro.Pdf.PdfEdge">
            <summary>
            Represents the edges of the page.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfEdge.Top">
            <summary>
            Indicates the top edge of the page
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfEdge.Bottom">
            <summary>
            Indicates the bottom edge of the page
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfEdge.Left">
            <summary>
            Indicates the left edge of the page
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfEdge.Right">
            <summary>
            Indicates the right edge of the page.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.PdfEdges">
            <summary>
            The class used represents the edges of the grid cells 
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.PdfEdges.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.PdfEdges" /> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.PdfEdges.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.PdfEdges" /> class with left,right,top and bottom values.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <param name="top">The top.</param>
            <param name="bottom">The bottom.</param>
        </member>
        <member name="P:ComponentPro.Pdf.PdfEdges.All">
            <summary>
            Sets value to all sides left,right,top and bottom
            </summary>
            <value>The integer value to all sides</value>
        </member>
        <member name="P:ComponentPro.Pdf.PdfEdges.Bottom">
            <summary>
            Gets or sets the bottom value of the edge.
            </summary>
            <value>The bottom value of the edge.</value>
        </member>
        <member name="P:ComponentPro.Pdf.PdfEdges.Left">
            <summary>
            Gets or sets the left value of the edge
            </summary>
            <value>The left value of the edge.</value>
        </member>
        <member name="P:ComponentPro.Pdf.PdfEdges.Right">
            <summary>
            Gets or sets the right value of the edge.
            </summary>
            <value>The right value of the edge.</value>
        </member>
        <member name="P:ComponentPro.Pdf.PdfEdges.Top">
            <summary>
            Gets or sets the top value of the edge
            </summary>
            <value>The top value of the edge.</value>
        </member>
        <member name="T:ComponentPro.Pdf.PdfFileStructure">
            <summary>
            This class represents a set of the properties that define the internal structure of PDF file.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.PdfFileStructure.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.PdfFileStructure" /> class.
            </summary>    
        </member>
        <member name="P:ComponentPro.Pdf.PdfFileStructure.CrossReferenceType">
            <summary>
            Gets or sets the type of PDF cross-reference.
            </summary>
            <remarks>Please see the description of <see cref="T:ComponentPro.Pdf.PdfCrossReferenceType" /> for more details.</remarks>
        </member>
        <member name="P:ComponentPro.Pdf.PdfFileStructure.IncrementalUpdate">
            <summary>
            Gets or sets a value indicating whether [incremental update].
            </summary>
            <value><c>true</c> if [incremental update]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ComponentPro.Pdf.PdfFileStructure.TaggedPdf">
            <summary>
            Gets the value indicating whether the PDF document is tagged one or not.
            </summary>
            <value>If true PDF document is tagged, otherwise false.</value>
        </member>
        <member name="P:ComponentPro.Pdf.PdfFileStructure.Version">
            <summary>
            Gets or sets the version of the PDF document.
            </summary>
            <value>The document version.</value>
        </member>
        <member name="T:ComponentPro.Pdf.PdfFormFieldsTabOrder">
            <summary>
            Specifies tab order types for form fields
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfFormFieldsTabOrder.None">
            <summary>
            Form fields are visited default order
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfFormFieldsTabOrder.Row">
            <summary>
            Form fields are visited rows running horizontally across the page
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfFormFieldsTabOrder.Column">
            <summary>
            Form fields are visited column running vertically up and down the page
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfFormFieldsTabOrder.Structure">
            <summary>
            Form fields are visited based on the structure tree 
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfFormFieldsTabOrder.Manual">
            <summary>
            Form fields are visited manual order
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.PdfGridBuiltinStyle">
            <summary>
            Specifies PdfGrid built-in table styles.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.PdfImportedPage">
            <summary>
            Represents a page loaded from a PDF document.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.PdfPageBase">
            <summary>
            The abstract base class for all pages, Provides methods and properties to create PDF pages and its elements
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.PdfPageBase.CreateTemplate">
            <summary>
            Creates a template from page content and all annotation appearances.
            </summary>
            <returns>The created PdfTemplate.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.PdfPageBase.ExtractImages">
            <summary>
            Extract the images from the PDF
            </summary>
            <returns>returns the List of images</returns>
        </member>
        <member name="M:ComponentPro.Pdf.PdfPageBase.ExtractText">
            <summary>
            Extracts text from the PDF Page.
            </summary>
            <returns>The Extracted Text.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.PdfPageBase.ExtractText(System.Boolean)">
            <summary>
            Extracts text from the PDF Page based on its layout
            </summary>
            <param name="IsLayout">Extracts text based on the Layout of PDF Document if the parameter is set to true, else Extracts text normally. </param>
            <returns>The Extracted Text.</returns>
            <remarks> Extracting the text based on the layout may take additional processing time when compared to the normal extraction.</remarks>
        </member>
        <member name="M:ComponentPro.Pdf.PdfPageBase.ReplaceImage(System.Int32,ComponentPro.Pdf.Graphics.PdfImage)">
            <summary>
            Replace the Image at index's Position.
            </summary>
            <param name="index">index of an image</param>
            <param name="image">The New Replace image</param>
        </member>
        <member name="P:ComponentPro.Pdf.PdfPageBase.Annotations">
            <summary>
            Gets the collection of the page's annotations (Read only).
            </summary>
            <value>
                        The <see cref="T:ComponentPro.Pdf.Annotations.PdfImportedAnnotationCollection"/> that represents the page's annotations
                        </value>
        </member>
        <member name="P:ComponentPro.Pdf.PdfPageBase.DefaultLayer">
            <summary>
            Gets the default layer of the page (Read only).
            </summary>
            <value>
            The <see cref="T:ComponentPro.Pdf.PdfPageLayer" /> of the Page
            </value>
        </member>
        <member name="P:ComponentPro.Pdf.PdfPageBase.DefaultLayerIndex">
            <summary>
            Gets or sets index of the default layer.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfPageBase.FormFieldsTabOrder">
            <summary>
            Gets or sets the tab order type for form fields
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfPageBase.Graphics">
            <summary>
            Gets the graphics of the <see cref="P:ComponentPro.Pdf.PdfPageBase.DefaultLayer" />.
            </summary>
            <value>
            The <see cref="T:ComponentPro.Pdf.Graphics.PdfGraphics" /> that represents a graphics of the page.
            </value>
        </member>
        <member name="P:ComponentPro.Pdf.PdfPageBase.ImagesInfo">
            <summary>
            Gets the information about the extracted image from the PDF page
            </summary>
            <remarks>This property is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
        </member>
        <member name="P:ComponentPro.Pdf.PdfPageBase.IsColored">
            <summary>
            Return true, when the page contains colored content.  
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfPageBase.Layers">
            <summary>
            Gets the collection of the page's layers (Read only).
            </summary>
            <value>
            The <see cref="T:ComponentPro.Pdf.PdfPageLayerCollection" /> that represents the page's layers
            </value>
        </member>
        <member name="P:ComponentPro.Pdf.PdfPageBase.Rotation">
            <summary>
            Gets the PDF page rotation (Read only).
            </summary>
            <returns>
            The PdfPageRotateAngle that represents the page rotation
            </returns>
        </member>
        <member name="P:ComponentPro.Pdf.PdfPageBase.Size">
            <summary>
            Gets the size of the page (Read only).
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.PdfImportedPage.OnBeginSave(System.EventArgs)">
            <summary>
            Raises <see cref="E:ComponentPro.Pdf.PdfImportedPage.BeginSave" /> event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="P:ComponentPro.Pdf.PdfImportedPage.Annotations">
            <summary>
            Gets or Sets the collection of the page's annotations.
            </summary>
            <value>
                        The <see cref="T:ComponentPro.Pdf.Annotations.PdfImportedAnnotationCollection"/> that represents the page's annotations
                        </value>
        </member>
        <member name="P:ComponentPro.Pdf.PdfImportedPage.ArtBox">
            <summary>
            Gets page region containing meaningful content (Read only).
            </summary>
            <value>
            The RectangleF that represents the art box of the page
            </value>
        </member>
        <member name="P:ComponentPro.Pdf.PdfImportedPage.BleedBox">
            <summary>
            Gets page region after clipping (Read only).
            </summary>
            <value> 
            The RectangleF that represents the bleed box of a page
            </value>
        </member>
        <member name="P:ComponentPro.Pdf.PdfImportedPage.CropBox">
            <summary>
            Gets the visible region of the page (Read only).
            </summary>
             /// <value>
            The RectangleF that represents the crop box of the page
            </value>
        </member>
        <member name="P:ComponentPro.Pdf.PdfImportedPage.Document">
            <summary>
            Gets the base document (Read only).
            </summary>
            <value>
            The <see cref="T:ComponentPro.Pdf.PdfDocumentBase" />, which is base class of PdfImportedDocument
            </value>
        </member>
        <member name="P:ComponentPro.Pdf.PdfImportedPage.Size">
            <summary>
            Gets the size of the page (Read only).
            </summary>
            /// <value>
            The SizeF that represents the size of the page
            </value>
        </member>
        <member name="P:ComponentPro.Pdf.PdfImportedPage.TrimBox">
            <summary>
            Returns page region after trimming (Read only).
            </summary>
            <value> 
            The RectangleF that represents the trim box of a page
            </value>
        </member>
        <member name="E:ComponentPro.Pdf.PdfImportedPage.BeginSave">
            <summary>
            Raises before the page saves.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.PdfImportedPageLabelCollection">
            <summary>
            The class provides methods and properties to handle the collections of <see cref="T:ComponentPro.Pdf.PdfPageLabel" />.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.PdfImportedPageLabelCollection.Add(ComponentPro.Pdf.PdfPageLabel)">
            <summary>
            Add the <see cref="T:ComponentPro.Pdf.PdfPageLabel" /> to the collection
            </summary>
            <param name="pageLabel"></param>
        </member>
        <member name="P:ComponentPro.Pdf.PdfImportedPageLabelCollection.Count">
            <summary>
            Gets the number of <see cref="T:ComponentPro.Pdf.PdfPageLabel" /> from collection (Read only).
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:ComponentPro.Pdf.PdfImportedPageLabelCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ComponentPro.Pdf.PdfPageLabel" /> at the specified index (Read only).
            </summary>
            <value></value>
        </member>
        <member name="T:ComponentPro.Pdf.PdfSimpleTableBuiltinStyle">
            <summary>
            Specified PdfSimpleTable built-in table styles
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.PdfNumberStyle">
            <summary>
            Specifies numbering style of page labels.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfNumberStyle.None">
            <summary>
            No numbering at all.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfNumberStyle.Numeric">
            <summary>
            Decimal arabic numerals.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfNumberStyle.LowerLatin">
            <summary>
            Lowercase letters a-z.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfNumberStyle.LowerRoman">
            <summary>
            Lowercase roman numerals.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfNumberStyle.UpperLatin">
            <summary>
            Uppercase letters A-Z.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfNumberStyle.UpperRoman">
            <summary>
            Uppercase roman numerals.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.PdfPaddings">
            <summary>
            The class used represents the cell padding of the PDF grid
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.PdfPaddings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.PdfPaddings" /> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.PdfPaddings.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.PdfPaddings" /> class with spacing of all sides Left,Right,Top,Bottom
            </summary>
            <param name="left">The left space.</param>
            <param name="right">The right space.</param>
            <param name="top">The top space.</param>
            <param name="bottom">The bottom space.</param>
        </member>
        <member name="P:ComponentPro.Pdf.PdfPaddings.All">
            <summary>
            Sets space value to all sides of a cell Left,Right,Top,Bottom.
            </summary>
            <value>The space value of all sides Left,Right,Top,Bottom.</value>
        </member>
        <member name="P:ComponentPro.Pdf.PdfPaddings.Bottom">
            <summary>
            Gets or sets the bottom space of padding.
            </summary>
            <value>The bottom space.</value>
        </member>
        <member name="P:ComponentPro.Pdf.PdfPaddings.Left">
            <summary>
            Gets or sets the left space of padding.
            </summary>
            <value>The left space.</value>
        </member>
        <member name="P:ComponentPro.Pdf.PdfPaddings.Right">
            <summary>
            Gets or sets the right space of padding.
            </summary>
            <value>The right space.</value>
        </member>
        <member name="P:ComponentPro.Pdf.PdfPaddings.Top">
            <summary>
            Gets or sets the top space of padding.
            </summary>
            <value>The top space.</value>
        </member>
        <member name="T:ComponentPro.Pdf.PdfPage">
            <summary>Provides methods and properties to create PDF pages and its elements, <see cref="T:ComponentPro.Pdf.PdfPage">PdfPage</see> class inherited from the <see cref="T:ComponentPro.Pdf.PdfPageBase">PdfPageBase</see> class</summary>
        </member>
        <member name="M:ComponentPro.Pdf.PdfPage.#ctor">
            <summary>Initializes a new instance of the <see cref="T:ComponentPro.Pdf.PdfPage">PdfPage</see> class.</summary>
        </member>
        <member name="M:ComponentPro.Pdf.PdfPage.GetClientSize">
            <summary>
            Get the PDF page size reduced by page margins and page template dimensions.
            </summary>
            <remarks>
            It's the actual size of the page where some output can be performed.
            </remarks>
            <returns>
            <para>Type: <see cref="T:System.Drawing.SizeF">System.Drawing.SizeF</see></para>
            <para>The actual page size reduced by page margins and page template dimensions</para>
            </returns>
        </member>
        <member name="M:ComponentPro.Pdf.PdfPage.OnBeginSave(System.EventArgs)">
            <summary>
            Raises <see cref="E:ComponentPro.Pdf.PdfPage.BeginSave" /> event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="P:ComponentPro.Pdf.PdfPage.Annotations">
            <summary>
             Gets a collection of the annotations of the page- Read only
            </summary>
            <value>
            A PdfAnnotationCollection that represents the annotations of the page
            </value>
        </member>
        <member name="P:ComponentPro.Pdf.PdfPage.Section">
            <summary>
            Gets the section of a page- Read only
            </summary>
            <value>
            The PdfSection.
            </value>
            <exception cref="T:ComponentPro.Pdf.PdfException">Page must be added to some section before using.</exception>
        </member>
        <member name="P:ComponentPro.Pdf.PdfPage.Size">
            <summary>
            Gets size of the PDF page- Read only
            </summary>
            <value>
            A SizeF that represents the size of the page
            </value>
        </member>
        <member name="E:ComponentPro.Pdf.PdfPage.BeginSave">
            <summary>
            Raises before the page saves.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Fields.PdfPageCountField">
            <summary>
            Represents total PDF document page count automatic field.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Fields.PdfSingleValueField"/> Class    
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfPageCountField.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Fields.PdfPageCountField"/> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfPageCountField.#ctor(ComponentPro.Pdf.Graphics.PdfFont)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Fields.PdfPageCountField"/> class with <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/>.
            </summary>
            <param name="font">A <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> object that specifies the font attributes (the family name, the size, and the style of the font) to use.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfPageCountField.#ctor(ComponentPro.Pdf.Graphics.PdfFont,ComponentPro.Pdf.Graphics.PdfBrush)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Fields.PdfPageCountField"/> class with <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> and <see cref="T:ComponentPro.Pdf.Graphics.PdfBrush"/>.
            </summary>
            <param name="font">A <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> object that specifies the font attributes (the family name, the size, and the style of the font) to use.</param>
            <param name="brush">A <see cref="T:ComponentPro.Pdf.Graphics.PdfBrush"/> object that is used to fill the string.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfPageCountField.#ctor(ComponentPro.Pdf.Graphics.PdfFont,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Fields.PdfPageCountField"/> class with <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> and rectangle bounds
            </summary>
            <param name="font">A <see cref="T:ComponentPro.Pdf.Graphics.PdfFont"/> object that specifies the font attributes (the family name, the size, and the style of the font) to use.</param>
            <param name="bounds">The rectangle bounds of the field.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfPageCountField.GetValue(ComponentPro.Pdf.Graphics.PdfGraphics)">
            <summary>
            Gets the value of the field at the specified graphics.
            </summary>
            <param name="graphics">The graphics.</param>
            <returns>result</returns>
        </member>
        <member name="P:ComponentPro.Pdf.Fields.PdfPageCountField.NumberStyle">
            <summary>
            Gets or sets the number style.
            </summary>
            <value>The number style.</value>
        </member>
        <member name="T:ComponentPro.Pdf.PdfPageDisplayMode">
            <summary>
            Represents mode of document displaying.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfPageDisplayMode.DisplayNone">
            <summary>
            Default value. Neither document outline nor thumbnail images visible.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfPageDisplayMode.DisplayOutlines">
            <summary>
            Document outline visible.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfPageDisplayMode.DisplayThumbs">
            <summary>
            Thumbnail images visible.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfPageDisplayMode.DisplayFullScreen">
            <summary>
            Full-screen mode, with no menu bar, window
            controls, or any other window visible.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfPageDisplayMode.DisplayOC">
            <summary>
            Optional content group panel visible.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfPageDisplayMode.DisplayAttachments">
            <summary>
            Attachments are visible.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.PdfPageLabel">
            <summary>
            The <see cref="T:ComponentPro.Pdf.PdfPageLabel" /> used to identify each page visually on the screen or in print.
            </summary>
            <remarks>Page labels and page indices need not coincide: the indices are fixed, 
            running consecutively through the document starting from 0 for the first page,
            but the labels can be specified in any way that is appropriate for the particular document.</remarks>
        </member>
        <member name="M:ComponentPro.Pdf.PdfPageLabel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:PdfPageLabel" /> class.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfPageLabel.NumberStyle">
            <summary>
            Gets or sets the numbering style to be used for the numeric portion of each page label.
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.PdfNumberStyle" /> specifies numbering style of page labels.</value>
        </member>
        <member name="P:ComponentPro.Pdf.PdfPageLabel.Prefix">
            <summary>
            Gets or sets the label prefix for page labels.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfPageLabel.StartNumber">
            <summary>
            Gets or sets the value of the numeric portion for the first page label in the range
            </summary>
            <remarks>The number must be greater than or equal to 1</remarks>
        </member>
        <member name="T:ComponentPro.Pdf.PdfPageLayer">
            <summary>
            The <see cref="T:ComponentPro.Pdf.PdfPageLayer" /> used to create layers in PDF document.
            Layers refers to sections of content in a PDF document that can be selectively viewed or hidden by document authors or consumers
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.PdfPageLayer.#ctor(ComponentPro.Pdf.PdfPageBase)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.PdfPageLayer" /> class with specified PDF page.
            </summary>
            <param name="page">The <see cref="T:ComponentPro.Pdf.PdfPageBase" />,parent page of the layer.</param>
        </member>
        <member name="M:ComponentPro.Pdf.PdfPageLayer.Add">
            <summary>
            Adds a new PDF Page layer.
            </summary>
            <returns>The <see cref="T:ComponentPro.Pdf.PdfPageLayer" /></returns>
        </member>
        <member name="P:ComponentPro.Pdf.PdfPageLayer.Graphics">
            <summary>
            Gets Graphics context of the layer, used to draw various graphical content on layer.
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.Graphics.PdfGraphics" /> used to draw various graphical content</value>
        </member>
        <member name="P:ComponentPro.Pdf.PdfPageLayer.Layers">
            <summary>
            Gets the collection of <see cref="T:ComponentPro.Pdf.PdfPageLayer" />, this collection handle by the class <see cref="T:ComponentPro.Pdf.PdfPageLayerCollection" />
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.PdfPageLayerCollection" /> used to handle collection of <see cref="T:ComponentPro.Pdf.PdfPageLayer" /></value>
        </member>
        <member name="P:ComponentPro.Pdf.PdfPageLayer.Name">
            <summary>
            Gets or sets the name of the layer
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfPageLayer.Page">
            <summary>
            Gets parent page of the layer.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfPageLayer.PrintState">
            <summary>
            Gets and sets printing state of the PDF page layer
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.PdfPageLayerCollection">
            <summary>
            The class provides methods and properties to handle the collections of <see cref="T:ComponentPro.Pdf.PdfPageLayer" />
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.PdfPageLayerCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:PdfPageLayerCollection" /> class
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.PdfPageLayerCollection.#ctor(ComponentPro.Pdf.PdfPageBase)">
            <summary>
            Initializes a new instance of the <see cref="T:PdfPageLayerCollection" /> class with PDF page
            </summary>
            <param name="page">Parent page for the layers in the collection.</param>
        </member>
        <member name="M:ComponentPro.Pdf.PdfPageLayerCollection.Add">
            <summary>
            Creates a new <see cref="T:ComponentPro.Pdf.PdfPageLayer" /> and adds it to the end of the collection.
            </summary>
            <returns>Created <see cref="T:ComponentPro.Pdf.PdfPageLayer" /></returns>
        </member>
        <member name="M:ComponentPro.Pdf.PdfPageLayerCollection.Add(System.String)">
            <summary>
            Creates a new <see cref="T:ComponentPro.Pdf.PdfPageLayer" /> with name and adds it to the end of the collection.
            </summary>
            <param name="LayerName">Layer Name.</param>
            <returns>Created <see cref="T:ComponentPro.Pdf.PdfPageLayer" />.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.PdfPageLayerCollection.Add(ComponentPro.Pdf.PdfPageLayer)">
            <summary>
            Adds <see cref="T:ComponentPro.Pdf.PdfPageLayer" /> to the collection.
            </summary>
            <param name="layer">The <see cref="T:ComponentPro.Pdf.PdfPageLayer" /> object.</param>
            <remarks>The layers belonging to the same page can be added to the collection only.</remarks>
        </member>
        <member name="M:ComponentPro.Pdf.PdfPageLayerCollection.Add(System.String,System.Boolean)">
            <summary>
            Creates a new <see cref="T:ComponentPro.Pdf.PdfPageLayer" /> with name and Boolean flag to set the visibility of layer,
            and adds it to the end of the collection.
            </summary>
            <param name="LayerName">Layer Name.</param>
            <param name="Visible">Layer Visibility.</param>
            <returns>Created <see cref="T:ComponentPro.Pdf.PdfPageLayer" />.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.PdfPageLayerCollection.Clear">
            <summary>
            Clears layers from the <see cref="T:ComponentPro.Pdf.PdfPageLayerCollection" />.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.PdfPageLayerCollection.Contains(ComponentPro.Pdf.PdfPageLayer)">
            <summary>
            Checks whether collection contains <see cref="T:ComponentPro.Pdf.PdfPageLayer" />.
            </summary>
            <param name="layer"><see cref="T:ComponentPro.Pdf.PdfPageLayer" /> object.</param>
            <returns>True - if collection contains layer, False otherwise.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.PdfPageLayerCollection.IndexOf(ComponentPro.Pdf.PdfPageLayer)">
            <summary>
            Returns index of the <see cref="T:ComponentPro.Pdf.PdfPageLayer" /> in the collection if exists, -1 otherwise.
            </summary>
            <param name="layer"><see cref="T:ComponentPro.Pdf.PdfPageLayer" /> object.</param>
            <returns>Returns index of the layer in the collection if exists, -1 otherwise.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.PdfPageLayerCollection.Insert(System.Int32,ComponentPro.Pdf.PdfPageLayer)">
            <summary>
            Inserts <see cref="T:ComponentPro.Pdf.PdfPageLayer" /> into the collection at specified index
            </summary>
            <param name="index">Index of the layer.</param>
            <param name="layer"><see cref="T:ComponentPro.Pdf.PdfPageLayer" /> object.</param>
            <remarks>The layers belonging to the same page can be added to the collection only.</remarks>
        </member>
        <member name="M:ComponentPro.Pdf.PdfPageLayerCollection.Remove(ComponentPro.Pdf.PdfPageLayer)">
            <summary>
            Removes layer from the collection.
            </summary>
            <param name="layer"><see cref="T:ComponentPro.Pdf.PdfPageLayer" /> object.</param>
        </member>
        <member name="M:ComponentPro.Pdf.PdfPageLayerCollection.Remove(System.String)">
            <summary>
            Removes <see cref="T:ComponentPro.Pdf.PdfPageLayer" /> from the collection by its name.
            </summary>
            <param name="name">Name of the layer.</param>
        </member>
        <member name="M:ComponentPro.Pdf.PdfPageLayerCollection.RemoveAt(System.Int32)">
            <summary>
            Removes layer by its index from collections
            </summary>
            <param name="index">Index of the layer.</param>
        </member>
        <member name="P:ComponentPro.Pdf.PdfPageLayerCollection.Item(System.Int32)">
            <summary>
            Gets or sets <see cref="T:ComponentPro.Pdf.PdfPageLayer" /> by its index from <see cref="T:ComponentPro.Pdf.PdfPageLayerCollection" />
            </summary>
            <remarks>The layers belonging to the same page can be added to the collection only.</remarks>
        </member>
        <member name="T:ComponentPro.Pdf.PdfPageLayout">
            <summary>
            A name object specifying the page layout to be used when the
            document is opened.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfPageLayout.SinglePage">
            <summary>
            Default Value. Display one page at a time.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfPageLayout.OneColumn">
            <summary>
            Display the pages in one column.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfPageLayout.TwoColumnLeft">
            <summary>
            Display the pages in two columns, with odd numbered
            pages on the left.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfPageLayout.TwoColumnRight">
            <summary>
            Display the pages in two columns, with odd numbered
            pages on the right.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfPageLayout.TwoPageLeft">
            <summary>
            Display the pages two at a time, with odd-numbered pages on the left
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfPageLayout.TwoPageRight">
            <summary>
            Display the pages two at a time, with odd-numbered pages on the right
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.PdfPageOrientation">
            <summary>
            Enumerator that represents the PDF page orientations.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfPageOrientation.Portrait">
            <summary>
            Portrait orientation.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfPageOrientation.Landscape">
            <summary>
            Landscape orientation.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.PdfPageResources">
            <summary>
            The class provides methods and properties to access the PDF page resources.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.PdfPageResources.#ctor">
            <summary>
            Initializes the new instance of the class <see cref="T:ComponentPro.Pdf.PdfPageResources" />
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.PdfPageResources.Add(System.String,System.Object)">
            <summary>
            Adds the resource with the specified name.
            </summary>
            <param name="resourceName">Name of the resource</param>
            <param name="resource">Resource to add</param>
        </member>
        <member name="M:ComponentPro.Pdf.PdfPageResources.ContainsKey(System.String)">
            <summary>
            Returns if the key already exists.
            </summary>
            <returns>if key present true,else false</returns>
        </member>
        <member name="M:ComponentPro.Pdf.PdfPageResources.isSameFont">
            <summary>
            Returns if the FontCollection has same font face.
            </summary>
            <returns>if font present true, else false</returns>
        </member>
        <member name="P:ComponentPro.Pdf.PdfPageResources.Item(System.String)">
            <summary>
            Gets or sets the value associated with the key.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfPageResources.Resources">
            <summary>
            Gets the PDF page resources.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.PdfPageRotateAngle">
            <summary>
            The number of degrees by which the page should be rotated clockwise when displayed or printed.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfPageRotateAngle.RotateAngle0">
            <summary>
            The page is rotated as 0 angle.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfPageRotateAngle.RotateAngle90">
            <summary>
            The page is rotated as 90 angle.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfPageRotateAngle.RotateAngle180">
            <summary>
            The page is rotated as 180 angle.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfPageRotateAngle.RotateAngle270">
            <summary>
            The page is rotated as 270 angle.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.PdfPageSettings">
            <summary>
            The class provides various setting related with PDF pages
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.PdfPageSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:PdfPageSettings" /> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.PdfPageSettings.#ctor(System.Drawing.SizeF)">
            <summary>
            Initializes a new instance of the <see cref="T:PdfPageSettings" /> class with size.
            </summary>
            <param name="size">The size.</param>
        </member>
        <member name="M:ComponentPro.Pdf.PdfPageSettings.#ctor(ComponentPro.Pdf.PdfPageOrientation)">
            <summary>
            Initializes a new instance of the <see cref="T:PdfPageSettings" /> class with page orientation.
            </summary>
            <param name="pageOrientation">The <see cref="T:ComponentPro.Pdf.PdfPageOrientation" />.</param>
        </member>
        <member name="M:ComponentPro.Pdf.PdfPageSettings.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:PdfPageSettings" /> class with margins.
            </summary>
            <param name="margins">The margins.</param>
        </member>
        <member name="M:ComponentPro.Pdf.PdfPageSettings.#ctor(System.Drawing.SizeF,ComponentPro.Pdf.PdfPageOrientation)">
            <summary>
            Initializes a new instance of the <see cref="T:PdfPageSettings" /> class with size and page orientation.
            </summary>
            <param name="size">The size.</param>
            <param name="pageOrientation">The page orientation.</param>
        </member>
        <member name="M:ComponentPro.Pdf.PdfPageSettings.#ctor(System.Drawing.SizeF,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:PdfPageSettings" /> class with size and margins
            </summary>
            <param name="size">The size of the page.</param>
            <param name="margins">The margins.</param>
        </member>
        <member name="M:ComponentPro.Pdf.PdfPageSettings.#ctor(System.Drawing.SizeF,ComponentPro.Pdf.PdfPageOrientation,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:PdfPageSettings" /> class with size,page orientation,margins
            </summary>
            <param name="size">The size.</param>
            <param name="pageOrientation">The page orientation.</param>
            <param name="margins">The margins.</param>
        </member>
        <member name="M:ComponentPro.Pdf.PdfPageSettings.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:PdfPageSettings" /> class with left margin,top margin,right margin.
            </summary>
            <param name="leftMargin">The left margin.</param>
            <param name="topMargin">The top margin.</param>
            <param name="rightMargin">The right margin.</param>
            <param name="bottomMargin">The bottom margin.</param>
        </member>
        <member name="M:ComponentPro.Pdf.PdfPageSettings.#ctor(System.Drawing.SizeF,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:PdfPageSettings" /> class with size left,top,right,bottom margins.
            </summary>
            <param name="size">The size.</param>
            <param name="leftMargin">The left margin.</param>
            <param name="topMargin">The top margin.</param>
            <param name="rightMargin">The right margin.</param>
            <param name="bottomMargin">The bottom margin.</param>
        </member>
        <member name="M:ComponentPro.Pdf.PdfPageSettings.#ctor(System.Drawing.SizeF,ComponentPro.Pdf.PdfPageOrientation,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:PdfPageSettings" /> class with size page orientation,left,top,right,bottom margins.
            </summary>
            <param name="size">The size.</param>
            <param name="pageOrientation">The page orientation.</param>
            <param name="leftMargin">The left margin.</param>
            <param name="topMargin">The top margin.</param>
            <param name="rightMargin">The right margin.</param>
            <param name="bottomMargin">The bottom margin.</param>
        </member>
        <member name="M:ComponentPro.Pdf.PdfPageSettings.Clone">
            <summary>
            Creates a clone of the object.
            </summary>
            <returns>Cloned object.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.PdfPageSettings.SetMargins(System.Single)">
            <summary>
            Sets the margins to the page.
            </summary>
            <param name="margins">The margins.</param>
        </member>
        <member name="M:ComponentPro.Pdf.PdfPageSettings.SetMargins(System.Single,System.Single)">
            <summary>
            Sets the left right and top bottom margins.
            </summary>
            <param name="leftRight">The left right margin.</param>
            <param name="topBottom">The top bottom margin.</param>
        </member>
        <member name="M:ComponentPro.Pdf.PdfPageSettings.SetMargins(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Sets the left,top,right,bottom margins.
            </summary>
            <param name="left">The left margin.</param>
            <param name="top">The top margin.</param>
            <param name="right">The right margin.</param>
            <param name="bottom">The bottom margin.</param>
        </member>
        <member name="P:ComponentPro.Pdf.PdfPageSettings.Height">
            <summary>
            Gets or sets the height of the page.
            </summary>
            <remarks>Default value: 842 pixels</remarks>
        </member>
        <member name="P:ComponentPro.Pdf.PdfPageSettings.Margins">
            <summary>
            Gets or sets the margins of the page.
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.Graphics.PdfMargins" />, provides margins to the PDF page</value>
        </member>
        <member name="P:ComponentPro.Pdf.PdfPageSettings.Orientation">
            <summary>
            Gets or sets the page orientation.
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.PdfPageOrientation" />, provides the orientation of the PDF page</value>
        </member>
        <member name="P:ComponentPro.Pdf.PdfPageSettings.Rotate">
            <summary>
            Gets or sets the number of degrees by which the page should be rotated clockwise when displayed or printed.
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.PdfPageRotateAngle" />,provides number of degrees by which the page should be rotated clockwise when displayed or printed </value>
            <remarks>Default value: RotateAngle0 </remarks>
        </member>
        <member name="P:ComponentPro.Pdf.PdfPageSettings.Size">
            <summary>
            Gets or sets the size of the page.
            </summary>
            <remarks>Default value: 595 * 842 pixels</remarks>
        </member>
        <member name="P:ComponentPro.Pdf.PdfPageSettings.Transition">
            <summary>
            Gets or sets the transition, it determines how to display the page in the presentation mode
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.PdfPageTransition" /> determines how to display the page in the presentation mode.</value>
        </member>
        <member name="P:ComponentPro.Pdf.PdfPageSettings.Width">
            <summary>
            Gets or sets the width of the page.
            </summary>
            <remarks>Default value: 595 pixels</remarks>
        </member>
        <member name="T:ComponentPro.Pdf.PdfPageSize">
            <summary>
            Represents information about various predefined page sizes.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfPageSize.A0">
             <property name="flag" value="Finished" />
            
             <summary>
             A0 format.
             </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfPageSize.A1">
             <property name="flag" value="Finished" />
            
             <summary>
             A1 format.
             </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfPageSize.A10">
             <property name="flag" value="Finished" />
            
             <summary>
             A10 format.
             </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfPageSize.A2">
             <property name="flag" value="Finished" />
            
             <summary>
             A2 format.
             </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfPageSize.A3">
             <property name="flag" value="Finished" />
            
             <summary>
             A3 format.
             </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfPageSize.A4">
             <property name="flag" value="Finished" />
            
             <summary>
             A4 format.
             </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfPageSize.A5">
             <property name="flag" value="Finished" />
            
             <summary>
             A5 format.
             </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfPageSize.A6">
             <property name="flag" value="Finished" />
            
             <summary>
             A6 format.
             </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfPageSize.A7">
             <property name="flag" value="Finished" />
            
             <summary>
             A7 format.
             </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfPageSize.A8">
             <property name="flag" value="Finished" />
            
             <summary>
             A8 format.
             </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfPageSize.A9">
             <property name="flag" value="Finished" />
            
             <summary>
             A9 format.
             </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfPageSize.ArchA">
             <property name="flag" value="Finished" />
            
             <summary>
             ArchA format.
             </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfPageSize.ArchB">
             <property name="flag" value="Finished" />
            
             <summary>
             ArchB format.
             </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfPageSize.ArchC">
             <property name="flag" value="Finished" />
            
             <summary>
             ArchC format.
             </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfPageSize.ArchD">
             <property name="flag" value="Finished" />
            
             <summary>
             ArchD format.
             </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfPageSize.ArchE">
             <property name="flag" value="Finished" />
            
             <summary>
             ArchE format.
             </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfPageSize.B0">
             <property name="flag" value="Finished" />
            
             <summary>
             B0 format.
             </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfPageSize.B1">
             <property name="flag" value="Finished" />
            
             <summary>
             B1 format.
             </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfPageSize.B2">
             <property name="flag" value="Finished" />
            
             <summary>
             B2 format.
             </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfPageSize.B3">
             <property name="flag" value="Finished" />
            
             <summary>
             B3 format.
             </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfPageSize.B4">
             <property name="flag" value="Finished" />
            
             <summary>
             B4 format.
             </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfPageSize.B5">
             <property name="flag" value="Finished" />
            
             <summary>
             B5 format.
             </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfPageSize.Flsa">
             <property name="flag" value="Finished" />
            
             <summary>
             The American Foolscap format.
             </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfPageSize.HalfLetter">
             <property name="flag" value="Finished" />
            
             <summary>
             HalfLetter format.
             </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfPageSize.Ledger">
             <property name="flag" value="Finished" />
            
             <summary>
             Ledger format.
             </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfPageSize.Legal">
             <property name="flag" value="Finished" />
            
             <summary>
             Legal format.
             </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfPageSize.Letter">
             <property name="flag" value="Finished" />
            
             <summary>
             Letter format.
             </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfPageSize.Letter11x17">
             <property name="flag" value="Finished" />
            
             <summary>
             11x17 format.
             </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfPageSize.Note">
             <property name="flag" value="Finished" />
            
             <summary>
             Note format.
             </summary>
        </member>
        <member name="T:ComponentPro.Pdf.PdfPageTemplateElement">
            <summary>
            Describes a page template object that can be used as header/footer, watermark or stamp.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.PdfPageTemplateElement.#ctor(System.Drawing.RectangleF)">
            <summary>
            Creates a new page template.
            </summary>
            <param name="bounds">Bounds of the template.</param>
        </member>
        <member name="M:ComponentPro.Pdf.PdfPageTemplateElement.#ctor(System.Drawing.SizeF)">
            <summary>
            Creates new page template object.
            </summary>
            <param name="size">Size of the template.</param>
        </member>
        <member name="M:ComponentPro.Pdf.PdfPageTemplateElement.#ctor(System.Drawing.RectangleF,ComponentPro.Pdf.PdfPage)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.PdfPageTemplateElement" /> class.
            </summary>
            <param name="bounds">The bounds.</param>
            <param name="page">The page.</param>
        </member>
        <member name="M:ComponentPro.Pdf.PdfPageTemplateElement.#ctor(System.Drawing.PointF,System.Drawing.SizeF)">
            <summary>
            Creates a new page template.
            </summary>
            <param name="location">Location of the template.</param>
            <param name="size">Size of the template.</param>
        </member>
        <member name="M:ComponentPro.Pdf.PdfPageTemplateElement.#ctor(System.Single,System.Single)">
            <summary>
            Creates a new page template.
            </summary>
            <param name="width">Width of the template.</param>
            <param name="height">Height of the template.</param>
        </member>
        <member name="M:ComponentPro.Pdf.PdfPageTemplateElement.#ctor(System.Drawing.PointF,System.Drawing.SizeF,ComponentPro.Pdf.PdfPage)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.PdfPageTemplateElement" /> class.
            </summary>
            <param name="location">The location.</param>
            <param name="size">The size.</param>
            <param name="page">The page.</param>
        </member>
        <member name="M:ComponentPro.Pdf.PdfPageTemplateElement.#ctor(System.Single,System.Single,ComponentPro.Pdf.PdfPage)">
            <summary>
            Creates a new page template.
            </summary>
            <param name="width">Width of the template.</param>
            <param name="height">Height of the template.</param>
            <param name="page">The Current Page object.</param>
        </member>
        <member name="M:ComponentPro.Pdf.PdfPageTemplateElement.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates a new page template.
            </summary>
            <param name="x">X co-ordinate of the template.</param>
            <param name="y">Y co-ordinate of the template.</param>
            <param name="width">Width of the template.</param>
            <param name="height">Height of the template.</param>
        </member>
        <member name="M:ComponentPro.Pdf.PdfPageTemplateElement.#ctor(System.Single,System.Single,System.Single,System.Single,ComponentPro.Pdf.PdfPage)">
            <summary>
            Creates a new page template.
            </summary>
            <param name="x">X co-ordinate of the template.</param>
            <param name="y">Y co-ordinate of the template.</param>
            <param name="width">Width of the template.</param>
            <param name="height">Height of the template.</param>
            <param name="page">The Current Page object.</param>
        </member>
        <member name="P:ComponentPro.Pdf.PdfPageTemplateElement.Alignment">
            <summary>
            Gets or sets alignment of the page template element.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfPageTemplateElement.Background">
            <summary>
            Indicates whether the page template is located behind of 
            the page layers or in front of it.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfPageTemplateElement.Bounds">
            <summary>
            Gets or sets bounds of the page template element.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfPageTemplateElement.Dock">
            <summary>
            Gets or sets the dock style of the page template element.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfPageTemplateElement.Foreground">
            <summary>
            Indicates whether the page template is located in front of 
            the page layers or behind of it.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfPageTemplateElement.Graphics">
            <summary>
            Gets graphics context of the page template element.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfPageTemplateElement.Height">
            <summary>
            Gets or sets height of the page template element.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfPageTemplateElement.Location">
            <summary>
            Gets or sets location of the page template element.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfPageTemplateElement.PdfTag">
            <summary>
            Gets or sets the tag for the element
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfPageTemplateElement.Size">
            <summary>
            Gets or sets size of the page template element.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfPageTemplateElement.Width">
            <summary>
            Gets or sets width of the page template element.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfPageTemplateElement.X">
            <summary>
            Gets or sets X co-ordinate of the template element on the page.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfPageTemplateElement.Y">
            <summary>
            Gets or sets Y co-ordinate of the template element on the page.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.PdfPageTransition">
            <summary>
            Represents parameters how to display the page in the presentation mode.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.PdfPageTransition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.PdfPageTransition" /> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.PdfPageTransition.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="P:ComponentPro.Pdf.PdfPageTransition.Dimension">
            <summary>
            Gets or sets the dimension in which the specified transition effect occurs.
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.PdfTransitionDimension" /> handles the dimensions .</value>
        </member>
        <member name="P:ComponentPro.Pdf.PdfPageTransition.Direction">
            <summary>
            The direction in which the specified transition effect moves, expressed in degrees counter 
            clockwise starting from a left-to-right direction. (This differs from the page object�s 
            Rotate property, which is measured clockwise from the top.)
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.PdfTransitionDirection" /> handles the various directions</value>
        </member>
        <member name="P:ComponentPro.Pdf.PdfPageTransition.Duration">
            <summary>
            Gets or sets the duration of the transition effect, in seconds.
            </summary>
            <value>The transition duration.</value>
        </member>
        <member name="P:ComponentPro.Pdf.PdfPageTransition.Motion">
            <summary>
            Gets or sets the the direction of motion for the specified transition effect.
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.PdfTransitionMotion" /> handles the various transition motions</value>
        </member>
        <member name="P:ComponentPro.Pdf.PdfPageTransition.PageDuration">
            <summary>
            Gets or sets The page�s display duration (also called its advance timing): the maximum 
            length of time, in seconds, that the page is displayed during presentations before 
            the viewer application automatically advances to the next page. By default, 
            the viewer does not advance automatically.
            </summary>
            <value>The page duration.</value>
        </member>
        <member name="P:ComponentPro.Pdf.PdfPageTransition.Scale">
            <summary>
            Gets or sets the starting or ending scale at which the changes are drawn. 
            If Motion property specifies an inward transition, the scale of the changes drawn progresses 
            from Scale to 1.0 over the course of the transition. If Motion specifies an outward 
            transition, the scale of the changes drawn progresses from 1.0 to Scale over the course 
            of the transition.
            </summary>
            <remarks>
            This property has effect for Fly transition style only.
            </remarks>
            <value>The scale.</value>
        </member>
        <member name="P:ComponentPro.Pdf.PdfPageTransition.Style">
            <summary>
            Gets or sets the transition style to use when moving to this page from another 
            during a presentation.
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.PdfTransitionEffect" />, handles the various transition styles</value>
        </member>
        <member name="T:ComponentPro.Pdf.PdfPortfolioAttributes">
            <summary>
            The class represents attributes of attached files in the portfolio such as Tile,Name,Author..etc
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.PdfPortfolioAttributes.#ctor">
            <summary>
            Initialize the instance of the class <see cref="T:ComponentPro.Pdf.PdfPortfolioAttributes" />
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.PdfPortfolioAttributes.AddAttributes(System.String,System.String)">
            <summary>
            Add the attributes into portfolio
            </summary>
            <param name="key">The attribute key such as name,date,author..etc</param>
            <param name="value">The attribute value</param>
        </member>
        <member name="M:ComponentPro.Pdf.PdfPortfolioAttributes.GetAttributes">
            <summary>
            Remove the attributes from the portfolio
            </summary>
            <param name="key">The attribute key</param>
        </member>
        <member name="M:ComponentPro.Pdf.PdfPortfolioAttributes.RemoveAttributes(System.String)">
            <summary>
            Remove the attributes from the portfolio
            </summary>
            <param name="key">The attribute key</param>
        </member>
        <member name="P:ComponentPro.Pdf.PdfPortfolioAttributes.AttributesKey">
            <summary>
            Gets attribute keys
            </summary>
            <value>The array of attribute keys</value>
        </member>
        <member name="T:ComponentPro.Pdf.PdfPortfolioInformation">
            <summary>
            The class represents the creation of PDF portfolio
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.PdfPortfolioInformation.#ctor">
            <summary>
            Initializes new  instance of <see cref="T:ComponentPro.Pdf.PdfPortfolioInformation" /> class
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfPortfolioInformation.Schema">
            <summary>
            Gets or sets the collection of portfolio schema field
            </summary>
            <value>the <see cref="T:ComponentPro.Pdf.PdfPortfolioSchema" /></value>
        </member>
        <member name="P:ComponentPro.Pdf.PdfPortfolioInformation.StartupDocument">
            <summary>
            Get and set the startup document of portfolio
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.Annotations.PdfAttachment"/>, represents the attached documents</value>
        </member>
        <member name="P:ComponentPro.Pdf.PdfPortfolioInformation.ViewMode">
            <summary>
            Gets and sets the view mode of the portfolio
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.PdfPortfolioViewMode" /> represents visual mode of the files in portfolio</value>
        </member>
        <member name="T:ComponentPro.Pdf.PdfPortfolioSchema">
            <summary>
            The class represents the collections of schema field
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.PdfPortfolioSchema.#ctor">
            <summary>
            Initialize the instance of the <see cref="T:ComponentPro.Pdf.PdfPortfolioSchema" /> class
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.PdfPortfolioSchema.AddSchemaField(ComponentPro.Pdf.Fields.PdfPortfolioSchemaField)">
            <summary>
            used to add the schema field into schema dictionary
            </summary>
            <param name="field">The <see cref="T:ComponentPro.Pdf.Fields.PdfPortfolioSchemaField"/>,contains custom fields of the attached file  </param>
        </member>
        <member name="M:ComponentPro.Pdf.PdfPortfolioSchema.GetSchemaField">
            <summary>
            used to retrieve the schema fields from schema dictionary
            </summary>
            <param name="field">The <see cref="T:ComponentPro.Pdf.Fields.PdfPortfolioSchemaField"/>,contains custom fields of the attached file  </param>
        </member>
        <member name="M:ComponentPro.Pdf.PdfPortfolioSchema.RemoveField(System.String)">
            <summary>
            used to remove the schema field from schema dictionary
            </summary>
            <param name="key">The field key</param>
        </member>
        <member name="P:ComponentPro.Pdf.PdfPortfolioSchema.FieldKeys">
            <summary>
            Get the field keys from schema field
            </summary>
            <value>The array of field keys</value>
        </member>
        <member name="T:ComponentPro.Pdf.PdfPortfolioSchemaCollection">
            <summary>
            The class represents the collection of schema attributes.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Fields.PdfPortfolioSchemaField">
            <summary>
            The class represents the creation of schema filed
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfPortfolioSchemaField.#ctor">
            <summary>
            initialize the instance of the <see cref="T:ComponentPro.Pdf.Fields.PdfPortfolioSchemaField"/> class
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Fields.PdfPortfolioSchemaField.Editable">
            <summary>
            Gets or Sets the whether the value of the schema field is editable
            </summary>
            <value>if true editable,else can't editable</value>
        </member>
        <member name="P:ComponentPro.Pdf.Fields.PdfPortfolioSchemaField.Name">
            <summary>
            Gets or Sets the name of the schema field
            </summary>
            <value>The name of the schema field</value>
        </member>
        <member name="P:ComponentPro.Pdf.Fields.PdfPortfolioSchemaField.Order">
            <summary>
            Gets or sets the order of the Schema field.
            </summary>
            <value>the numeric value show the order of the field</value>
        </member>
        <member name="P:ComponentPro.Pdf.Fields.PdfPortfolioSchemaField.Type">
            <summary>
            Gets or Sets the schema field Type
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.PdfPortfolioSchemaFieldType"/> provides the data type of the field</value>
        </member>
        <member name="P:ComponentPro.Pdf.Fields.PdfPortfolioSchemaField.Visible">
            <summary>
            Gets or Sets the visibility of the Schema field
            </summary>
            <value>if true the filed is visible,otherwise field is not visible</value>
        </member>
        <member name="T:ComponentPro.Pdf.PdfPortfolioSchemaFieldType">
            <summary>
            indicates the type of the portfolio schema field.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.PdfPortfolioViewMode">
            <summary>
            indicates the type of the portfolio view mode.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.PdfPrintState">
            <summary>
            Used to represent the print state of <see cref="T:ComponentPro.Pdf.PdfPageLayer" />.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfPrintState.PrintWhenVisible">
            <summary>
            The visble PDF page layers get print
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfPrintState.NeverPrint">
            <summary>
            The PDF page layer never get print
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfPrintState.AlwaysPrint">
            <summary>
            The PDF pageLayers always get print 
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.PdfSection">
             <summary>
             Represents a section entity. A section it's a set of the pages with similar page settings.
             </summary>
        </member>
        <member name="M:ComponentPro.Pdf.PdfSection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"></see> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:ComponentPro.Pdf.PdfSection.OnPageAdded(ComponentPro.Pdf.PageAddedEventArgs)">
            <summary>
            Called when the page has been added
            </summary>
            <param name="args">Event arguments.</param>
        </member>
        <member name="P:ComponentPro.Pdf.PdfSection.PageLabel">
             <summary>
             Gets or sets the page label.
             </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfSection.Pages">
             <summary>
             Gets the collection of pages in a section (Read only)
             </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfSection.PageSettings">
             <summary>
             Gets or sets the page settings of the section.
             </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfSection.Template">
             <summary>
             Gets or sets a template for the pages in the section.
             </summary>
        </member>
        <member name="E:ComponentPro.Pdf.PdfSection.PageAdded">
            <summary>
            Event rises when the new page has been added
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.PdfSectionCollection">
             <summary>
             Represents the collection of the sections.
             </summary>
        </member>
        <member name="M:ComponentPro.Pdf.PdfSectionCollection.Add">
             <summary>
             Creates a section and adds it to the collection.
             </summary>
             <returns>Created section object.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.PdfSectionCollection.Contains(ComponentPro.Pdf.PdfSection)">
             <summary>
             Checks whether the collection contains the section.
             </summary>
             <param name="section">The  <see cref="T:ComponentPro.Pdf.PdfSection" /></param>
             <returns>True - if the sections belongs to the collection, False otherwise.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.PdfSectionCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"></see> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:ComponentPro.Pdf.PdfSectionCollection.IndexOf(ComponentPro.Pdf.PdfSection)">
             <summary>
             Determines the index of the section.
             </summary>
             <param name="section">The section which is to be found the index.</param>
             <returns>The index of the section.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.PdfSectionCollection.Insert(System.Int32,ComponentPro.Pdf.PdfSection)">
             <summary>
             Inserts the section at the specified index.
             </summary>
             <param name="index">The index of the section to be added.</param>
             <param name="section">The section to be added.</param>
        </member>
        <member name="P:ComponentPro.Pdf.PdfSectionCollection.Count">
             <summary>
             Gets the number of sections in a document.
             </summary>
             <value>The count of the sections.</value>
        </member>
        <member name="P:ComponentPro.Pdf.PdfSectionCollection.Item(System.Int32)">
             <summary>
             Gets the <see cref="T:PdfSection" /> at the specified index.Read only.
             </summary>
             <value></value>
        </member>
        <member name="T:ComponentPro.Pdf.Fields.PdfSectionNumberField">
            <seealso cref="!:PdfColorSpaces" /> Class    
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfSectionNumberField.#ctor(ComponentPro.Pdf.Graphics.PdfFont)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Fields.PdfSectionNumberField"/> class.
            </summary>
            <param name="font">The font.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfSectionNumberField.#ctor(ComponentPro.Pdf.Graphics.PdfFont,ComponentPro.Pdf.Graphics.PdfBrush)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Fields.PdfSectionNumberField"/> class.
            </summary>
            <param name="font">The font.</param>
            <param name="brush">The brush.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfSectionNumberField.#ctor(ComponentPro.Pdf.Graphics.PdfFont,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Fields.PdfSectionNumberField"/> class.
            </summary>
            <param name="font">The font.</param>
            <param name="bounds">The bounds.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfSectionNumberField.GetValue(ComponentPro.Pdf.Graphics.PdfGraphics)">
            <summary>
            Gets the value of the field at the specified graphics.
            </summary>
            <param name="graphics">The graphics.</param>
            <returns>The value of the field.</returns>
        </member>
        <member name="T:ComponentPro.Pdf.PdfSectionPageCollection">
             <summary>
             Represents the collection of pages in a section.
             </summary>
        </member>
        <member name="M:ComponentPro.Pdf.PdfSectionPageCollection.Add">
             <summary>
             Creates a new page and adds it into the collection.
             </summary>
             <returns>The new page.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.PdfSectionPageCollection.Add(ComponentPro.Pdf.PdfPage)">
             <summary>
             Adds a page into collection.
             </summary>
             <param name="page">The page.</param>
        </member>
        <member name="M:ComponentPro.Pdf.PdfSectionPageCollection.Clear">
            <summary>
            Clears this collection.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.PdfSectionPageCollection.Contains(ComponentPro.Pdf.PdfPage)">
             <summary>
             Determines whether the specified page is within the collection.
             </summary>
             <param name="page">The <see cref="T:ComponentPro.Pdf.PdfPage" /></param>
             <returns>
             	<c>true</c> if the collection contains the specified page; otherwise, <c>false</c>.
             </returns>
        </member>
        <member name="M:ComponentPro.Pdf.PdfSectionPageCollection.IndexOf(ComponentPro.Pdf.PdfPage)">
            <summary>
            Returns the index of the specified page.
            </summary>
            <param name="page">The <see cref="T:ComponentPro.Pdf.PdfPage" /></param>
            <returns>The index of the page.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.PdfSectionPageCollection.Insert(System.Int32,ComponentPro.Pdf.PdfPage)">
             <summary>
             Inserts a page at the specified index.
             </summary>
             <param name="index">The index of the page to be added.</param>
             <param name="page">The page to be added.</param>
        </member>
        <member name="M:ComponentPro.Pdf.PdfSectionPageCollection.Remove(ComponentPro.Pdf.PdfPage)">
            <summary>
            Removes the specified page from collection.
            </summary>
            <param name="page">The page.</param>
        </member>
        <member name="M:ComponentPro.Pdf.PdfSectionPageCollection.RemoveAt(System.Int32)">
             <summary>
             Removes a page at the  specified index.
             </summary>
             <param name="index">The index of the page to be removed. </param>
        </member>
        <member name="P:ComponentPro.Pdf.PdfSectionPageCollection.Count">
             <summary>
             Gets the count of the pages.
             </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfSectionPageCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:PdfPage" /> at the specified index.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Fields.PdfSectionPageCountField">
            <seealso cref="T:ComponentPro.Pdf.Fields.PdfMultipleNumberValueField"/> Class    
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfSectionPageCountField.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Fields.PdfSectionPageCountField"/> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfSectionPageCountField.#ctor(ComponentPro.Pdf.Graphics.PdfFont)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Fields.PdfSectionPageCountField"/> class.
            </summary>
            <param name="font">The font.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfSectionPageCountField.#ctor(ComponentPro.Pdf.Graphics.PdfFont,ComponentPro.Pdf.Graphics.PdfBrush)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Fields.PdfSectionPageCountField"/> class.
            </summary>
            <param name="font">The font.</param>
            <param name="brush">The brush.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfSectionPageCountField.#ctor(ComponentPro.Pdf.Graphics.PdfFont,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Fields.PdfSectionPageCountField"/> class.
            </summary>
            <param name="font">The font.</param>
            <param name="bounds">The bounds.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfSectionPageCountField.GetValue(ComponentPro.Pdf.Graphics.PdfGraphics)">
            <summary>
            Gets the value of the field at the specified graphics.
            </summary>
            <param name="graphics">The graphics.</param>
            <returns>result</returns>
        </member>
        <member name="T:ComponentPro.Pdf.Fields.PdfSectionPageNumberField">
            <summary>
            Represents an automatic field to display page number within a section.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Fields.PdfMultipleNumberValueField"/> Class    
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfSectionPageNumberField.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Fields.PdfSectionPageNumberField"/> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfSectionPageNumberField.#ctor(ComponentPro.Pdf.Graphics.PdfFont)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Fields.PdfSectionPageNumberField"/> class.
            </summary>
            <param name="font">The font.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfSectionPageNumberField.#ctor(ComponentPro.Pdf.Graphics.PdfFont,ComponentPro.Pdf.Graphics.PdfBrush)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Fields.PdfSectionPageNumberField"/> class.
            </summary>
            <param name="font">The font.</param>
            <param name="brush">The brush.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfSectionPageNumberField.#ctor(ComponentPro.Pdf.Graphics.PdfFont,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Fields.PdfSectionPageNumberField"/> class.
            </summary>
            <param name="font">The font.</param>
            <param name="bounds">The bounds.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Fields.PdfSectionPageNumberField.GetValue(ComponentPro.Pdf.Graphics.PdfGraphics)">
            <summary>
            Gets the value of the field at the specified graphics.
            </summary>
            <param name="graphics">The graphics.</param>
            <returns>result</returns>
        </member>
        <member name="T:ComponentPro.Pdf.PdfSectionTemplate">
             <summary>
             Represents a page template for all the pages in the section.
             </summary>
        </member>
        <member name="M:ComponentPro.Pdf.PdfSectionTemplate.#ctor">
            <summary>
            Creates a new object.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfSectionTemplate.ApplyDocumentBottomTemplate">
            <summary>
            Gets or sets value indicating whether parent Bottom page template should be used or not.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfSectionTemplate.ApplyDocumentLeftTemplate">
            <summary>
            Gets or sets value indicating whether parent Left page template should be used or not.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfSectionTemplate.ApplyDocumentRightTemplate">
            <summary>
            Gets or sets value indicating whether parent Right page template should be used or not.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfSectionTemplate.ApplyDocumentStamps">
            <summary>
            Gets or sets value indicating whether 
            the parent stamp elements should be used or not.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfSectionTemplate.ApplyDocumentTopTemplate">
            <summary>
            Gets or sets value indicating whether parent Top page template should be used or not.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.PdfStampCollection">
            <summary>
            A collection of stamps that are applied to the page templates.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.PdfStampCollection.Add(ComponentPro.Pdf.PdfPageTemplateElement)">
            <summary>
            Adds a stamp element to the collection.
            </summary>
            <param name="template">The <see cref="T:ComponentPro.Pdf.PdfPageTemplateElement" /> used here to create stamp element.</param>
            <returns>The index of the stamp element.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.PdfStampCollection.Add(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates a stamp element and adds it to the collection.
            </summary>
            <param name="x">X co-ordinate of the stamp.</param>
            <param name="y">Y co-ordinate of the stamp.</param>
            <param name="width">Width of the stamp.</param>
            <param name="height">Height of the stamp.</param>
            <returns>The created stamp element.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.PdfStampCollection.Clear">
            <summary>
            Clears the collection.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.PdfStampCollection.Contains(ComponentPro.Pdf.PdfPageTemplateElement)">
            <summary>
            Checks whether the stamp element exists in the collection.
            </summary>
            <param name="template">The <see cref="T:ComponentPro.Pdf.PdfPageTemplateElement" /> used here to create stamp element.</param>
            <returns>True - if stamp element exists in the collection, False otherwise.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.PdfStampCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"></see> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:ComponentPro.Pdf.PdfStampCollection.Insert(System.Int32,ComponentPro.Pdf.PdfPageTemplateElement)">
            <summary>
            Inserts a stamp element to the collection at the specified position.
            </summary>
            <param name="index">The index of the stamp in the collection.</param>
            <param name="template">The <see cref="T:ComponentPro.Pdf.PdfPageTemplateElement" />.</param>
        </member>
        <member name="M:ComponentPro.Pdf.PdfStampCollection.Remove(ComponentPro.Pdf.PdfPageTemplateElement)">
            <summary>
            Removes the stamp element from the collection.
            </summary>
            <param name="template">The <see cref="T:ComponentPro.Pdf.PdfPageTemplateElement" />.</param>
        </member>
        <member name="M:ComponentPro.Pdf.PdfStampCollection.RemoveAt(System.Int32)">
            <summary>
            Removes a stamp element from the specified position in the collection.
            </summary>
            <param name="index">The index of the stamp in the collection.</param>
        </member>
        <member name="P:ComponentPro.Pdf.PdfStampCollection.Item(System.Int32)">
            <summary>
            Gets a stamp element by its index.
            </summary>
            <value>The <see cref="T:ComponentPro.Pdf.PdfPageTemplateElement" /> describes a page template object </value>
        </member>
        <member name="T:ComponentPro.Pdf.PdfStructureElement">
            <summary>
            Represents the structure element 
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.PdfStructureElement.#ctor">
            <summary>
            Initialize the structure element
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.PdfStructureElement.#ctor(ComponentPro.Pdf.PdfTagType)">
            <summary>
            Initialize the Structure element
            </summary>
            <param name="tag">tag type</param>
        </member>
        <member name="P:ComponentPro.Pdf.PdfStructureElement.Abbrevation">
            <summary>
            Gets or sets the abbrevation for the structure element.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfStructureElement.ActualText">
            <summary>
            Gets or sets the actual text for the structure element
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfStructureElement.AlternateText">
            <summary>
            Gets or sets the alternate text for the structure element
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfStructureElement.Order">
            <summary>
            Gets or sets the logical reading order for the structure element
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfStructureElement.Parent">
            <summary>
            Gets or sets the parent for the element
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfStructureElement.TagType">
            <summary>
            Gets or sets the tag type for the element
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfStructureElement.Title">
            <summary>
            Gets or sets the title for the structure element
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.PdfTagType">
            <summary>
            Represents the tag type
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.PdfTransitionDimension">
            <summary>
            Enumeration of transition dimensions.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfTransitionDimension.Horizontal">
            <summary>
            Horizontal effect.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfTransitionDimension.Vertical">
            <summary>
            Vertical effect.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.PdfTransitionDirection">
            <summary>
            Enumeration of transition directions.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfTransitionDirection.LeftToRight">
            <summary>
            Left to Right direction.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfTransitionDirection.BottomToTop">
            <summary>
            Bottom to Top direction.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfTransitionDirection.RightToLeft">
            <summary>
            Right to Left direction.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfTransitionDirection.TopToBottom">
            <summary>
            Top to Bottom direction.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfTransitionDirection.TopLeftToBottomRight">
            <summary>
            TopLeft to BottomRight direction.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.PdfTransitionEffect">
            <summary>
            Enumeration of possible transition styles when moving to the page from another 
            during a presentation
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfTransitionEffect.Split">
            <summary>
            Two lines sweep across the screen, revealing the new page. The lines may be either 
            horizontal or vertical and may move inward from the edges of the page or outward 
            from the center.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfTransitionEffect.Blinds">
            <summary>
            Multiple lines, evenly spaced across the screen, synchronously sweep in the same 
            direction to reveal the new page. The lines may be either horizontal or vertical.
            Horizontal lines move downward; vertical lines move to the right.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfTransitionEffect.Box">
            <summary>
            A rectangular box sweeps inward from the edges of the page or outward from the center,
            revealing the new page.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfTransitionEffect.Wipe">
            <summary>
            A single line sweeps across the screen from one edge to the other, revealing the new page.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfTransitionEffect.Dissolve">
            <summary>
            The old page dissolves gradually to reveal the new one.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfTransitionEffect.Glitter">
            <summary>
            Similar to Dissolve, except that the effect sweeps across the page in a wide band moving from 
            one side of the screen to the other.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfTransitionEffect.Replace">
            <summary>
            The new page simply replaces the old one with no special transition effect.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfTransitionEffect.Fly">
            <summary>
            Changes are flown out or in, to or from a location that is offscreen.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfTransitionEffect.Push">
            <summary>
            The old page slides off the screen while the new page slides in, pushing the old page out.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfTransitionEffect.Cover">
            <summary>
            The new page slides on to the screen, covering the old page.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfTransitionEffect.Uncover">
            <summary>
            The old page slides off the screen, uncovering the new page.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfTransitionEffect.Fade">
            <summary>
            The new page gradually becomes visible through the old one.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.PdfTransitionMotion">
            <summary>
            Enumeration of transition motions.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfTransitionMotion.Inward">
            <summary>
            Inward motion from the edges of the page to center..
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfTransitionMotion.Outward">
            <summary>
            Outward motion from the center of the page to edges.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.PdfVersion">
            <summary>
            Specifies the available PDF versions to save a PDF document.
            </summary>
            <seealso cref="!:FileStructure" /> Class       
        </member>
        <member name="F:ComponentPro.Pdf.PdfVersion.Version1_0">
            <summary>
            PDF version 1.0.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfVersion.Version1_1">
            <summary>
            PDF version 1.1.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfVersion.Version1_2">
            <summary>
            PDF version 1.2.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfVersion.Version1_3">
            <summary>
            PDF version 1.3. Adobe Acrobat 4.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfVersion.Version1_4">
            <summary>
            PDF version 1.4. Adobe Acrobat 5.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfVersion.Version1_5">
            <summary>
            PDF version 1.5. Adobe Acrobat 6.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfVersion.Version1_6">
            <summary>
            PDF version 1.6. Adobe Acrobat 7.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.PdfVersion.Version1_7">
            <summary>
            PDF version 1.7. Adobe Acrobat 8.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.PdfViewerPreferences">
            <summary>
            Defines the way the document is to be presented on the screen or in print.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfViewerPreferences.CenterWindow">
            <summary>
            A flag specifying whether to position the document�s window in the center of the screen.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfViewerPreferences.DisplayTitle">
            <summary>
            A flag specifying whether the window�s title bar should display the document title taken 
            from the Title entry of the document information dictionary. If false, the title bar 
            should instead display the name of the PDF file containing the document.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfViewerPreferences.FitWindow">
            <summary>
            A flag specifying whether to resize the document�s window to fit the size of the first 
            displayed page.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfViewerPreferences.HideMenubar">
            <summary>
            A flag specifying whether to hide the viewer application�s menu bar when the 
            document is active.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfViewerPreferences.HideToolbar">
            <summary>
            A flag specifying whether to hide the viewer application�s tool bars when the document is active.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfViewerPreferences.HideWindowUI">
            <summary>
            A flag specifying whether to hide user interface elements in the document�s window 
            (such as scroll bars and navigation controls), leaving only the document�s contents displayed.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfViewerPreferences.PageLayout">
            <summary>
            A name object specifying the page layout to be used when the document is opened.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfViewerPreferences.PageMode">
            <summary>
            A name object specifying how the document should be displayed when opened.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.PdfViewerPreferences.PageScaling">
            <summary>
            Gets or Set the page scaling option to be selected 
            when a print dialog is displayed for this document.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.ProgressEventArgs">
            <summary>
            Shows the saving progress of the PDF document.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.ProgressEventArgs.Current">
            <summary>
            Gets the current element (page) index that just was saved.
            </summary>
            <remarks>The index value increases constantly from 0 to Total.</remarks>
        </member>
        <member name="P:ComponentPro.Pdf.ProgressEventArgs.Progress">
            <summary>
            Gets the progress.
            </summary>
            <remarks>Progress constantly increases from 0.0 to 1.0.
            1.0 value means that entire document has been saved.</remarks>
        </member>
        <member name="P:ComponentPro.Pdf.ProgressEventArgs.Total">
            <summary>
            Gets the total number of the elements (pages) that need to be saved.
            </summary>     
        </member>
        <member name="T:ComponentPro.Pdf.Security.PdfCertificate">
            <summary>
            Represents the Certificate object.
            </summary>
            <remarks>This API is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class
            <seealso cref="!:PdfGraphics" /> Class
            <seealso cref="!:PdfFont" /> Class
            <seealso cref="T:ComponentPro.Pdf.Security.PdfDigitalSignature" /> Class
        </member>
        <member name="M:ComponentPro.Pdf.Security.PdfCertificate.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Security.PdfCertificate" /> class with the path to the pfx file and the password.
            </summary>
            <remarks>This constructor is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
            <param name="pfxPath">The path to pfx file.</param>
            <param name="password">The password for pfx file.</param>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class
            <seealso cref="!:PdfGraphics" /> Class
            <seealso cref="!:PdfFont" /> Class
        </member>
        <member name="M:ComponentPro.Pdf.Security.PdfCertificate.#ctor(System.IO.Stream,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Security.PdfCertificate" /> class with the path to the pfx file and the password.
            </summary>
            <remarks>This constructor is not supported in WinRT and Silverlight.</remarks>
            <param name="pfxPath">The path to pfx file.</param>
            <param name="password">The password for pfx file.</param>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class
            <seealso cref="!:PdfGraphics" /> Class
            <seealso cref="!:PdfFont" /> Class
        </member>
        <member name="M:ComponentPro.Pdf.Security.PdfCertificate.#ctor(System.String,System.String,ComponentPro.Pdf.Security.KeyStorageFlags)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Security.PdfCertificate" /> class with the path to the pfx file,password and storageflag
            </summary>
            <remarks>This constructor is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
            <param name="pfxPath">The path to pfx file.</param>
            <param name="password">The password for pfx file.</param>
            <param name="storageFlag">The private key storage flag.</param>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class
            <seealso cref="!:PdfGraphics" /> Class
            <seealso cref="!:PdfFont" /> Class
        </member>
        <member name="M:ComponentPro.Pdf.Security.PdfCertificate.FindBySerialId(ComponentPro.Pdf.Security.StoreType,System.Byte[])">
            <summary>
            Finds the certificate by serial number.
            </summary>
            <remarks>This method is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
            <param name="type">The certification system store type.</param>
            <param name="certId">The certificate id.</param>
            <returns></returns>
        </member>
        <member name="M:ComponentPro.Pdf.Security.PdfCertificate.FindBySubject(ComponentPro.Pdf.Security.StoreType,System.String,ComponentPro.Pdf.Security.StoreRegion)">
            <summary>
            Finds the certificate by subject
            </summary>
            <param name="type">The Store type</param>
            <param name="subject">Certificate subject</param>
            <param name="storeRegion">The Certificate store Location </param>
            <returns></returns>
        </member>
        <member name="P:ComponentPro.Pdf.Security.PdfCertificate.SerialNumber">
            <summary>
            Gets the serial number of a certificate.[Read-Only]
            </summary>
            <remarks>This property is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
            <value>The serial number of the certificate.</value>
        </member>
        <member name="T:ComponentPro.Pdf.Security.PdfCertificationFlags">
            <summary>
            Specifies the available permissions on certificated document.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class
            <seealso cref="!:PdfGraphics" /> Class
            <seealso cref="!:PdfFont" /> Class
            <seealso cref="T:ComponentPro.Pdf.Security.PdfCertificate" /> Class
        </member>
        <member name="F:ComponentPro.Pdf.Security.PdfCertificationFlags.ForbidChanges">
            <summary>
            Restrict any changes to the document.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Security.PdfCertificationFlags.AllowFormFill">
            <summary>
            Only allow form fill-in actions on this document.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Security.PdfCertificationFlags.AllowComments">
            <summary>
            Only allow commenting and form fill-in actions on this document.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Security.PdfEncryptionAlgorithm">
            <summary>
            Specifies the type of encryption algorithm used.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Security.PdfEncryptionAlgorithm.RC4">
            <summary>
            The encryption algorithm is RC4.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Security.PdfEncryptionAlgorithm.AES">
            <summary>
            The encryption algorithm is AES.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Security.PdfEncryptionKeySize">
            <summary>
            Specifies length of the encryption key for encryption.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class
            <seealso cref="T:ComponentPro.Pdf.Security.PdfDocumentSecurity" /> Class
            <seealso cref="T:ComponentPro.Pdf.PdfPage" /> Class
            <seealso cref="!:PdfFont" /> Class
        </member>
        <member name="F:ComponentPro.Pdf.Security.PdfEncryptionKeySize.Key40Bit">
            <summary>
            The key is 40 bit long.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Security.PdfEncryptionKeySize.Key128Bit">
            <summary>
            The key is 128 bit long.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Security.PdfEncryptionKeySize.Key256Bit">
            <summary>
            The key is 256 bit long.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Security.PdfEncryptionKeySize.Key256BitRevision6">
            <summary>
            The key is 256 bit long with revision 6.
            AES algorithm for PDF 2.0 security feature.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Security.PdfDocumentPermissions">
            <summary>
            Specifies the available permissions set for the signature.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class
            <seealso cref="T:ComponentPro.Pdf.Security.PdfDocumentSecurity" /> Class
            <seealso cref="T:ComponentPro.Pdf.PdfPage" /> Class
            <seealso cref="!:PdfFont" /> Class
        </member>
        <member name="F:ComponentPro.Pdf.Security.PdfDocumentPermissions.Default">
            <summary>
            Default value.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Security.PdfDocumentPermissions.Print">
            <summary>
            Print the document.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Security.PdfDocumentPermissions.EditContent">
            <summary>
            Edit content.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Security.PdfDocumentPermissions.CopyContent">
            <summary>
            Copy content.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Security.PdfDocumentPermissions.EditAnnotations">
            <summary>
            Add or modify text annotations, fill in interactive form fields.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Security.PdfDocumentPermissions.FillFields">
            <summary>
            Fill form fields. (Only for 128 bits key).
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Security.PdfDocumentPermissions.AccessibilityCopyContent">
            <summary>
            Copy accessibility content.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Security.PdfDocumentPermissions.AssembleDocument">
            <summary>
            Assemble document permission. (Only for 128 bits key).
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Security.PdfDocumentPermissions.FullQualityPrint">
            <summary>
            Full quality print.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Security.PdfDocumentSecurity">
            <summary>
            Represents the security settings of the PDF document.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Security.PdfDocumentSecurity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Security.PdfDocumentSecurity" /> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Security.PdfDocumentSecurity.ResetPermissions(ComponentPro.Pdf.Security.PdfDocumentPermissions)">
            <summary>
            Logically ANDs flag and inverted mask and return result.
            </summary>
            <param name="flags">The mask of set bit that should be cleared in the result.</param>
            <returns>The ANDed value of flag and inverted mask.</returns>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class
            <seealso cref="T:ComponentPro.Pdf.Security.PdfDocumentSecurity" /> Class
            <seealso cref="T:ComponentPro.Pdf.PdfPage" /> Class
            <seealso cref="!:PdfFont" /> Class      
        </member>
        <member name="M:ComponentPro.Pdf.Security.PdfDocumentSecurity.SetPermissions(ComponentPro.Pdf.Security.PdfDocumentPermissions)">
            <summary>
            Logically ORs flag and mask and return result.
            </summary>
            <param name="flags">The mask of set bit that should be set in the result.</param>
            <returns>The ORed value of flag and mask.</returns>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class
            <seealso cref="T:ComponentPro.Pdf.Security.PdfDocumentSecurity" /> Class
            <seealso cref="T:ComponentPro.Pdf.PdfPage" /> Class
            <seealso cref="!:PdfFont" /> Class  
        </member>
        <member name="P:ComponentPro.Pdf.Security.PdfDocumentSecurity.Algorithm">
            <summary>
            Gets or sets the type of encryption algorithm used.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Security.PdfDocumentSecurity.KeySize">
            <summary>
            Gets or sets the length of the encryption key for encryption.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class
            <seealso cref="T:ComponentPro.Pdf.Security.PdfDocumentSecurity" /> Class
            <seealso cref="T:ComponentPro.Pdf.PdfPage" /> Class
            <seealso cref="!:PdfFont" /> Class
        </member>
        <member name="P:ComponentPro.Pdf.Security.PdfDocumentSecurity.OwnerPassword">
            <summary>
            Gets or sets the owner password,  If the PDF document is password protected you can use the
            owner password to open the document and change its permissions.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class
            <seealso cref="T:ComponentPro.Pdf.Security.PdfDocumentSecurity" /> Class
            <seealso cref="T:ComponentPro.Pdf.PdfPage" /> Class
            <seealso cref="!:PdfFont" /> Class
        </member>
        <member name="P:ComponentPro.Pdf.Security.PdfDocumentSecurity.Permissions">
            <summary>
            Gets or sets the permissions when the document is opened with user password.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class
            <seealso cref="T:ComponentPro.Pdf.Security.PdfDocumentSecurity" /> Class
            <seealso cref="T:ComponentPro.Pdf.PdfPage" /> Class
            <seealso cref="!:PdfFont" /> Class
        </member>
        <member name="P:ComponentPro.Pdf.Security.PdfDocumentSecurity.UserPassword">
            <summary>
            Gets or sets the user password which is required when the PDF document is opened in a viewer.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class
            <seealso cref="T:ComponentPro.Pdf.Security.PdfDocumentSecurity" /> Class
            <seealso cref="T:ComponentPro.Pdf.PdfPage" /> Class
            <seealso cref="!:PdfFont" /> Class
        </member>
        <member name="T:ComponentPro.Pdf.Security.PdfDigitalSignature">
            <summary>
            Represents a digital signature used for signing a PDF document.
            </summary>
            <remarks>This API is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class
            <seealso cref="!:PdfGraphics" /> Class
            <seealso cref="!:PdfFont" /> Class
            <seealso cref="T:ComponentPro.Pdf.Security.PdfCertificate" /> Class
        </member>
        <member name="M:ComponentPro.Pdf.Security.PdfDigitalSignature.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Security.PdfDigitalSignature" /> class.
            </summary>
            <remarks>This constructor is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
        </member>
        <member name="M:ComponentPro.Pdf.Security.PdfDigitalSignature.#ctor(ComponentPro.Pdf.PdfPage,ComponentPro.Pdf.Security.PdfCertificate,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Security.PdfDigitalSignature" /> class with the page, certificate and the signature name.
            </summary>
            <remarks>This constructor is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
            <param name="page">The current pdf page where signature will be replaced.</param>
            <param name="cert">The pdf certificate.</param>
            <param name="signatureName">Name of the signature.</param>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class
            <seealso cref="!:PdfGraphics" /> Class
            <seealso cref="!:PdfFont" /> Class
            <seealso cref="T:ComponentPro.Pdf.Security.PdfCertificate" /> Class
        </member>
        <member name="M:ComponentPro.Pdf.Security.PdfDigitalSignature.#ctor(ComponentPro.Pdf.PdfDocumentBase,ComponentPro.Pdf.PdfPageBase,ComponentPro.Pdf.Security.PdfCertificate,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Security.PdfDigitalSignature" /> class with the PDF document, page, certificate
            and the signature name.
            </summary>
            <remarks>This constructor is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
            <param name="document">The document, which has the page.</param>
            <param name="page">The page.</param>
            <param name="certificate">The certificate.</param>
            <param name="signatureName">The name of the signature.</param>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class
            <seealso cref="!:PdfGraphics" /> Class
            <seealso cref="!:PdfFont" /> Class
            <seealso cref="T:ComponentPro.Pdf.Security.PdfCertificate" /> Class
        </member>
        <member name="M:ComponentPro.Pdf.Security.PdfDigitalSignature.#ctor(ComponentPro.Pdf.PdfDocumentBase,ComponentPro.Pdf.PdfPageBase,ComponentPro.Pdf.Security.PdfCertificate,System.String,ComponentPro.Pdf.Forms.PdfImportedSignatureField)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Security.PdfDigitalSignature" /> class with the PDF document, page, certificate
            , signature name and the signature field.
            </summary>
            <remarks>This constructor is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
            <param name="document">The loaded document, which has the page.</param>
            <param name="page">The page.</param>
            <param name="certificate">The certificate.</param>
            <param name="signatureName">The name of the signature.</param>
            <param name="loadedField">The name of the loaded signature field</param>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class
            <seealso cref="!:PdfGraphics" /> Class
            <seealso cref="!:PdfFont" /> Class
            <seealso cref="T:ComponentPro.Pdf.Security.PdfCertificate" /> Class
        </member>
        <member name="P:ComponentPro.Pdf.Security.PdfDigitalSignature.Appearance">
            <summary>
            Gets the signature Appearance.[Read-Only]
            </summary>
            <remarks>This property is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
            <value>A <see cref="T:ComponentPro.Pdf.Annotations.PdfAppearance"/> object defines signature`s appearance.</value>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument"/> Class
            <seealso cref="!:PdfGraphics"/> Class
            <seealso cref="!:PdfFont"/> Class
            <seealso cref="T:ComponentPro.Pdf.Security.PdfCertificate"/> Class   
        </member>
        <member name="P:ComponentPro.Pdf.Security.PdfDigitalSignature.Appearence">
            <summary>
            Gets the signature Appearance.[Read-Only]
            </summary>
            <remarks>This property is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
            <value>A <see cref="T:ComponentPro.Pdf.Annotations.PdfAppearance"/> object defines signature`s appearance.</value>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument"/> Class
            <seealso cref="!:PdfGraphics"/> Class
            <seealso cref="!:PdfFont"/> Class
            <seealso cref="T:ComponentPro.Pdf.Security.PdfCertificate"/> Class   
        </member>
        <member name="P:ComponentPro.Pdf.Security.PdfDigitalSignature.Bounds">
            <summary>
            Gets or sets bounds of the signature.
            </summary>
            <remarks>This property is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class
            <seealso cref="!:PdfGraphics" /> Class
            <seealso cref="!:PdfFont" /> Class
            <seealso cref="T:ComponentPro.Pdf.Security.PdfCertificate" /> Class       
        </member>
        <member name="P:ComponentPro.Pdf.Security.PdfDigitalSignature.Certificate">
            <summary>
            Gets or sets the signing certificate.
            </summary>
            <remarks>This property is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class
            <seealso cref="!:PdfGraphics" /> Class
            <seealso cref="!:PdfFont" /> Class
            <seealso cref="T:ComponentPro.Pdf.Security.PdfCertificate" /> Class  
        </member>
        <member name="P:ComponentPro.Pdf.Security.PdfDigitalSignature.Certificated">
            <summary>
            Gets or sets a value indicating certificate document or not.
            NOTE: Works only with Adobe Reader 7.0.8 or higher.
            </summary>
            <remarks>This property is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
            <value>certificate document if true.</value>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class
            <seealso cref="!:PdfGraphics" /> Class
            <seealso cref="!:PdfFont" /> Class
            <seealso cref="T:ComponentPro.Pdf.Security.PdfCertificate" /> Class            
        </member>
        <member name="P:ComponentPro.Pdf.Security.PdfDigitalSignature.ContactInfo">
            <summary>
            Gets or sets information provided by the signer to enable a recipient to contact
            the signer to verify the signature; for example, a phone number.
            </summary>
            <remarks>This property is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class
            <seealso cref="!:PdfGraphics" /> Class
            <seealso cref="!:PdfFont" /> Class
            <seealso cref="T:ComponentPro.Pdf.Security.PdfCertificate" /> Class                     
        </member>
        <member name="P:ComponentPro.Pdf.Security.PdfDigitalSignature.DocumentPermissions">
            <summary>
            Gets or sets the permission for certificated document.
            </summary>
            <remarks>This property is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
            <value>The document permission.</value>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class
            <seealso cref="!:PdfGraphics" /> Class
            <seealso cref="!:PdfFont" /> Class
            <seealso cref="T:ComponentPro.Pdf.Security.PdfCertificate" /> Class 
        </member>
        <member name="P:ComponentPro.Pdf.Security.PdfDigitalSignature.Location">
            <summary>
            Gets or sets signature location on the PDF page.
            </summary>
            <remarks>This porperty is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class
            <seealso cref="!:PdfGraphics" /> Class
            <seealso cref="!:PdfFont" /> Class
            <seealso cref="T:ComponentPro.Pdf.Security.PdfCertificate" /> Class          
        </member>
        <member name="P:ComponentPro.Pdf.Security.PdfDigitalSignature.LocationInfo">
            <summary>
            Gets or sets the physical location of the signing.
            </summary>
            <remarks>This property is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class
            <seealso cref="!:PdfGraphics" /> Class
            <seealso cref="!:PdfFont" /> Class
            <seealso cref="T:ComponentPro.Pdf.Security.PdfCertificate" /> Class     
        </member>
        <member name="P:ComponentPro.Pdf.Security.PdfDigitalSignature.Reason">
            <summary>
            Gets or sets reason of signing.
            </summary>
            <remarks>This property is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class
            <seealso cref="!:PdfGraphics" /> Class
            <seealso cref="!:PdfFont" /> Class
            <seealso cref="T:ComponentPro.Pdf.Security.PdfCertificate" /> Class            
        </member>
        <member name="P:ComponentPro.Pdf.Security.PdfDigitalSignature.TimeStampServer">
            <summary>
            Gets or sets time stamping server unique resource identifier. 
            </summary>
            <remarks>This property is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
        </member>
        <member name="P:ComponentPro.Pdf.Security.PdfDigitalSignature.Visible">
            <summary>
            Gets a value indicating whether signature visible or not.[Read-Only]
            </summary>
            <remarks>Signature can be set as invisible when its <see cref="P:ComponentPro.Pdf.Security.PdfDigitalSignature.Bounds" /> size is set to empty. This property is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class
            <seealso cref="!:PdfGraphics" /> Class
            <seealso cref="!:PdfFont" /> Class
            <seealso cref="T:ComponentPro.Pdf.Security.PdfCertificate" /> Class         
        </member>
        <member name="T:ComponentPro.Pdf.Security.StoreRegion">
            <summary>
            Specifies the Location of the store
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Security.StoreRegion.LocalMachine">
            <summary>
            Certificate store assigned to local machine
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Security.StoreRegion.CurrentUser">
            <summary>
            Certificate store used by current user.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Security.StoreType">
            <summary>
            Specifies the naming of a system store.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Security.StoreType.MY">
            <summary>
            A certificate store that holds certificates with associated private keys.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Security.StoreType.ROOT">
            <summary>
            Root certificates.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Security.StoreType.CA">
            <summary>
            Certification authority certificates.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Security.StoreType.SPC">
            <summary>
            Software Publisher Certificate.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Security.StoreType.TrustedPeople">
            <summary>
            Certificate store for directly trusted people and resources
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Security.StoreType.TrustedPublisher">
            <summary>
            Certificate store for directly trusted publishers
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Security.StoreType.AuthRoot">
            <summary>
            Certificate store for third party certificate publishers
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Security.StoreType.AddressBook">
            <summary>
            Certificate store for other users
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Tables.BeforeCellLayoutEventArgs">
             <summary>
             Represents arguments of StartCellLayout Event.
             </summary>
             <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class
             <seealso cref="T:ComponentPro.Pdf.Tables.PdfSimpleTable" /> Class
        </member>
        <member name="T:ComponentPro.Pdf.Tables.CellLayoutEventArgs">
            <summary>
            The base class for cell layout arguments.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Tables.CellLayoutEventArgs.Bounds">
            <summary>
            Gets the bounds of the cell. Read-Only.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Tables.CellLayoutEventArgs.CellIndex">
            <summary>
            Gets the index of the cell. Read-Only.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Tables.CellLayoutEventArgs.Graphics">
            <summary>
            Gets the graphics, on which the cell should be drawn. Read-Only.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Tables.CellLayoutEventArgs.RowIndex">
            <summary>
            Gets the index of the row. Read-Only.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Tables.CellLayoutEventArgs.Value">
            <summary>
            Gets the value of the cell. Read-Only.
            </summary>
            <remarks>The value might be null or an empty string,
            which means that either no text were acquired or all
            text was on the previous page.</remarks>
        </member>
        <member name="P:ComponentPro.Pdf.Tables.BeforeCellLayoutEventArgs.Skip">
            <summary>
            Gets or sets a value indicating whether the value of this cell should be skipped.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Tables.BeforeCellLayoutEventHandler">
             <summary>
             Represents the method that handles StartCellLayout event of PdfSimpleTable.
             </summary>
             <param name="sender">The sender of the event.</param>
             <param name="args">The arguments of the event.</param>
             <remarks>This event is raised when starts laying out a cell on a page.</remarks>
             <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class
             <seealso cref="T:ComponentPro.Pdf.Tables.PdfSimpleTable" /> Class
        </member>
        <member name="T:ComponentPro.Pdf.Tables.BeforeRowLayoutEventArgs">
             <summary>
             Represents the arguments of StartRowLayout Event.
             </summary>
             <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class
             <seealso cref="T:ComponentPro.Pdf.Tables.PdfSimpleTable" /> Class
        </member>
        <member name="P:ComponentPro.Pdf.Tables.BeforeRowLayoutEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether table drawing should stop.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Tables.BeforeRowLayoutEventArgs.CellStyle">
            <summary>
            Gets or sets the cell style.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Tables.BeforeRowLayoutEventArgs.ColumnSpanMap">
            <summary>
            Gets or sets the span map.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Tables.BeforeRowLayoutEventArgs.IgnoreColumnFormat">
            <summary>
            Gets or sets a value indicating whether column string format should be ignored.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Tables.BeforeRowLayoutEventArgs.MinimalHeight">
            <summary>
            Sets the minimal height of the row.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Tables.BeforeRowLayoutEventArgs.RowIndex">
            <summary>
            Gets the index of the row. Read-Only.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Tables.BeforeRowLayoutEventArgs.Skip">
            <summary>
            Gets or sets a value indicating whether this row should be ignored.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Tables.BeforeRowLayoutEventHandler">
             <summary>
             Represents the method that handles StartRowLayout event of PdfSimpleTable.
             </summary>
             <param name="sender">The sender of the event.</param>
             <param name="args">The arguments of the event.</param>
             <remarks>This event is raised when starting a row layout.</remarks>     
             <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class
             <seealso cref="T:ComponentPro.Pdf.Tables.PdfSimpleTable" /> Class
        </member>
        <member name="T:ComponentPro.Pdf.Tables.AfterCellLayoutEventArgs">
             <summary>
             Represents arguments of AfterCellLayout Event.
             </summary>
             <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class
             <seealso cref="T:ComponentPro.Pdf.Tables.PdfSimpleTable" /> Class
        </member>
        <member name="T:ComponentPro.Pdf.Tables.AfterCellLayoutEventHandler">
             <summary>
             Represents the method that will handle AfterCellLayout event of PdfSimpleTable.
             </summary>
             <param name="sender">The sender of the event.</param>
             <param name="args">The arguments of the event.</param>
             <remarks>This event is raised when finished laying out a cell on a page.</remarks>
             <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class
             <seealso cref="T:ComponentPro.Pdf.Tables.PdfSimpleTable" /> Class
        </member>
        <member name="T:ComponentPro.Pdf.Tables.AfterRowLayoutEventArgs">
             <summary>
             Represents the arguments of AfterRowLayoutEvent.
             </summary>
             <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class
             <seealso cref="T:ComponentPro.Pdf.Tables.PdfSimpleTable" /> Class
        </member>
        <member name="P:ComponentPro.Pdf.Tables.AfterRowLayoutEventArgs.Bounds">
            <summary>
            Gets or sets the row bounds. Read-Only.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Tables.AfterRowLayoutEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether this row should be the last one printed.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Tables.AfterRowLayoutEventArgs.LayoutCompleted">
            <summary>
            Gets a value indicating whether the row was drawn completely
            (nothing should be printed on the next page). Read-Only.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Tables.AfterRowLayoutEventArgs.RowIndex">
            <summary>
            Gets the index of the row. Read-Only.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Tables.AfterRowLayoutEventHandler">
             <summary>
             Represents the method that will handle AfterRowLayout event of PdfSimpleTable.
             </summary>
             <param name="sender">The sender of the event.</param>
             <param name="args">The arguments of the event.</param>
             <remarks>This event is raised when finishing a row in a layout.</remarks>
             <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class
             <seealso cref="T:ComponentPro.Pdf.Tables.PdfSimpleTable" /> Class
        </member>
        <member name="T:ComponentPro.Pdf.Tables.SimpleTableBeforePageLayoutEventArgs">
            <summary>
            Represents the arguments of BeforePageLayoutEvent.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Graphics.BeforePageLayoutEventArgs" /> Class    
        </member>
        <member name="P:ComponentPro.Pdf.Tables.SimpleTableBeforePageLayoutEventArgs.StartRowIndex">
            <summary>
            Gets the start row. Read-Only.
            </summary>
            <value>The index of the start row.</value>
        </member>
        <member name="T:ComponentPro.Pdf.Tables.SimpleTableAfterPageLayoutEventArgs">
            <summary>
            Represents the arguments of SimpleTableAfterPageLayout Event.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Graphics.AfterPageLayoutEventArgs" /> Class    
        </member>
        <member name="P:ComponentPro.Pdf.Tables.SimpleTableAfterPageLayoutEventArgs.AfterRowIndex">
            <summary>
            Gets the end row. Read-Only.
            </summary>
            <value>The index of the last row.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Tables.SimpleTableAfterPageLayoutEventArgs.StartRowIndex">
            <summary>
            Gets the start row. Read-Only.
            </summary>
            <value>The index of the start row.</value>
        </member>
        <member name="T:ComponentPro.Pdf.Tables.PdfCellStyle">
            <summary>
            Represents the information about the cell style.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class  
            <seealso cref="T:ComponentPro.Pdf.Tables.PdfSimpleTable" /> Class 
        </member>
        <member name="M:ComponentPro.Pdf.Tables.PdfCellStyle.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Tables.PdfCellStyle" /> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Tables.PdfCellStyle.#ctor(ComponentPro.Pdf.Graphics.PdfFont,ComponentPro.Pdf.Graphics.PdfBrush,ComponentPro.Pdf.Graphics.PdfPen)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Tables.PdfCellStyle" /> class with specified font,brush and pen.
            </summary>
            <param name="font">The font of the cell text.</param>
            <param name="fontBrush">the color which fills the cell text.</param>
            <param name="borderPen">The color of the cell border.</param>
        </member>
        <member name="P:ComponentPro.Pdf.Tables.PdfCellStyle.BackgroundBrush">
            <summary>
            Gets or sets the color which fills the background of the cell.
            </summary>
            <remarks>It's null by default.</remarks>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class  
            <seealso cref="T:ComponentPro.Pdf.Tables.PdfSimpleTable" /> Class 
        </member>
        <member name="P:ComponentPro.Pdf.Tables.PdfCellStyle.BorderPen">
            <summary>
            Gets or sets the color which draws the border of the cell.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class  
            <seealso cref="T:ComponentPro.Pdf.Tables.PdfSimpleTable" /> Class 
        </member>
        <member name="P:ComponentPro.Pdf.Tables.PdfCellStyle.Font">
            <summary>
            Gets or sets the font of the text. 
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class  
            <seealso cref="T:ComponentPro.Pdf.Tables.PdfSimpleTable" /> Class 
        </member>
        <member name="P:ComponentPro.Pdf.Tables.PdfCellStyle.StringFormat">
            <summary>
            Gets or sets the string format of the cell text.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class  
            <seealso cref="T:ComponentPro.Pdf.Tables.PdfSimpleTable" /> Class 
        </member>
        <member name="P:ComponentPro.Pdf.Tables.PdfCellStyle.TextBrush">
            <summary>
            Gets or sets the color which fills the cell text.
            </summary>
            <remarks>This brush will be used to fill glyphs interior, which is the default.
            </remarks>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class  
            <seealso cref="T:ComponentPro.Pdf.Tables.PdfSimpleTable" /> Class 
        </member>
        <member name="P:ComponentPro.Pdf.Tables.PdfCellStyle.TextPen">
            <summary>
            Gets or sets the color which draws the text outlines.
            </summary>
            <remarks>It should be null for default text representation.</remarks>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class  
            <seealso cref="T:ComponentPro.Pdf.Tables.PdfSimpleTable" /> Class 
        </member>
        <member name="T:ComponentPro.Pdf.Tables.PdfColumn">
            <summary>
            Represents a single column of the table.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Tables.PdfColumn.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Tables.PdfColumn" /> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Tables.PdfColumn.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Tables.PdfColumn" /> class with specified column name.
            </summary>
            <param name="columnName">The name of the column.</param>
        </member>
        <member name="P:ComponentPro.Pdf.Tables.PdfColumn.ColumnName">
            <summary>
            Gets or sets name of the column.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Tables.PdfColumn.StringFormat">
            <summary>
             Gets or sets the string format of the column text
            </summary>
            <value>The format of the cell text.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Tables.PdfColumn.Width">
            <summary>
            Gets or sets the width of the column.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Tables.PdfColumnCollection">
            <summary>
            Represents the collection of the columns.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfCollection" /> Class 
        </member>
        <member name="M:ComponentPro.Pdf.Tables.PdfColumnCollection.Add(ComponentPro.Pdf.Tables.PdfColumn)">
             <summary>
             Add the specified <see cref="T:ComponentPro.Pdf.Tables.PdfColumn" /> in specified <see cref="T:ComponentPro.Pdf.Tables.PdfColumnCollection" />
             </summary>
             <param name="column">The <see cref="T:ComponentPro.Pdf.Tables.PdfColumn" />.</param>
             <seealso cref="T:ComponentPro.Pdf.PdfCollection" /> Class 
        </member>
        <member name="P:ComponentPro.Pdf.Tables.PdfColumnCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ComponentPro.Pdf.Tables.PdfColumn" /> at the specified index.Read-Only.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Tables.PdfHeaderSource">
             <summary>
             Specifies the values where the header should formed from.
             </summary>
             <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class  
             <seealso cref="T:ComponentPro.Pdf.Tables.PdfColumn" /> Class  
        </member>
        <member name="F:ComponentPro.Pdf.Tables.PdfHeaderSource.ColumnCaptions">
            <summary>
            The header is formed from column captions' values.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Tables.PdfHeaderSource.Rows">
            <summary>
            The header is formed from rows.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Tables.PdfSimpleTable">
            <summary>
            Create table by entering the data manually or from an external data source.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Tables.PdfSimpleTable.ApplyBuiltinStyle(ComponentPro.Pdf.PdfSimpleTableBuiltinStyle)">
            <summary>
            Apply built-in table style to the table
            </summary>
            <param name="tableStyle"> enum of PdfSimpleTableBuiltinStyle</param>
        </member>
        <member name="M:ComponentPro.Pdf.Tables.PdfSimpleTable.ApplyBuiltinStyle(ComponentPro.Pdf.PdfSimpleTableBuiltinStyle,ComponentPro.Pdf.Tables.PdfSimpleTableBuiltinStyleSettings)">
            <summary>
            Apply built-in table style to the table
            </summary>
            <param name="lightTableStyle">enum of PdfSimpleTableBuiltinStyle</param>
            <param name="lightTableSetting"> The PdfSimpleTableBuiltinStyleSettings</param>
        </member>
        <member name="M:ComponentPro.Pdf.Tables.PdfSimpleTable.Draw(ComponentPro.Pdf.Graphics.PdfGraphics,System.Drawing.RectangleF)">
             Draw the <see cref="T:ComponentPro.Pdf.Tables.PdfSimpleTable" /> in the specified <see cref="T:ComponentPro.Pdf.Graphics.PdfGraphics" /> and bounds.
             <param name="graphics">Graphics context where the element should be drawn.</param>
             <param name="bounds">The bounds of the table should be drawn.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Tables.PdfSimpleTable.Draw(ComponentPro.Pdf.PdfPage,System.Drawing.PointF)">
             <summary>
             Draw the <see cref="T:ComponentPro.Pdf.Tables.PdfSimpleTable" /> in the specified <see cref="T:ComponentPro.Pdf.PdfPage" /> and location.
             </summary>
             <param name="page">The page of the table should be drawn.</param>
             <param name="location">The x,y coordinates of the table.</param>
             <returns>The PdfSimpleTable layout result</returns>      
        </member>
        <member name="M:ComponentPro.Pdf.Tables.PdfSimpleTable.Draw(ComponentPro.Pdf.PdfPage,System.Drawing.RectangleF)">
             <summary>
             Draw the <see cref="T:ComponentPro.Pdf.Tables.PdfSimpleTable" /> in the specified <see cref="T:ComponentPro.Pdf.PdfPage" /> and bounds.
             </summary>
             <param name="page">The page of the table should be drawn.</param>
             <param name="bounds">The bounds of the table.</param>
             <returns>
             The PdfSimpleTable layout result
             </returns>
        </member>
        <member name="M:ComponentPro.Pdf.Tables.PdfSimpleTable.Draw(ComponentPro.Pdf.Graphics.PdfGraphics,System.Drawing.PointF,System.Single)">
            <summary>
            Draw the <see cref="T:ComponentPro.Pdf.Tables.PdfSimpleTable" /> in the specified <see cref="T:ComponentPro.Pdf.Graphics.PdfGraphics" /> with specified graphics ,location and width.
            </summary>
            <param name="graphics">Graphics context where the element should be printed.</param>
            <param name="location">The location of the element.</param>
            <param name="width">The width of the table.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Tables.PdfSimpleTable.Draw(ComponentPro.Pdf.PdfPage,System.Drawing.PointF,ComponentPro.Pdf.Tables.PdfSimpleTableLayoutFormat)">
            <summary>
            Draw the <see cref="T:ComponentPro.Pdf.Tables.PdfSimpleTable" /> in the specified <see cref="T:ComponentPro.Pdf.PdfPage" />,location and <see cref="T:ComponentPro.Pdf.Tables.PdfSimpleTableLayoutFormat" />.
            </summary>
            <param name="page">The page of the table should be drawn.</param>
            <param name="location">The x,y coordinates of the table.</param>
            <param name="format">The PdfSimpleTable layout format.</param>       
            <returns>
            The PdfSimpleTable layout result.
            </returns>
        </member>
        <member name="M:ComponentPro.Pdf.Tables.PdfSimpleTable.Draw(ComponentPro.Pdf.PdfPage,System.Drawing.RectangleF,ComponentPro.Pdf.Tables.PdfSimpleTableLayoutFormat)">
            <summary>
            Draw the <see cref="T:ComponentPro.Pdf.Tables.PdfSimpleTable" /> in the specified <see cref="T:ComponentPro.Pdf.PdfPage" />,bounds and layout format.
            </summary>
            <param name="page">The page of the table should be drawn.</param>
            <param name="bounds">The bounds of the table.</param>
            <param name="format">The PdfSimpleTable layout format.</param>
            <returns>
            The PdfSimpleTable layout result
            </returns>
        </member>
        <member name="M:ComponentPro.Pdf.Tables.PdfSimpleTable.Draw(ComponentPro.Pdf.PdfPage,System.Single,System.Single)">
             <summary>
             Draw the <see cref="T:ComponentPro.Pdf.Tables.PdfSimpleTable" /> in the specified <see cref="T:ComponentPro.Pdf.PdfPage" /> and x, y coordinates.
             </summary>
             <param name="page">The page of the table should be drawn.</param>
             <param name="x">The X co-ordinate of the element.</param>
             <param name="y">The y coordinate of the element.</param>
             <returns>
             The PdfSimpleTable layout result
             </returns>
        </member>
        <member name="M:ComponentPro.Pdf.Tables.PdfSimpleTable.Draw(ComponentPro.Pdf.Graphics.PdfGraphics,System.Single,System.Single)">
             <summary>
             Draw the <see cref="T:ComponentPro.Pdf.Tables.PdfSimpleTable" /> in the specified <see cref="T:ComponentPro.Pdf.Graphics.PdfGraphics" /> and x,y coordinates.
             </summary>
             <param name="graphics">Graphics context where the element should be printed.</param>
             <param name="x">The x co-ordinate of the element.</param>
             <param name="y">The y co-ordinate of the element.</param>              
        </member>
        <member name="M:ComponentPro.Pdf.Tables.PdfSimpleTable.Draw(ComponentPro.Pdf.Graphics.PdfGraphics,System.Single,System.Single,System.Single)">
             <summary>
             Draw the <see cref="T:ComponentPro.Pdf.Tables.PdfSimpleTable" /> with the specified <see cref="T:ComponentPro.Pdf.Graphics.PdfGraphics" />,x and y coordinates and width.
             </summary>
             <param name="graphics">Graphics context where the element should be drawn.</param>
             <param name="x">The x co-ordinate of the element.</param>
             <param name="y">The y co-ordinate of the element.</param>
             <param name="width">The width of the table.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Tables.PdfSimpleTable.Draw(ComponentPro.Pdf.PdfPage,System.Single,System.Single,ComponentPro.Pdf.Tables.PdfSimpleTableLayoutFormat)">
             <summary>
             Draw the <see cref="T:ComponentPro.Pdf.Tables.PdfSimpleTable" /> in the specified <see cref="T:ComponentPro.Pdf.PdfPage" /> , x,y coordinates and layout format.
             </summary>
             <param name="page">The page of the table should be drawn.</param>
             <param name="x">The x co-ordinate of the element.</param>
             <param name="y">The y coordinate of the element.</param>
             <param name="format">The PdfSimpleTable layout format.</param>
             <returns>The PdfSimpleTable layout result.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Tables.PdfSimpleTable.Draw(ComponentPro.Pdf.PdfPage,System.Single,System.Single,System.Single)">
             <summary>
             Draw the <see cref="T:ComponentPro.Pdf.Tables.PdfSimpleTable" /> in the specified <see cref="T:ComponentPro.Pdf.PdfPage" /> ,x,y coordinates and width.
             </summary>
             <param name="page">The page of the table should be drawn.</param>
             <param name="x">The x co-ordinate of the element.</param>
             <param name="y">The y coordinate of the element.</param>
             <param name="width">The width of the table.</param>
             <returns>The PdfSimpleTable layout result</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Tables.PdfSimpleTable.Draw(ComponentPro.Pdf.PdfPage,System.Single,System.Single,System.Single,ComponentPro.Pdf.Tables.PdfSimpleTableLayoutFormat)">
             <summary>
             Draw the <see cref="T:ComponentPro.Pdf.Tables.PdfSimpleTable" /> in the specified <see cref="T:ComponentPro.Pdf.PdfPage" />,x,y coordinates,width and layout format.
             </summary>
             <param name="page">The page of the table should be drawn.</param>
             <param name="x">The x coordinate of the element.</param>
             <param name="y">The y coordinate of the element.</param>
             <param name="width">The width of the table.</param>
             <param name="format">The PdfSimpleTable layout format.</param>
             <returns>The PdfSimpleTable layout result.</returns>                
        </member>
        <member name="M:ComponentPro.Pdf.Tables.PdfSimpleTable.DrawInternal(ComponentPro.Pdf.Graphics.PdfGraphics)">
            <summary>
            Draws an element on the Graphics.
            </summary>
            <param name="graphics">Graphics context where the element should be printed.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Tables.PdfSimpleTable.Layout(ComponentPro.Pdf.Graphics.PdfLayoutParams)">
            <summary>
            Layouts the element.
            </summary>
            <param name="param">Lay outing parameters.</param>
            <returns>Returns lay outing results.</returns>
        </member>
        <member name="P:ComponentPro.Pdf.Tables.PdfSimpleTable.AllowRowBreakAcrossPages">
            <summary>
            Gets a value indicating the row break is to be made or not.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Tables.PdfSimpleTable.Columns">
            <summary>
            Gets the collection of columns contained in the table.Read-Only.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class  
            <seealso cref="T:ComponentPro.Pdf.Tables.PdfColumn" /> Class      
            <seealso cref="T:ComponentPro.Pdf.Tables.PdfSimpleTable" /> Class  
        </member>
        <member name="P:ComponentPro.Pdf.Tables.PdfSimpleTable.DataMember">
            <summary>
            Gets or sets the data member which binds the specific data source when there is more than one data source.
            </summary>
            <remarks>This property is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class  
            <seealso cref="T:ComponentPro.Pdf.Tables.PdfColumn" /> Class      
            <seealso cref="T:ComponentPro.Pdf.Tables.PdfSimpleTable" /> Class  
        </member>
        <member name="P:ComponentPro.Pdf.Tables.PdfSimpleTable.DataSource">
            <summary>
            Gets or sets the data source to bind into PdfSimpleTable.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class  
            <seealso cref="T:ComponentPro.Pdf.Tables.PdfColumn" /> Class      
            <seealso cref="T:ComponentPro.Pdf.Tables.PdfSimpleTable" /> Class  
        </member>
        <member name="P:ComponentPro.Pdf.Tables.PdfSimpleTable.DataSourceType">
            <summary>
            Gets or sets the data source type of the PdfSimpleTable.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class  
            <seealso cref="T:ComponentPro.Pdf.Tables.PdfColumn" /> Class      
            <seealso cref="T:ComponentPro.Pdf.Tables.PdfSimpleTable" /> Class  
        </member>
        <member name="P:ComponentPro.Pdf.Tables.PdfSimpleTable.IgnoreSorting">
            <summary>
            Gets or sets a value indicating whether PdfSimpleTable should ignore sorting in data table.
            </summary>
            <remarks>This property is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class  
            <seealso cref="T:ComponentPro.Pdf.PdfPageTemplateElement" /> Class      
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfLayoutElement" /> Class      
        </member>
        <member name="P:ComponentPro.Pdf.Tables.PdfSimpleTable.Rows">
            <summary>
            Gets the collection of rows contained in the table.Read-Only.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class  
            <seealso cref="T:ComponentPro.Pdf.Tables.PdfColumn" /> Class      
            <seealso cref="T:ComponentPro.Pdf.Tables.PdfSimpleTable" /> Class  
        </member>
        <member name="P:ComponentPro.Pdf.Tables.PdfSimpleTable.Style">
            <summary>
            Gets or sets the style properties in PdfSimpleTable.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class  
            <seealso cref="T:ComponentPro.Pdf.PdfPageTemplateElement" /> Class      
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfLayoutElement" /> Class  
        </member>
        <member name="E:ComponentPro.Pdf.Tables.PdfSimpleTable.BeforeCellLayout">
            <summary>
            The event raised on starting cell lay outing.
            </summary>
        </member>
        <member name="E:ComponentPro.Pdf.Tables.PdfSimpleTable.BeforeRowLayout">
            <summary>
            The event raised on starting row lay outing.
            </summary>
        </member>
        <member name="E:ComponentPro.Pdf.Tables.PdfSimpleTable.AfterCellLayout">
            <summary>
            The event raised on having finished cell layout.
            </summary>
        </member>
        <member name="E:ComponentPro.Pdf.Tables.PdfSimpleTable.AfterRowLayout">
            <summary>
            The event raised on having finished row lay outing.
            </summary>
        </member>
        <member name="E:ComponentPro.Pdf.Tables.PdfSimpleTable.QueryColumnCount">
            <summary>
            The event raised when the column number is requested.
            </summary>
        </member>
        <member name="E:ComponentPro.Pdf.Tables.PdfSimpleTable.QueryNextRow">
            <summary>
            The event raised when the next row data is requested.
            </summary>
        </member>
        <member name="E:ComponentPro.Pdf.Tables.PdfSimpleTable.QueryRowCount">
            <summary>
            The event raised when the row number is requested.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Tables.PdfSimpleTableBuiltinStyleSettings.ApplyStyleForBandedColumns">
            <summary>
            Gets or sets a value indicating whether to apply style bands to the columns in a table,
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Tables.PdfSimpleTableBuiltinStyleSettings.ApplyStyleForBandedRows">
            <summary>
            Gets or sets a value indicating whether to apply style bands to the rows in a table
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Tables.PdfSimpleTableBuiltinStyleSettings.ApplyStyleForFirstColumn">
            <summary>
            Gets or sets a value indicating whether to apply first-column formatting to the first column of the specified table
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Tables.PdfSimpleTableBuiltinStyleSettings.ApplyStyleForHeaderRow">
            <summary>
             Gets or sets a value indicating whether to apply heading-row formatting to the first row of the table.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Tables.PdfSimpleTableBuiltinStyleSettings.ApplyStyleForLastColumn">
            <summary>
            Gets or sets a value indicating whether to apply first-column formatting to the first column of the specified table.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Tables.PdfSimpleTableBuiltinStyleSettings.ApplyStyleForLastRow">
            <summary>
            Gets or sets a value indicating whether to apply last-row formatting to the last row of the specified table.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Tables.PdfSimpleTableDataSourceType">
             <summary>
             Specifies the data source type.
             </summary>
             <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class  
             <seealso cref="T:ComponentPro.Pdf.Tables.PdfColumn" /> Class  
        </member>
        <member name="F:ComponentPro.Pdf.Tables.PdfSimpleTableDataSourceType.External">
            <summary>
            Specifies that the PdfSimpleTable has been bind to an external data source.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Tables.PdfSimpleTableDataSourceType.TableDirect">
            <summary>
            Specifies that the values are directly bind to the PdfSimpleTable.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Tables.PdfSimpleTableException">
            <summary>
            Represents as a message deliverer from PdfSimpleTable class to the user.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfException" /> Class 
        </member>
        <member name="T:ComponentPro.Pdf.Tables.PdfSimpleTableLayoutFormat">
            <summary>
            Represents the parameters for PdfSimpleTable layout.
            </summary>  
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfLayoutSettings" /> Class    
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class    
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfLayoutBreakType" /> Class  
        </member>
        <member name="M:ComponentPro.Pdf.Tables.PdfSimpleTableLayoutFormat.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Tables.PdfSimpleTableLayoutFormat" /> class.
             </summary>
             <seealso cref="T:ComponentPro.Pdf.Graphics.PdfLayoutSettings" /> Class    
             <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class    
             <seealso cref="T:ComponentPro.Pdf.Graphics.PdfLayoutBreakType" /> Class  
        </member>
        <member name="M:ComponentPro.Pdf.Tables.PdfSimpleTableLayoutFormat.#ctor(ComponentPro.Pdf.Graphics.PdfLayoutSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Tables.PdfSimpleTableLayoutFormat" /> class with specified layout format.
            </summary>
            <param name="baseFormat">The layout format.</param>
        </member>
        <member name="P:ComponentPro.Pdf.Tables.PdfSimpleTableLayoutFormat.EndColumnIndex">
            <summary>
            Gets or sets the end column index.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfLayoutSettings" /> Class    
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class    
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfLayoutBreakType" /> Class  
        </member>
        <member name="P:ComponentPro.Pdf.Tables.PdfSimpleTableLayoutFormat.StartColumnIndex">
            <summary>
            Gets or sets the start column index.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfLayoutSettings" /> Class    
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class    
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfLayoutBreakType" /> Class  
        </member>
        <member name="T:ComponentPro.Pdf.Tables.PdfSimpleTableLayoutResult">
            <summary>
            Represents the result of PdfSimpleTable which contains bounds and resultant page.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.Graphics.PdfLayoutResult" /> Class 
        </member>
        <member name="P:ComponentPro.Pdf.Tables.PdfSimpleTableLayoutResult.LastRowIndex">
            <summary>
            Gets the index of the last row. Read-Only.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Tables.PdfSimpleTableStyle">
            <summary>
            Represents the styles of PdfSimpleTable.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class  
            <seealso cref="T:ComponentPro.Pdf.PdfPageTemplateElement" /> Class      
            <seealso cref="T:ComponentPro.Pdf.Tables.PdfSimpleTable" /> Class  
        </member>
        <member name="M:ComponentPro.Pdf.Tables.PdfSimpleTableStyle.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Tables.PdfSimpleTableStyle" /> class.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Tables.PdfSimpleTableStyle.AlternateStyle">
            <summary>
            Gets or sets the alternate style which is the style of the odd rows.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class  
            <seealso cref="T:ComponentPro.Pdf.PdfPageTemplateElement" /> Class      
            <seealso cref="T:ComponentPro.Pdf.Tables.PdfSimpleTable" /> Class 
        </member>
        <member name="P:ComponentPro.Pdf.Tables.PdfSimpleTableStyle.BorderOverlapStyle">
            <summary>
            Gets or sets a value indicating whether the cell borders should overlap its neighbor's borders 
            or be drawn in the cell interior.
            </summary>
            <remarks>Please, use this property with caution,because it might cause unexpected results 
            if borders are not the same width and color.
            </remarks>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class  
            <seealso cref="T:ComponentPro.Pdf.Tables.PdfColumn" /> Class  
        </member>
        <member name="P:ComponentPro.Pdf.Tables.PdfSimpleTableStyle.BorderPen">
            <summary>
            Gets or sets the color of the table border.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class  
            <seealso cref="T:ComponentPro.Pdf.Tables.PdfColumn" /> Class 
        </member>
        <member name="P:ComponentPro.Pdf.Tables.PdfSimpleTableStyle.CellPadding">
            <summary>
            Gets or sets the space inside the cells.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class  
            <seealso cref="T:ComponentPro.Pdf.Tables.PdfColumn" /> Class
        </member>
        <member name="P:ComponentPro.Pdf.Tables.PdfSimpleTableStyle.CellSpacing">
            <summary>
            Gets or sets the space between cells.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class  
            <seealso cref="T:ComponentPro.Pdf.Tables.PdfColumn" /> Class  
        </member>
        <member name="P:ComponentPro.Pdf.Tables.PdfSimpleTableStyle.DefaultStyle">
            <summary>
            Gets or sets the default cell style.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class  
            <seealso cref="T:ComponentPro.Pdf.PdfPageTemplateElement" /> Class      
            <seealso cref="T:ComponentPro.Pdf.Tables.PdfSimpleTable" /> Class 
        </member>
        <member name="P:ComponentPro.Pdf.Tables.PdfSimpleTableStyle.HeaderRowCount">
            <summary>
            Gets or sets the header rows count.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class  
            <seealso cref="T:ComponentPro.Pdf.Tables.PdfColumn" /> Class 
        </member>
        <member name="P:ComponentPro.Pdf.Tables.PdfSimpleTableStyle.HeaderSource">
            <summary>
            Gets or sets a value indicating whether to use rows or column captions for forming header.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class  
            <seealso cref="T:ComponentPro.Pdf.Tables.PdfColumn" /> Class  
        </member>
        <member name="P:ComponentPro.Pdf.Tables.PdfSimpleTableStyle.HeaderStyle">
            <summary>
            Gets or sets the header cell style.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class  
            <seealso cref="T:ComponentPro.Pdf.PdfPageTemplateElement" /> Class      
            <seealso cref="T:ComponentPro.Pdf.Tables.PdfSimpleTable" /> Class 
        </member>
        <member name="P:ComponentPro.Pdf.Tables.PdfSimpleTableStyle.RepeatHeader">
            <summary>
            Gets or sets a value indicating whether to repeat header on each page.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class  
            <seealso cref="T:ComponentPro.Pdf.Tables.PdfColumn" /> Class  
        </member>
        <member name="P:ComponentPro.Pdf.Tables.PdfSimpleTableStyle.ShowHeader">
            <summary>
            Gets or sets a value indicating whether the header is visible.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class  
            <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class  
            <seealso cref="T:ComponentPro.Pdf.Tables.PdfColumn" /> Class  
        </member>
        <member name="T:ComponentPro.Pdf.Tables.PdfRow">
            <summary>
            Represents a single row of the table.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Tables.PdfRow.Values">
            <summary>
            Gets or sets the values which adds to the row.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Tables.PdfRowCollection">
            <summary>
             Represents the collection of the rows in a PdfSimpleTable.
            </summary>
            <seealso cref="T:ComponentPro.Pdf.PdfCollection" /> Class  
        </member>
        <member name="M:ComponentPro.Pdf.Tables.PdfRowCollection.Add(ComponentPro.Pdf.Tables.PdfRow)">
            <summary>
            Adds the specified row into collection.
            </summary>
            <param name="row">The <see cref="T:ComponentPro.Pdf.Tables.PdfRow" /> to be added into list.</param> 
        </member>
        <member name="M:ComponentPro.Pdf.Tables.PdfRowCollection.Add(System.Object[])">
            <summary>
            Gets or sets the values which adds the row into <see cref="T:ComponentPro.Pdf.Tables.PdfRowCollection" />.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Tables.PdfRowCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ComponentPro.Pdf.Tables.PdfColumn" /> at the specified index.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Tables.QueryColumnCountEventArgs">
             <summary>
             Represents the arguments of the ColumnNumberEvent.
             </summary>
             <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class
             <seealso cref="T:ComponentPro.Pdf.Tables.PdfSimpleTable" /> Class
        </member>
        <member name="P:ComponentPro.Pdf.Tables.QueryColumnCountEventArgs.ColumnCount">
            <summary>
            Gets or sets the column number.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Tables.QueryColumnCountEventHandler">
             <summary>
             Represents the method for handling ColumnNumberEvent. 
             </summary>
             <param name="sender">The sender of the event.</param>
             <param name="args">The arguments of the event.</param>    
             <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class
             <seealso cref="T:ComponentPro.Pdf.Tables.PdfSimpleTable" /> Class
        </member>
        <member name="T:ComponentPro.Pdf.Tables.QueryNextRowEventArgs">
             <summary>
             Represents arguments of the NextRowEvent.
             </summary>
             <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class
             <seealso cref="T:ComponentPro.Pdf.Tables.PdfSimpleTable" /> Class
        </member>
        <member name="P:ComponentPro.Pdf.Tables.QueryNextRowEventArgs.ColumnCount">
            <summary>
            Gets the column count. Read-Only.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Tables.QueryNextRowEventArgs.RowData">
            <summary>
            Gets or sets the row data.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Tables.QueryNextRowEventArgs.RowIndex">
            <summary>
            Gets the index of the row. Read-Only.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Tables.QueryNextRowEventHandler">
             <summary>
             Represents the method for handling NextRowEvent of PdfSimpleTable
             </summary>
             <param name="sender">The sender of the event.</param>
             <param name="args">The arguments of the event.</param>    
             <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class
             <seealso cref="T:ComponentPro.Pdf.Tables.PdfSimpleTable" /> Class
        </member>
        <member name="T:ComponentPro.Pdf.Tables.QueryRowCountEventArgs">
             <summary>
             Represents the arguments of the RowNumberEvent.
             </summary>
             <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class
             <seealso cref="T:ComponentPro.Pdf.Tables.PdfSimpleTable" /> Class
        </member>
        <member name="P:ComponentPro.Pdf.Tables.QueryRowCountEventArgs.RowCount">
            <summary>
            Gets or sets the column number.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Tables.QueryRowCountEventHandler">
             <summary>
             Represents the method for handling RowNumberEvent
             </summary>
             <param name="sender">The sender of the event.</param>
             <param name="args">The arguments of the event.</param>   
             <seealso cref="T:ComponentPro.Pdf.PdfDocument" /> Class
             <seealso cref="T:ComponentPro.Pdf.Tables.PdfSimpleTable" /> Class
        </member>
        <member name="T:ComponentPro.Pdf.Xfa.PdfImportedXfaField">
            <summary>
            Represents Loaded field.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Xfa.PdfXfaField">
            <summary>
            Represents text field in the XFA form.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaField.Margins">
            <summary>
            Gets or sets the margins of the field.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaField.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaField.Visibility">
            <summary>
            Gets or sets the visibility of the field
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfImportedXfaArea.Fields">
            <summary>
            Represents loaded form fields collection.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfImportedXfaStyledField.Border">
            <summary>
            Gets or set the border
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfImportedXfaStyledField.Caption">
            <summary>
            Gets or sets the caption
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfImportedXfaStyledField.Font">
            <summary>
            Gets or sets the Font
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfImportedXfaStyledField.ForeColor">
            <summary>
            Gets or set the fore color.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfImportedXfaStyledField.Height">
            <summary>
            Gets or sets the height
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfImportedXfaStyledField.HorizontalAlignment">
            <summary>
            Gets or sets the horizontal alignment of the field
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfImportedXfaStyledField.Location">
            <summary>
            Gets or sets the location
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfImportedXfaStyledField.ReadOnly">
            <summary>
            Gets or sets the field is readonly
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfImportedXfaStyledField.ToolTip">
            <summary>
            Gets or sets tool tip
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfImportedXfaStyledField.VerticalAlignment">
            <summary>
            Gets or sets the vertical alignment of the field
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfImportedXfaStyledField.Width">
            <summary>
            Gets or sets the width
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfImportedXfaCheckBoxField.CheckBoxAppearance">
            <summary>
            Gets or sets the appearance of the check box
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfImportedXfaCheckBoxField.CheckBoxSize">
            <summary>
            Gets or sets the size of the check box
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfImportedXfaCheckBoxField.CheckedStyle">
            <summary>
            Gets or sets the checked styles of the check box
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfImportedXfaCheckBoxField.IsChecked">
            <summary>
            Gets or sets a value indicating whether this is checked or not
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfImportedXfaComboBoxField.Items">
            <summary>
            Gets the items of the combo box field
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfImportedXfaComboBoxField.SelectedIndex">
            <summary>
            Gets or sets the default index of the combo box field
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfImportedXfaComboBoxField.SelectedValue">
            <summary>
            Gets or Sets the default value of the combo box field
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfImportedXfaDateTimeField.Format">
            <summary>
            Get or sets the date field format
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfImportedXfaDateTimeField.Pattern">
            <summary>
            Set the date field pattern
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfImportedXfaDateTimeField.Value">
            <summary>
            Gets or sets the date time
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfImportedXfaDocument.Save(System.String)">
            <summary>
            Save the document
            </summary>
            <param name="fileName"></param>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfImportedXfaDocument.Save(System.IO.Stream)">
            <summary>
            Save the document
            </summary>
            <param name="stream"></param>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfImportedXfaDocument.Save(System.IO.Stream,System.Web.HttpContext)">
            <summary>
            Save the document
            </summary>        
            <param name="stream">The stream where to save the document.</param>
            /// <param name="response">The HTTP response stream object.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfImportedXfaDocument.Save(System.String,System.Web.HttpResponse,ComponentPro.Pdf.HttpReadType)">
            <summary>
            Save the document
            </summary>
            <param name="fileName">The name of the document.</param>
            <param name="response">The HTTP response stream object.</param>
            <param name="type">The type of the reading document.</param>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfImportedXfaDocument.XfaForm">
            <summary>
            Get value of the XFA form.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Xfa.PdfImportedXfaFieldCollection">
            <summary>
            Represents field collection of loaded form.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfImportedXfaFieldCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Xfa.PdfImportedXfaFieldCollection" /> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfImportedXfaFieldCollection.Add(ComponentPro.Pdf.Xfa.PdfXfaField)">
            <summary>
            Add new XFA form fields.
            </summary>
            <param name="xfaField"></param>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfImportedXfaFieldCollection.Clear">
            <summary>
            Clear all the fields.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfImportedXfaFieldCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>Returns an enumerator that iterates through a collection.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfImportedXfaFieldCollection.Remove(ComponentPro.Pdf.Xfa.PdfImportedXfaField)">
            <summary>
            Remove the specified XFA field.
            </summary>
            <param name="lField">The lField item whic is to be removed to the XFA form.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfImportedXfaFieldCollection.RemoveAt(System.Int32)">
            <summary>
            Remove the field with specific index.
            </summary>
            <param name="index"></param>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfImportedXfaFieldCollection.Count">
            <summary>
            Gets the field count.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfImportedXfaFieldCollection.Item(System.String)">
            <summary>
            Returns field with specified name.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Xfa.PdfImportedXfaForm">
            <summary>
            Represents Loaded XFA form.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfImportedXfaForm.TryGetFieldByCompeleteName(System.String)">
            <summary>
            Get the XFA field using complete field name
            </summary>
            <param name="name">complete name of the field</param>
            <returns></returns>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfImportedXfaForm.TryGetFieldByCompleteName(System.String)">
            <summary>
            Get the XFA field using complete field name
            </summary>
            <param name="name">Complete name of the field</param>
            <returns></returns>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfImportedXfaForm.TryGetFieldsByName(System.String)">
            <summary>
            Get the fields collection by field name
            </summary>
            <param name="name">Name of the field</param>
            <returns>Collection of XFA fields</returns>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfImportedXfaForm.AreaNames">
            <summary>
            Get the area name of the form.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfImportedXfaForm.CompleteFieldNames">
            <summary>
            Get the complete names of the fields
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfImportedXfaForm.FieldNames">
            <summary>
            Get all the field names
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfImportedXfaForm.Fields">
            <summary>
            Represents loaded form fields collection.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfImportedXfaForm.Height">
            <summary>
            Gets or sets the height
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfImportedXfaForm.Location">
            <summary>
            Gets or sets the location
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfImportedXfaForm.ReadOnly">
            <summary>
            Gets or sets the field is readonly
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfImportedXfaForm.SubFormNames">
            <summary>
            Gett all the subforms name
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfImportedXfaForm.Visibility">
            <summary>
            Gets or sets the visibility of the field
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfImportedXfaForm.Width">
            <summary>
            Gets or sets the width
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfImportedXfaListBoxField.Items">
            <summary>
            Gets set the list items.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfImportedXfaListBoxField.SelectedIndex">
            <summary>
            Gets or sets the default index of the list box field
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfImportedXfaListBoxField.SelectedItems">
            <summary>
            Gets or sets the items to multi select
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfImportedXfaListBoxField.SelectedValue">
            <summary>
            Gets or sets the default value of the list box field
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfImportedXfaListBoxField.SelectionMode">
            <summary>
            Get the if the field is multi select or not
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfImportedXfaNumericField.CombLenght">
            <summary>
            Gets or sets the comb cells 
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfImportedXfaNumericField.FieldType">
            <summary>
            Get the numeric field type
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfImportedXfaNumericField.NumericValue">
            <summary>
            Gets or sets the Value of the numeric Field
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfImportedXfaNumericField.PatternString">
            <summary>
            Get the pattern string
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfImportedXfaRadioButtonField.CheckedStyle">
            <summary>
            Gets or sets the checked styles of the radio button
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfImportedXfaRadioButtonField.IsChecked">
            <summary>
            Gets or sets the checked state of the radio button
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfImportedXfaRadioButtonField.RadioButtonAppearance">
            <summary>
            Gets or sets the appearance of the radio button
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfImportedXfaRadioButtonField.RadioButtonSize">
            <summary>
            Gets or sets the radio button size
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfImportedXfaRadioButtonGroup.Fields">
            <summary>
            Get the list of the PdfImportedRadionButtonFields
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfImportedXfaRadioButtonGroup.Height">
            <summary>
            Gets or sets the height
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfImportedXfaRadioButtonGroup.Location">
            <summary>
            Gets or sets the location
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfImportedXfaRadioButtonGroup.ReadOnly">
            <summary>
            Gets or sets the field is readonly
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfImportedXfaRadioButtonGroup.Visibility">
            <summary>
            Gets or sets the visibility of the field
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfImportedXfaRadioButtonGroup.Width">
            <summary>
            Gets or sets the width
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Xfa.PdfImportedXfaTextBoxField">
            <summary>
            Represents the text box field of an existing PDF document`s XFA form.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfImportedXfaTextBoxField.CombLength">
            <summary>
            Gets or sets the comb cells count;
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfImportedXfaTextBoxField.MaximumHeight">
            <summary>
            Gets or sets the maximum height of the text box
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfImportedXfaTextBoxField.MaximumLength">
            <summary>
            Gets or sets the maximum char of the text box
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfImportedXfaTextBoxField.MaximumWidth">
            <summary>
            Gets or sets the maximum width of the text box
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfImportedXfaTextBoxField.MinimumHeight">
            <summary>
            Gets or sets the minimum height of the textbox
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfImportedXfaTextBoxField.MinimumWidth">
            <summary>
            Gets or sets the minimum width of the text box
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfImportedXfaTextBoxField.PasswordCharacter">
            <summary>
            Gets or sets the password char of the text box field
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfImportedXfaTextBoxField.Text">
            <summary>
            Gets or sets the value of the Text Box
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfImportedXfaTextBoxField.Type">
            <summary>
            Gets or sets the type of the text box
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Xfa.PdfXfaBorder">
            <summary>
            Represents the border of the XFA fields
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaBorder.#ctor">
            <summary>
            Initialize the instance of <see cref="T:ComponentPro.Pdf.Xfa.PdfXfaBorder" /> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaBorder.#ctor(ComponentPro.Pdf.Graphics.PdfColor)">
            <summary>
            Initialize the instance of <see cref="T:ComponentPro.Pdf.Xfa.PdfXfaBorder" /> class.
            </summary>
            <param name="color">Border color.</param>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaBorder.BottomEdge">
            <summary>
            Gets or sets the bottom edge
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaBorder.Color">
            <summary>
            Gets or sets the border color
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaBorder.FillColor">
            <summary>
            Gets or sets the fill color of the border
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaBorder.Handedness">
            <summary>
            Gets or sets handedness of a line or edge
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaBorder.LeftEdge">
            <summary>
            Gets or sets the left edge
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaBorder.RightEdge">
            <summary>
            Gets or sets the right edge
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaBorder.Style">
            <summary>
            Gets or sets the border style 
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaBorder.TopEdge">
            <summary>
            Gets or sets the top edge
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaBorder.Visibility">
            <summary>
            Gets or sets the visibility of the border
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaBorder.Width">
            <summary>
            Gets or sets the border width
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Xfa.PdfXfaBorderStyle">
            <summary>
            Represent XFA Border style
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaBorderStyle.None">
            <summary>
            No Border
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaBorderStyle.Solid">
            <summary>
            A solid rectangle surrounding.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaBorderStyle.Dashed">
            <summary>
            A dashed rectangle surrounding.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaBorderStyle.Dotted">
            <summary>
            A dotted rectangle surrounding.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaBorderStyle.DashDot">
            <summary>
            A dashed dotted rectangle surrounding.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaBorderStyle.DashDotDot">
            <summary>
            A dashed dotted dotted rectangle surrounding.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaBorderStyle.Lowered">
            <summary>
            A lowered rectangle surrounding.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaBorderStyle.Raised">
            <summary>
            Raised rectangle surrounding.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaBorderStyle.Etched">
            <summary>
            Etched rectangle surrounding.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaBorderStyle.Embossed">
            <summary>
            Embossed rectangle surrounding.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Xfa.PdfXfaBrush">
            <summary>
            Represents the XFA brush
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Xfa.PdfXfaButtonField">
            <summary>
            Represents the XFA Button Field
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaStyledField.Border">
            <summary>
            Gets or sets the Border
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaStyledField.Font">
            <summary>
            Gets or sets the font
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaStyledField.ForeColor">
            <summary>
            Gets or sets the fore color of the field
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaStyledField.Height">
            <summary>
            Gets or sets height of the field
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaStyledField.HorizontalAlignment">
            <summary>
            Gets or sets the horizontal alignment of the field
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaStyledField.ReadOnly">
            <summary>
            Gets or sets the readonly
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaStyledField.Rotate">
            <summary>
            Gets or sets the rotation angle
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaStyledField.ToolTip">
            <summary>
            Gets or sets the tool tip
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaStyledField.VerticalAlignment">
            <summary>
            Gets or sets the vertical alignment of the field
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaStyledField.Width">
            <summary>
            Gets or sets width of the field
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaButtonField.#ctor(System.String,System.Drawing.SizeF)">
            <summary>
            Initialize the instance of the <see cref="T:ComponentPro.Pdf.Xfa.PdfXfaButtonField" /> class.
            </summary>
            <param name="name">name of the field</param>
            <param name="buttonSize">width and height of the field</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaButtonField.#ctor(System.String,System.Single,System.Single)">
            <summary>
            Initialize the instance of the <see cref="T:ComponentPro.Pdf.Xfa.PdfXfaButtonField" /> class.
            </summary>
            <param name="name">name of the field</param>
            <param name="width">field width</param>
            <param name="height">field height</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaButtonField.Clone">
            <summary>
            Clone.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaButtonField.Content">
            <summary>
            Gets or sets the content of the button field
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaButtonField.Highlight">
            <summary>
            Gets or sets the hightlight mode of the button field
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaButtonField.MouseDownText">
            <summary>
            Gets or sets the mouse down text of the button field
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaButtonField.MouseRolloverText">
            <summary>
            Gets or sets the mouse rollover text
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Xfa.PdfXfaCaption">
            <summary>
            Represents the Caption of XFA fields
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaCaption.#ctor">
            <summary>
            Initialize the instance of the caption
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaCaption.Clone">
            <summary>
            Clone the object
            </summary>
            <returns></returns>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaCaption.Font">
            <summary>
            Gets or sets the font
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaCaption.ForeColor">
            <summary>
            Gets or sets the forecolor of the caption
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaCaption.HorizontalAlignment">
            <summary>
            Gets or sets the horizontal alignment of the caption
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaCaption.Position">
            <summary>
            Gets or sets the position of the caption
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaCaption.Text">
            <summary>
            Gets or sets the caption text
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaCaption.VerticalAlignment">
            <summary>
            Gets or sets the vertical alignment of the caption
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaCaption.Width">
            <summary>
            Gets or sets the width of the caption
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Xfa.PdfXfaCheckBoxAppearance">
            <summary>
            Represent XFA checkBox shape
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaCheckBoxAppearance.Square">
            <summary>
            Squred checkBox
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaCheckBoxAppearance.Round">
            <summary>
            Rounded checkBox
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Xfa.PdfXfaCheckBoxField">
            <summary>
            Represents checkbox field of the XFA form.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaCheckBoxField.#ctor(System.String,System.Drawing.SizeF)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Xfa.PdfXfaCheckBoxField" /> class.
            </summary>
            <param name="name">Name of the check box field.</param>
            <param name="size">Size of the check box field.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaCheckBoxField.#ctor(System.String,System.Drawing.SizeF,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Xfa.PdfXfaCheckBoxField" /> class.
            </summary>
            <param name="name">Name of the check box field</param>
            <param name="size">Size of the check box field</param>
            <param name="isChecked">Checked state of the check box </param>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaCheckBoxField.#ctor(System.String,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Xfa.PdfXfaCheckBoxField" /> class.
            </summary>
            <param name="name">Name of the check box field.</param>
            <param name="width">Check box field width.</param>
            <param name="height">Check box field height.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaCheckBoxField.#ctor(System.String,System.Single,System.Single,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Xfa.PdfXfaCheckBoxField" /> class.
            </summary>
            <param name="name">Name of the check box field.</param>
            <param name="width">Check box field width.</param>
            <param name="height">Check box field height.</param>
            <param name="isChecked">Checked state of the field.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaCheckBoxField.Clone">
            <summary>
            Clone.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaCheckBoxField.Caption">
            <summary>
            Gets or sets the caption of the field
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaCheckBoxField.CheckBoxAppearance">
            <summary>
            Gets or sets the appearance of the check box field
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaCheckBoxField.CheckBoxSize">
            <summary>
            Gets or sets the check box size
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaCheckBoxField.CheckedStyle">
            <summary>
            Gets or sets the checked Style of the check box field
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaCheckBoxField.IsChecked">
            <summary>
            Gets or sets a value indicating whether this is checked or not
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Xfa.PdfXfaCheckedStyle">
            <summary>
            Referesents XFA checkBox style
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaCheckedStyle.Default">
            <summary>
            default checked state.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaCheckedStyle.Check">
            <summary>
            A check mark is used for the checked state.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaCheckedStyle.Circle">
            <summary>
            A circle is used for the checked state. 
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaCheckedStyle.Cross">
            <summary>
            A cross is used for the checked state.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaCheckedStyle.Diamond">
            <summary>
            A diamond symbol is used for the checked state. 
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaCheckedStyle.Square">
            <summary>
            A square is used for the checked state.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaCheckedStyle.Star">
            <summary>
            A star is used for the checked state.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Xfa.PdfXfaCircleAppearance">
            <summary>
            Represents the Appearance of the circle Field
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaCircleAppearance.Circle">
            <summary>
            represents the circle shape
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaCircleAppearance.Ellipse">
            <summary>
            represents the ellipse
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaCircleAppearance.Arc">
            <summary>
            represents the arc
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaCircleField.#ctor(System.String,System.Drawing.SizeF)">
            <summary>
            Initialize a new instance of the <see cref="T:ComponentPro.Pdf.Xfa.PdfXfaCircleField" /> class.
            </summary>
            <param name="name">Name of the field</param>
            <param name="size">size of the field</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaCircleField.#ctor(System.String,System.Single,System.Single)">
            <summary>
            Initialize a new instance of the <see cref="T:ComponentPro.Pdf.Xfa.PdfXfaCircleField" /> class.
            </summary>
            <param name="name">Name of the field.</param>
            <param name="width">width of the field.</param>
            <param name="height">height of the field.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaCircleField.Clone">
            <summary>
            Clone
            </summary>
            <returns></returns>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaCircleField.Appearance">
            <summary>
            Gets or sets the apperance of the circle field
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaCircleField.Border">
            <summary>
            Gets or sets the border of the circle
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaCircleField.Height">
            <summary>
            Gets or sets height of the field
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaCircleField.Rotate">
            <summary>
            Gets or sets the rotation angle
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaCircleField.StartAngle">
            <summary>
            Gets or sets the start angle of the arc
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaCircleField.SweepAngle">
            <summary>
            Gets or sets the sweep angle of the Arc
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaCircleField.ToolTip">
            <summary>
            Gets or sets the tool tip of the circle
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaCircleField.Width">
            <summary>
            Gets or sets width of the field
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaComboBoxField.#ctor(System.String,System.Drawing.SizeF)">
            <summary>
            Initialize a new instance of the <see cref="T:ComponentPro.Pdf.Xfa.PdfXfaComboBoxField" /> class.
            </summary>
            <param name="name">name of the field.</param>
            <param name="size">Size of the field.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaComboBoxField.#ctor(System.String,System.Drawing.SizeF,System.Collections.Generic.List{System.String})">
            <summary>
            Initialize a new instance of the <see cref="T:ComponentPro.Pdf.Xfa.PdfXfaComboBoxField" /> class.
            </summary>
            <param name="name">name of the field.</param>
            <param name="size">Size of the field.</param>
            <param name="items">Field items.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaComboBoxField.#ctor(System.String,System.Single,System.Single)">
            <summary>
            Initialize a new instance of the <see cref="T:ComponentPro.Pdf.Xfa.PdfXfaComboBoxField" /> class.
            </summary>
            <param name="name">name of the field.</param>
            <param name="width">Width of the field.</param>
            <param name="height">Height of the field.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaComboBoxField.#ctor(System.String,System.Single,System.Single,System.Collections.Generic.List{System.String})">
            <summary>
            Initialize a new instance of the <see cref="T:ComponentPro.Pdf.Xfa.PdfXfaComboBoxField" /> class.
            </summary>
            <param name="name">name of the field.</param>
            <param name="width">Width of the field.</param>
            <param name="height">Height of the field.</param>
            <param name="items">Field items.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaComboBoxField.Clone">
            <summary>
            Clone.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaComboBoxField.AllowTextEntry">
            <summary>
            Gets or sets the text entry
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaComboBoxField.Caption">
            <summary>
            Gets or sets the caption of the field
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaComboBoxField.DataSource">
            <summary>
            Gets or set the combo box items.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaComboBoxField.Items">
            <summary>
            Gets or sets the field items
            </summary>        
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaComboBoxField.Padding">
            <summary>
            Gets or sets the padding
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaComboBoxField.SelectedIndex">
            <summary>
            Gets or sets the selected index
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaComboBoxField.SelectedValue">
            <summary>
            Gets or sets the selected value
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Xfa.PdfXfaCorner">
            <summary>
            Represents the XFA corner
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaCorner.BorderColor">
            <summary>
            Gets or sets the border color
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaCorner.BorderStyle">
            <summary>
            Gets or sets the border style 
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaCorner.IsInverted">
            <summary>
            Specifies whether the corner appears convex or is inverted and appears concave.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaCorner.Radius">
            <summary>
            Gets or sets the radius of the corner
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaCorner.Shape">
            <summary>
            Gets or sets the shape of the corner
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaCorner.Thickness">
            <summary>
            Gets or sets the thickness
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaCorner.Visibility">
            <summary>
            Gets or sets the visibility
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Xfa.PdfXfaCornerShape">
            <summary>
            Specifies the corner shapes
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaCornerShape.Square">
            <summary>
            Squared corner
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaCornerShape.Round">
            <summary>
            Rounded corner
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Xfa.PdfXfaDatePattern">
            <summary>
            Date pattern
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaDatePattern.Default">
            <summary>
            Appears the Default value eg: Nov 13, 2015
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaDatePattern.Short">
            <summary>
            eg:11/13/2015.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaDatePattern.Medium">
            <summary>
            eg: Nov 13, 2015.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaDatePattern.Long">
            <summary>
            November 13,2015.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaDatePattern.Full">
            <summary>
            Thursday, November 12, 2015.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaDatePattern.MDYY">
            <summary>
            11/13/15.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaDatePattern.MMMD_YYYY">
            <summary>
            Nov 13,2015.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaDatePattern.MMMMD_YYYY">
            <summary>
            November 13,2015.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaDatePattern.EEEE_MMMMD_YYYY">
            <summary>
            Friday, November 13, 2015.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaDatePattern.MDYYYY">
            <summary>
            11/13/2015.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaDatePattern.MMDDYY">
            <summary>
            11/13/15.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaDatePattern.MMDDYYYY">
            <summary>
            11/13/2015.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaDatePattern.YYMMDD">
            <summary>
            15/11/13.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaDatePattern.YYYYMMDD">
            <summary>
            2015-11-13.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaDatePattern.DDMMMYY">
            <summary>
            13-Nov-15.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaDatePattern.EEEEMMMMDDYYYY">
            <summary>
            Friday, November 13, 2015
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaDatePattern.MMMMDDYYYY">
            <summary>
            November 13,15.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaDatePattern.EEEEDDMMMMYYYY">
            <summary>
            Friday, 13 November, 2015.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaDatePattern.DDMMMMYYYY">
            <summary>
            13 November, 2015.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaDatePattern.MMMMYYYY">
            <summary>
            November 2015.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaDateTimeField.#ctor(System.String,System.Drawing.SizeF)">
            <summary>
            Initialize a new instance of the <see cref="T:ComponentPro.Pdf.Xfa.PdfXfaDateTimeField" /> class.
            </summary>
            <param name="name">Name of the field.</param>
            <param name="size">Size of the field.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaDateTimeField.#ctor(System.String,System.Single,System.Single)">
            <summary>
            Initialize a new instance of the <see cref="T:ComponentPro.Pdf.Xfa.PdfXfaDateTimeField" /> class.
            </summary>
            <param name="name">Name of the field.</param>
            <param name="width">Width of the field.</param>
            <param name="height">Height of the field.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaDateTimeField.Clone">
            <summary>
            Clone.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaDateTimeField.Caption">
            <summary>
            Gets or sets the caption of the field
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaDateTimeField.DatePattern">
            <summary>
            Gets or sets the date format
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaDateTimeField.Format">
            <summary>
            Gets or sets the date time field format
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaDateTimeField.Padding">
            <summary>
            Gets or sets the padding
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaDateTimeField.RequireValidation">
            <summary>
            Gets or sets the validations
            </summary>
            <remarks>validations doesn't applyed to dateTime type</remarks>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaDateTimeField.TimePattern">
            <summary>
            Gets or sets the time patterns
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaDateTimeField.Value">
            <summary>
            Gets or Sets the value of date time field
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Xfa.PdfXfaDateTimeFormat">
            <summary>
            Represent the datetime field format
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaDateTimeFormat.Date">
            <summary>
            Represents date only
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaDateTimeFormat.Time">
            <summary>
            Represents time onluy
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaDateTimeFormat.DateTime">
            <summary>
            Represents date and times
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Xfa.PdfXfaDateTimePattern">
            <summary>
            Represents the date and time patterns
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaDateTimePattern.Default">
            <summary>
            default date time pattern
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaDateTimePattern.Short">
            <summary>
            short
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaDateTimePattern.Medium">
            <summary>
            Medium
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaDateTimePattern.Long">
            <summary>
            Loing
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaDateTimePattern.Full">
            <summary>
            full
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Xfa.PdfXfaDocument">
            <summary>
            Represents the XFA document
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaDocument.Clone">
            <summary>
            Clone
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaDocument.Close">
            <summary>
            Close all the document
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaDocument.Save(System.String,ComponentPro.Pdf.Xfa.PdfXfaType)">
            <summary>
            Save the document
            </summary>
            <param name="fileName"></param>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaDocument.Save(System.IO.Stream,ComponentPro.Pdf.Xfa.PdfXfaType)">
            <summary>
            save the document
            </summary>
            <param name="stream"></param>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaDocument.Save(System.IO.Stream,ComponentPro.Pdf.Xfa.PdfXfaType,System.Web.HttpContext)">
            <summary>
            Save the document
            </summary>        
            <param name="stream">The stream where to save the document.</param>
            /// <param name="response">The HTTP response stream object.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaDocument.Save(System.String,ComponentPro.Pdf.Xfa.PdfXfaType,System.Web.HttpResponse,ComponentPro.Pdf.HttpReadType)">
            <summary>
            Save the document
            </summary>
            <param name="fileName">The name of the document.</param>
            <param name="response">The HTTP response stream object.</param>
            <param name="httpType">The type of the reading document.</param>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaDocument.FormName">
            <summary>
            Gets or sets the form name.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaDocument.Pages">
            <summary>
            Get the XFA page
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaDocument.PageSettings">
            <summary>
            Gets or set page settings.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaDocument.XfaForm">
            <summary>
            Gets or sets the XFA form
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Xfa.PdfXfaEdge">
            <summary>
            Represents the Edge of the XFA border
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaEdge.BorderStyle">
            <summary>
            Gets or sets the border style 
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaEdge.Color">
            <summary>
            Gets or sets the border color
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaEdge.Thickness">
            <summary>
            Gets or sets the thickness of the edge
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaEdge.Visibility">
            <summary>
            Gets or sets the visibility
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Xfa.PdfXfaFieldCollection">
            <summary>
            Represents field collection in the XFA form.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaFieldCollection.Add(ComponentPro.Pdf.Xfa.PdfXfaField)">
            <summary>
            Adds the specified field.
            </summary>
            <param name="field">The field item which is added in the PDF XFA form.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaFieldCollection.Clear">
            <summary>
            Clear all the fields.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaFieldCollection.IndexOf(ComponentPro.Pdf.Xfa.PdfXfaField)">
            <summary>
            Determines the index of a specific field.
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaFieldCollection.insert(System.Int32,ComponentPro.Pdf.Xfa.PdfXfaField)">
            <summary>
            Insert field to the specified index.
            </summary>
            <param name="index"></param>
            <param name="field"></param>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaFieldCollection.Remove(ComponentPro.Pdf.Xfa.PdfXfaField)">
            <summary>
            Remove the field.
            </summary>
            <param name="field"></param>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaFieldCollection.RemoveAt(System.Int32)">
            <summary>
            Remove field at the specified index.
            </summary>
            <param name="index"></param>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaFieldCollection.Count">
            <summary>
            Get the fields count.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaFieldCollection.Item(System.Int32)">
            <summary>
            Get the field with the specific index.
            </summary>
            <param name="offset">index.</param>
            <returns>PdfXfaField.</returns>
        </member>
        <member name="T:ComponentPro.Pdf.Xfa.PdfXfaFlowDirection">
            <summary>
            Specifies the available type for a XFA form.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaFlowDirection.Horizontal">
            <summary>
            The content of the element is flowed in a direction proceeding from left to right and top to bottom.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaFlowDirection.Vertical">
            <summary>
            The content of the element is flowed in a direction proceeding from top to bottom.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Xfa.PdfXfaForm">
            <summary>
            Represents interactive XFA form of the Pdf document.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaForm.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Xfa.PdfXfaForm" /> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaForm.#ctor(System.String,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Xfa.PdfXfaForm" /> class.
            </summary>
            <param name="name">name of the form.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaForm.#ctor(ComponentPro.Pdf.Xfa.PdfXfaFlowDirection,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Xfa.PdfXfaForm" /> class.
            </summary>       
            <param name="flowDirection">Type of the XFA form</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaForm.#ctor(System.String,ComponentPro.Pdf.Xfa.PdfXfaPage,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Xfa.PdfXfaForm" /> class.
            </summary>
            <param name="name"></param>
            <param name="xfaPage"></param>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaForm.#ctor(System.String,ComponentPro.Pdf.Xfa.PdfXfaFlowDirection,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Xfa.PdfXfaForm" /> class.
            </summary>
            <param name="name"></param>
            <param name="flowDirection">Type of the XFA form</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaForm.#ctor(ComponentPro.Pdf.Xfa.PdfXfaPage,ComponentPro.Pdf.Xfa.PdfXfaFlowDirection,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Xfa.PdfXfaForm" /> class.
            </summary>
            <param name="name"></param>
            <param name="flowDirection">Type of the XFA form</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaForm.#ctor(System.String,ComponentPro.Pdf.Xfa.PdfXfaPage,ComponentPro.Pdf.Xfa.PdfXfaFlowDirection,System.Single)">
            <summary>
             Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Xfa.PdfXfaForm" /> class.
            </summary>
            <param name="name"></param>
            <param name="xfaPage"></param>
            <param name="flowDirection"></param>        
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaForm.Clone">
            <summary>
            Clone.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaForm.Border">
            <summary>
            Gets or sets the border
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaForm.Fields">
            <summary>
            Gets the fields.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaForm.FlowDirection">
            <summary>
            Gets or sets the XFA flow direction
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaForm.Page">
            <summary>
            Gets or set the XFA Page.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaForm.ReadOnly">
            <summary>
            Gets or sets readonly
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaForm.Width">
            <summary>
            Gets or sets width of the form
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Xfa.PdfXfaHandedness">
            <summary>
            Represents the handness of the XFA border
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaHandedness.Right">
            <summary>
            Position the displayed line immediately to the right of the underlying vector.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaHandedness.Left">
            <summary>
            Position the displayed line immediately to the left of the underlying vector.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaHandedness.Even">
            <summary>
            Center the displayed line on the underlying vector.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Xfa.PdfXfaHorizontalAlignment">
            <summary>
            Specifies Horizontal alignment
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaHorizontalAlignment.Left">
            <summary>
            Specifies the element is aligned to Left.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaHorizontalAlignment.Center">
            <summary>
            Specifies the element is aligned to Center.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaHorizontalAlignment.Right">
            <summary>
            Specifies the element is aligned to Right.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaHorizontalAlignment.Justify">
            <summary>
            Specifies the element is aligned with Justify
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaHorizontalAlignment.JustifyAll">
            <summary>
            Spread-justify all lines to fill the available region.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Xfa.PdfXfaImage">
            <summary>
            Represents image field in the XFA form.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaImage.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Xfa.PdfXfaImage" /> class.
            </summary>
            <param name="name">Image name.</param>
            <param name="path">Image path.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaImage.#ctor(System.String,System.Drawing.Image)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Xfa.PdfXfaImage" /> class.
            </summary>
            <param name="name">Image name.</param>
            <param name="image">Image</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaImage.#ctor(System.String,ComponentPro.Pdf.Graphics.PdfBitmap)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Xfa.PdfXfaImage" /> class.
            </summary>
            <param name="name">Image name.</param>
            <param name="image">PDF bitmap</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaImage.#ctor(System.String,System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Xfa.PdfXfaImage" /> class.
            </summary>
            <param name="name">Image name.</param>
            <param name="stream">Image stream</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaImage.#ctor(System.String,System.String,System.Drawing.SizeF)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Xfa.PdfXfaImage" /> class.
            </summary>
            <param name="name">Image name.</param>
            <param name="path">Image path.</param>
                        <param name="size">Image size.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaImage.#ctor(System.String,System.Drawing.Image,System.Drawing.SizeF)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Xfa.PdfXfaImage" /> class.
            </summary>
            <param name="name">Image name.</param>
            <param name="path">Image.</param>
             <param name="size">Image size.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaImage.#ctor(System.String,System.IO.Stream,System.Drawing.SizeF)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Xfa.PdfXfaImage" /> class.
            </summary>
            <param name="name">Image name.</param>
            <param name="stream">Image stream.</param>
            <param name="size">Size of the image.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaImage.#ctor(System.String,System.String,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Xfa.PdfXfaImage" /> class.
            </summary>
            <param name="name">Image name.</param>
            <param name="path">Image path.</param>
            <param name="width">Width.</param>
            <param name="height">Height.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaImage.#ctor(System.String,System.Drawing.Image,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Xfa.PdfXfaImage" /> class.
            </summary>
            <param name="name">Image name.</param>
            <param name="path">Image.</param>
            <param name="width">Width.</param>
            <param name="height">Height.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaImage.#ctor(System.String,System.IO.Stream,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Xfa.PdfXfaImage" /> class.
            </summary>
            <param name="name">Image name.</param>
            <param name="image">Image to be drawn in XFA form.</param>
            <param name="width">Image width</param>
            <param name="height">Image height</param>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaImage.Rotate">
            <summary>
            Gets or sets the rotation angle
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaImage.Size">
            <summary>
            Gets or sets the image size
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Xfa.PdfXfaLine">
            <summary>
            Represents the line of the XFA form
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaLine.#ctor(System.Drawing.PointF,System.Drawing.PointF,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Xfa.PdfXfaLine" /> class.
            </summary>
            <param name="startLocation">Start location of the Line.</param>
            <param name="endLocation">End location of the Line.</param>
            <param name="thickness">Thickness of the Line.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaLine.Clone">
            <summary>
            Clone.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaLine.Color">
            <summary>
            Gets or sets the line color
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaLine.Thickness">
            <summary>
            Gets or sets the thickness of the line
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Xfa.PdfXfaLinearBrush">
            <summary>
            Represents the XFA linear brush
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaLinearBrush.#ctor(ComponentPro.Pdf.Graphics.PdfColor,ComponentPro.Pdf.Graphics.PdfColor)">
            <summary>
            iniatilaize the linear brush
            </summary>       
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaLinearBrush.#ctor(ComponentPro.Pdf.Graphics.PdfColor,ComponentPro.Pdf.Graphics.PdfColor,ComponentPro.Pdf.Xfa.PdfXfaLinearType)">
            <summary>
            iniatilaize the linear brush
            </summary>      
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaLinearBrush.EndColor">
            <summary>
            Gets or sets the ending color
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaLinearBrush.StartColor">
            <summary>
            Gets or sets the starting color
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaLinearBrush.Type">
            <summary>
            Gets or sets the direction of the color transition
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Xfa.PdfXfaLinearType">
            <summary>
            Specifies the direction of the color transition.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaLinearType.LeftToRight">
            <summary>
            The start color appears at the left side of the object and transitions into the end color at the right side.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaLinearType.RightToLeft">
            <summary>
            The start color appears at the right side of the object and transitions into the end color at the left side.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaLinearType.BottomToTop">
            <summary>
            The start color appears at the bottom side of the object and transitions into the end color at the top side.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaLinearType.TopToBottom">
            <summary>
            The start color appears at the top side of the object and transitions into the end color at the bottom side.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaListBoxField.#ctor(System.String,System.Drawing.SizeF)">
            <summary>
            Initialize a new instance of the <see cref="T:ComponentPro.Pdf.Xfa.PdfXfaListBoxField" /> class.
            </summary>
            <param name="name">Field name.</param>
            <param name="size">Field size.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaListBoxField.#ctor(System.String,System.Drawing.SizeF,System.Collections.Generic.List{System.String})">
            <summary>
            Initialize a new instance of the <see cref="T:ComponentPro.Pdf.Xfa.PdfXfaListBoxField" /> class.
            </summary>
            <param name="name">Field name.</param>
            <param name="size">Field size.</param>
            <param name="items">Field items.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaListBoxField.#ctor(System.String,System.Single,System.Single)">
            <summary>
            Initialize a new instance of the <see cref="T:ComponentPro.Pdf.Xfa.PdfXfaListBoxField" /> class.
            </summary>
            <param name="name">Field name.</param>
            <param name="width">Field width.</param>
            <param name="height">Field height.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaListBoxField.#ctor(System.String,System.Single,System.Single,System.Collections.Generic.List{System.String})">
            <summary>
            Initialize a new instance of the <see cref="T:ComponentPro.Pdf.Xfa.PdfXfaListBoxField" /> class.
            </summary>
            <param name="name">Field name.</param>
            <param name="width">Field width.</param>
            <param name="height">Field height.</param>
            <param name="items">Field items.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaListBoxField.Clone">
            <summary>
            Clone.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaListBoxField.Caption">
            <summary>
            Gets or sets the caption of the field
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaListBoxField.DataSource">
            <summary>
            Gets or set the list box items.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaListBoxField.Items">
            <summary>
            Gets or sets the list box items
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaListBoxField.Padding">
            <summary>
            Gets or sets the padding
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaListBoxField.SelectedIndex">
            <summary>
            Gets or sets the selected index
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaListBoxField.SelectedValue">
            <summary>
            Gets or sets the selected value
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaListBoxField.SelectionMode">
            <summary>
            Gets or sets multiselect of the list box field
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaNumericField.#ctor(System.String,System.Drawing.SizeF)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Xfa.PdfXfaNumericField" /> class.
            </summary>
            <param name="name">Field name.</param>
            <param name="size">Field size.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaNumericField.#ctor(System.String,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Xfa.PdfXfaNumericField" /> class.
            </summary>
            <param name="name">Field name.</param>
            <param name="width">Field width.</param>
            <param name="height">Field height.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaNumericField.Clone">
            <summary>
            Clone.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaNumericField.Caption">
            <summary>
            Gets or sets the caption of the field
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaNumericField.CombLength">
            <summary>
            Gets or sets the comb length
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaNumericField.Culture">
            <summary>
            Gets or set the Culture.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaNumericField.FieldType">
            <summary>
            Gets or sets the numeric field types
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaNumericField.NumericValue">
            <summary>
            Gets or sets the numeric field value 
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaNumericField.Padding">
            <summary>
            Gets or sets the padding of the field
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaNumericField.PatternString">
            <summary>
            Gets or sets the pattern string
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Xfa.PdfXfaNumericType">
            <summary>
            Represents the Pdf XFA numeric filed types
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaNumericType.Float">
            <summary>
            Represents the floating values
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaNumericType.Decimal">
            <summary>
            Represents the decimal values
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaNumericType.Integer">
            <summary>
            Represents the integer values
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaNumericType.Currency">
            <summary>
            Represents the currency values
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaNumericType.Percent">
            <summary>
            Represents the persentage values
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Xfa.PdfXfaPage">
            <summary>
            Represents the PDF Xfa Section.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaPage.GetClientSize">
            <summary>
            Get the content area
            </summary>
            <returns></returns>
        </member>
        <member name="T:ComponentPro.Pdf.Xfa.PdfXfaPageCollection">
            <summary>
            Represents the XFA section collection
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaPageCollection.Add">
            <summary>
            Add new XFA page
            </summary>
            <returns>XFA page object</returns>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaPageCollection.Item(System.Int32)">
            <summary>
            Gets the page using index value.
            </summary>
            <param name="index">page index.</param>
            <returns>PdfXfaPage</returns>
        </member>
        <member name="T:ComponentPro.Pdf.Xfa.PdfXfaPageOrientation">
            <summary>
            Enumerator that implements XFA page orientations.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaPageOrientation.Portrait">
            <summary>
            Portrait orientation.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaPageOrientation.Landscape">
            <summary>
            Landscape orientation.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Xfa.PdfXfaPageSettings">
            <summary>
            Represents the XFA page settings.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaPageSettings.Margins">
            <summary>
            Gets or set margins.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaPageSettings.PageOrientation">
            <summary>
            Gets or sets the XFA page orientation
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaPageSettings.PageSize">
            <summary>
            Gets or sets the XFA page size
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Xfa.PdfXfaPosition">
            <summary>
            Specifies the caption text position of fields
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaPosition.Left">
            <summary>
            Left side of the field
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaPosition.Right">
            <summary>
            Right side of the field
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaPosition.Top">
            <summary>
            Top of the field
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaPosition.Bottom">
            <summary>
            Bottom of the field
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Xfa.PdfXfaRadialBrush">
            <summary>
            Represents the XFA Radial brush
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaRadialBrush.#ctor(ComponentPro.Pdf.Graphics.PdfColor,ComponentPro.Pdf.Graphics.PdfColor)">
            <summary>
            initialize the radial brush
            </summary>
            <param name="startColor"></param>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaRadialBrush.#ctor(ComponentPro.Pdf.Graphics.PdfColor,ComponentPro.Pdf.Graphics.PdfColor,ComponentPro.Pdf.Xfa.PdfXfaRadialType)">
            <summary>
            initialize the radial brush
            </summary>
            <param name="startColor"></param>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaRadialBrush.EndColor">
            <summary>
            Gets or sets the ending color
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaRadialBrush.StartColor">
            <summary>
            Gets or sets the starting color
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaRadialBrush.Type">
            <summary>
            Gets or set the direction of the color transition
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Xfa.PdfXfaRadialType">
            <summary>
            Specifies the direction of the color transition.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaRadialType.CenterToEdge">
            <summary>
            The start color appears at the center of the object and transitions into the end color at the outer edge.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaRadialType.EdgeToCenter">
            <summary>
            The start color appears at the outer edge of the object and transitions into the end color at the center.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Xfa.PdfXfaRadioButtonField">
            <summary>
            Represents the XFA radio button field
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaRadioButtonField.#ctor(System.String,System.Drawing.SizeF)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Xfa.PdfXfaRadioButtonField" /> class.
            </summary>
            <param name="name">Name of the radio button field.</param>
            <param name="size">Size of the radio button field.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaRadioButtonField.#ctor(System.String,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Xfa.PdfXfaRadioButtonField" /> class.
            </summary>
            <param name="name">Name of the radio button field.</param>
            <param name="width">Width of the radio button field.</param>
            <param name="height">Height of the radio button field.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaRadioButtonField.Clone">
            <summary>
            Clone.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaRadioButtonField.Caption">
            <summary>
            Gets or sets the caption of the field
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaRadioButtonField.CheckedStyle">
            <summary>
            Gets or sets the checked style of the radio button
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaRadioButtonField.IsChecked">
            <summary>
            Gets or sets a value indicating whether this is checked or not.        
            <value><c>true</c> if checked; otherwise, <c>false</c>.</value>
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaRadioButtonField.RadioButtonAppearance">
            <summary>
            Gets or sets the appearance of the radio button
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaRadioButtonField.RadioButtonSize">
            <summary>
            Gets or sets the size of the radio button
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaRadioButtonGroup.#ctor(System.String)">
            <summary>
            Initalize the instance of the PdfXFARadioButtonItemGroup class
            </summary>
            <param name="field">RadioButton field</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaRadioButtonGroup.Clone">
            <summary>
            Clone.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaRadioButtonGroup.FlowDirection">
            <summary>
            Gets or sets the Layout Type
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaRadioButtonGroup.Items">
            <summary>
            Gets or sets the radio list items
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaRadioButtonGroup.ReadOnly">
            <summary>
            Gets or sets the readonly
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaRectangleField.#ctor(System.String,System.Drawing.SizeF)">
            <summary>
            Initialize a new instance of the <see cref="T:ComponentPro.Pdf.Xfa.PdfXfaRectangleField" /> class.
            </summary>
            <param name="name">Field name.</param>
            <param name="size">Field size.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaRectangleField.#ctor(System.String,System.Single,System.Single)">
            <summary>
            Initialize a new instance of the <see cref="T:ComponentPro.Pdf.Xfa.PdfXfaRectangleField" /> class.
            </summary>
            <param name="name">Field name.</param>
            <param name="width">Field width.</param>
            <param name="height">Field height.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaRectangleField.Clone">
            <summary>
            Clone.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaRectangleField.Border">
            <summary>
            Gets or sets the border
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaRectangleField.Corner">
            <summary>
            Gets or sets the cornor shaps
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaRectangleField.Height">
            <summary>
            Gets sets height of the field
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaRectangleField.Rotate">
            <summary>
            Gets or sets the rotation angle
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaRectangleField.ToolTip">
            <summary>
            Gets or sets the tool tip
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaRectangleField.Width">
            <summary>
            Gets or sets width of the field
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Xfa.PdfXfaRotateAngle">
            <summary>
            The number of degrees by which the field should be rotated clockwise when displayed or printed.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaRotateAngle.RotateAngle0">
            <summary>
            Indicates 0 degree rotation angle.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaRotateAngle.RotateAngle90">
            <summary>
            Indicates 90 degree rotation angle.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaRotateAngle.RotateAngle180">
            <summary>
            Indicates 180 degree rotation angle.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaRotateAngle.RotateAngle270">
            <summary>
            Indicates 270 degree rotation angle.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Xfa.PdfXfaSelectionMode">
            <summary>
            Represents the List box selection mode.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaSelectionMode.Single">
            <summary>
            Single item selection mode.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaSelectionMode.Multiple">
            <summary>
            Multiple item selection mode.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Xfa.PdfXfaSolidBrush">
            <summary>
            Represents the XFA solid brush.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaSolidBrush.#ctor(ComponentPro.Pdf.Graphics.PdfColor)">
            <summary>
            Initialize the instaces of the <see cref="T:ComponentPro.Pdf.Xfa.PdfXfaSolidBrush" /> class.
            </summary>
            <param name="color"></param>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaSolidBrush.Color">
            <summary>
            Gets or sets the solid brush color
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Xfa.PdfXfaTextBoxField">
            <summary>
            Represents textbox field in the XFA form.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaTextBoxField.#ctor(System.String,System.Drawing.SizeF)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Xfa.PdfXfaTextBoxField" /> class.
            </summary>
            <param name="fieldName">Name of the text box field.</param>
            <param name="minimumSize">Minimum size of the text box field.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaTextBoxField.#ctor(System.String,System.Drawing.SizeF,System.String)">
            <summary>
            Initialize a new instance of the <see cref="T:ComponentPro.Pdf.Xfa.PdfXfaTextBoxField" /> class.
            </summary>
            <param name="fieldName">Name of the text box field</param>
            <param name="minimumSize">Minimum size of the text box </param>
            <param name="defaultText">Default value of the text box</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaTextBoxField.#ctor(System.String,System.Drawing.SizeF,ComponentPro.Pdf.Xfa.PdfXfaTextBoxType)">
            <summary>
            Initialize a new instance of the <see cref="T:ComponentPro.Pdf.Xfa.PdfXfaTextBoxField" /> class. 
            </summary>
            <param name="fieldName">Name of the text box field</param>
            <param name="minimumSize">Minimum size of the text box</param> 
            <param name="fieldType">Text box field type</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaTextBoxField.#ctor(System.String,System.Single,System.Single)">
            <summary>
            Initialize a new instance of the <see cref="T:ComponentPro.Pdf.Xfa.PdfXfaTextBoxField" /> class.
            </summary>
            <param name="fieldName">Name of the text box field</param>
            <param name="minWidth">Minimum width of the text box field.</param>
            <param name="minHeight">Minimum height of the text box field.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaTextBoxField.#ctor(System.String,System.Drawing.SizeF,System.String,ComponentPro.Pdf.Xfa.PdfXfaTextBoxType)">
            <summary>
            Initialize a new instance of the <see cref="T:ComponentPro.Pdf.Xfa.PdfXfaTextBoxField" /> class. 
            </summary>
            <param name="fieldName">Name of the text box field</param>
            <param name="minimumSize">Minimum size of the text box</param>
            <param name="defaultText">Default value of the text box</param>
            <param name="fieldType">Text box field type</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaTextBoxField.#ctor(System.String,System.Single,System.Single,System.String)">
            <summary>
            Initialize a new instance of the <see cref="T:ComponentPro.Pdf.Xfa.PdfXfaTextBoxField" /> class.
            </summary>
            <param name="FieldName">Name of the text box field</param>
            <param name="minWidth">Minimum width of the text box field.</param>
            <param name="minHeight">Minimum height of the text box field.</param>
            <param name="defaultText">Default value of the text box</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaTextBoxField.#ctor(System.String,System.Single,System.Single,ComponentPro.Pdf.Xfa.PdfXfaTextBoxType)">
            <summary>
            Initialize a new instance of the <see cref="T:ComponentPro.Pdf.Xfa.PdfXfaTextBoxField" /> class.
            </summary>
            <param name="FieldName">Name of the text box field</param>
            <param name="minWidth">Minimum width of the text box field.</param>
            <param name="minHeight">Minimum height of the text box field.</param>
            <param name="fieldType">ext box field type</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaTextBoxField.#ctor(System.String,System.Single,System.Single,System.String,ComponentPro.Pdf.Xfa.PdfXfaTextBoxType)">
            <summary>
            Initialize a new instance of the <see cref="T:ComponentPro.Pdf.Xfa.PdfXfaTextBoxField" /> class.
            </summary>
            <param name="FieldName">Name of the text box field</param>
            <param name="minWidth">Minimum width of the text box field.</param>
            <param name="minHeight">Minimum height of the text box field.</param>
            <param name="defaultText">Default value of the text box</param>
            <param name="fieldType">Text box field type</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaTextBoxField.Clone">
            <summary>
            Clone.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaTextBoxField.Caption">
            <summary>
            Gets or sets the caption of the field
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaTextBoxField.CombLength">
            <summary>
            Gets or sets the comb cell
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaTextBoxField.MaximumHeight">
            <summary>
            Gets or sets maximum height of the text box field
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaTextBoxField.MaximumLength">
            <summary>
            Gets or sets the character limit
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaTextBoxField.MaximumWidth">
            <summary>
                        Gets or sets maximum width of the text box field
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaTextBoxField.MinimumHeight">
            <summary>
            Gets or sets minimum height of the text box, this will be expandable
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaTextBoxField.MinimumWidth">
            <summary>
            Gets or sets the minimum width of the text box, this will be expandable
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaTextBoxField.Padding">
            <summary>
            Gets or sets the padding
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaTextBoxField.PasswordCharacter">
            <summary>
            Gets or sets the password character
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaTextBoxField.Text">
            <summary>
            Gets or sets the value of the text box field
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaTextBoxField.Type">
            <summary>
            Gets or sets the field type of the text box
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Xfa.PdfXfaTextBoxType">
            <summary>
            Represents the text box type
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Xfa.PdfXfaTextElement">
            <summary>
            Represents text field in the XFA form.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaTextElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Xfa.PdfXfaTextElement" /> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaTextElement.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Xfa.PdfXfaTextElement" /> class.
            </summary>
            <param name="text">value of the text element</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaTextElement.#ctor(System.String,ComponentPro.Pdf.Graphics.PdfFont)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Xfa.PdfXfaTextElement" /> class.
            </summary>
            <param name="text">value of the text element</param>
            <param name="font">Font of the text element</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaTextElement.#ctor(System.String,System.Single,System.Single)">
            <summary>
            Initialize a new instance of the <see cref="T:ComponentPro.Pdf.Xfa.PdfXfaTextElement" /> class.
            </summary>
            <param name="text">alue of the text element</param>
            <param name="width">text element width.</param>
            <param name="height">text element height.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaTextElement.#ctor(System.String,ComponentPro.Pdf.Graphics.PdfFont,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Xfa.PdfXfaTextElement" /> class.
            </summary>
            <param name="text">value of the text element</param>
            <param name="font">Font of the text element</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xfa.PdfXfaTextElement.Clone">
            <summary>
            Clone.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaTextElement.Font">
            <summary>
            Gets or sets the font
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaTextElement.ForeColor">
            <summary>
            Gets or sets the fore color of the field
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaTextElement.Height">
            <summary>
            Gets or sets height of the TextBox
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaTextElement.HorizontalAlignment">
            <summary>
                        Gets or sets the Horizontal alignment
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaTextElement.Rotate">
            <summary>
            Gets or sets the rotation angle
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaTextElement.Text">
            <summary>
            Gets or sets the text
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaTextElement.VerticalAlignment">
            <summary>
            Gets or sets the vertical alignment
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xfa.PdfXfaTextElement.Width">
            <summary>
            Gets or sets width of the TextBox
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Xfa.PdfXfaTimePattern">
            <summary>
            Time patterns
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaTimePattern.Default">
            <summary>
            default value
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaTimePattern.Short">
            <summary>
            short
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaTimePattern.Medium">
            <summary>
            Medium
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaTimePattern.Long">
            <summary>
            Long
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaTimePattern.Full">
            <summary>
            full
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaTimePattern.H_MM_A">
            <summary>
            eg:1:30 PM
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaTimePattern.H_MM_SS_A">
            <summary>
            eg:1:30:30 PM
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaTimePattern.H_MM_SS_A_Z">
            <summary>
            eg:1:30 PM GMT+05:30
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaTimePattern.HH_MM_SS_A">
            <summary>
            eg:01:30:30 PM
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaTimePattern.H_MM_SS">
            <summary>
            eg:13:30:30
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaTimePattern.HH_MM_SS">
            <summary>
            eg:13:30:30
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Xfa.PdfXfaType">
            <summary>
            Represents the XFA document type
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaType.Dynamic">
            <summary>
            Preserved the XFA fields only.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaType.Static">
            <summary>
            Preserved both the XFA and Acroform fields.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Xfa.PdfXfaVerticalAlignment">
            <summary>
            Specifies the Vertical alignment
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaVerticalAlignment.Top">
            <summary>
            Specifies the element is aligned to Top.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaVerticalAlignment.Middle">
            <summary>
            Specifies the element is aligned to Middle.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaVerticalAlignment.Bottom">
            <summary>
            Specifies the element is aligned to Bottom.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Xfa.PdfXfaVisibility">
            <summary>
            Represents the visibility of the XFA field
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaVisibility.Visible">
            <summary>
            Participate in interaction, layout, and rendering.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaVisibility.Hidden">
            <summary>
            Participate in interaction but not layout or rendering
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaVisibility.Inactive">
            <summary>
            Do not participate in interaction, layout, or rendering
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xfa.PdfXfaVisibility.Invisible">
            <summary>
            Participate in interaction and layout but not rendering.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Xmp.BasicJobTicketSchema">
            <summary>
            Represents Basic Job Ticket Schema.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Xmp.XmpSchema">
            <summary>
            Represents Xmp Schema.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Xmp.XmpEntityBase">
            <summary>
            Base class for the xmp entities.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.XmpEntityBase.#ctor(System.Xml.XmlNode,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Xmp.XmpEntityBase" /> class.
            </summary>
            <param name="parent">The parent.</param>
            <param name="prefix">The prefix.</param>
            <param name="localName">Name of the local.</param>
            <param name="namespaceURI">The namespace URI.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.XmpEntityBase.CheckIfExists">
            <summary>
            Checks whether entity already exists in the parent.
            </summary>
            <returns>True - if exists, False otherwise.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.XmpEntityBase.CreateEntity">
            <summary>
            Creates entity in the parent.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.XmpEntityBase.GetEntityXml">
            <summary>
            Gets Xml data of the entity.
            </summary>
            <returns>XmlElement containing entity data.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.XmpEntityBase.GetSuspend">
            <summary>
            Gets value indicating whether we have to suspend initialization.
            </summary>
            <returns>Value indicating whether we have to suspend initialization.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.XmpEntityBase.Initialize">
            <summary>
            Initializes object.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpEntityBase.EntityName">
            <summary>
            Gets name of the entity's tag.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpEntityBase.EntityNamespaceURI">
            <summary>
            Gets URI of the entity's namespace.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpEntityBase.EntityParent">
            <summary>
            Gets parent xml node for the entity.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpEntityBase.EntityPrefix">
            <summary>
            Gets namespace prefix of the entity.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpEntityBase.Exists">
            <summary>
            Gets a value indicating whether this <see cref="T:ComponentPro.Pdf.Xmp.XmpEntityBase" /> is exists.
            </summary>
            <value><c>true</c> if exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpEntityBase.SuspendInitialization">
            <summary>
            Gets a value indicating whether [suspend initialization].
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpEntityBase.XmlData">
            <summary>
            Gets Xml data of the entity.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.XmpSchema.#ctor(ComponentPro.Pdf.Xmp.XmpMetadata)">
            <summary>
            Creates new object.
            </summary>
            <param name="xmp">Parent XmpMetadata.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.XmpSchema.CreateArray(System.String,ComponentPro.Pdf.Xmp.XmpArrayType)">
            <summary>
            Creates xmp array.
            </summary>
            <param name="name">Name of the array.</param>
            <param name="arrayType">Type of the array.</param>
            <returns>Created xmp array.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.XmpSchema.CreateEntity">
            <summary>
            Creates schema xml.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.XmpSchema.CreateLangArray(System.String)">
            <summary>
            Creates xmp lang array.
            </summary>
            <param name="name">Name of the array.</param>
            <returns>Created xmp array.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.XmpSchema.CreateSimpleProperty(System.String)">
            <summary>
            Creates simple property.
            </summary>
            <param name="name">Name of the property.</param>
            <returns>Simple property instance.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.XmpSchema.CreateStructure(ComponentPro.Pdf.Xmp.XmpStructureType)">
            <summary>
            Creates the structure.
            </summary>
            <param name="type">The type of the structure.</param>
            <returns>Structure object.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.XmpSchema.CreateStructure(System.String,ComponentPro.Pdf.Xmp.XmpStructureType)">
            <summary>
            Creates the structure.
            </summary>
            <param name="name">The name.</param>
            <param name="type">The type.</param>
            <returns>Structure object.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.XmpSchema.GetArray(System.String,ComponentPro.Pdf.Xmp.XmpArrayType)">
            <summary>
            Gets xmp array.
            </summary>
            <param name="name">Name of the array.</param>
            <param name="arrayType">Type of the array.</param>
            <returns>Xmp array.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.XmpSchema.GetEntityXml">
            <summary>
            Gets Xml data of the entity.
            </summary>
            <returns>XmlElement containing entity data.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.XmpSchema.GetLangArray(System.String)">
            <summary>
            Gets xmp lang array.
            </summary>
            <param name="name">Name of the array.</param>
            <returns>Xmp array.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.XmpSchema.GetSimpleProperty(System.String)">
            <summary>
            Gets property by its name.
            </summary>
            <param name="name">Name of the property.</param>
            <returns>Xmp property instance.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.XmpSchema.GetStructure(System.String,ComponentPro.Pdf.Xmp.XmpStructureType)">
            <summary>
            Gets the structure.
            </summary>
            <param name="name">The name.</param>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpSchema.Name">
            <summary>
            Gets name (URI) of the schema.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpSchema.Prefix">
            <summary>
            Gets schema prefix.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpSchema.SchemaType">
            <summary>
            Gets type of the schema.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpSchema.Xmp">
            <summary>
            Gets parent XmpMetadata.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.BasicJobTicketSchema.#ctor(ComponentPro.Pdf.Xmp.XmpMetadata)">
            <summary>
            Creates schema object.
            </summary>
            <param name="xmp">Parent XmpMetadata.</param>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.BasicJobTicketSchema.JobRef">
            <summary>
            Gets references an external job management file for a job
            process in which the document is being used. Use of job
            names is under user control. Typical use would be to
            identify all documents that are part of a particular job or
            contract.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.BasicJobTicketSchema.Name">
            <summary>
            Gets name pf the schema.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.BasicJobTicketSchema.Prefix">
            <summary>
            Gets prefix of the schema.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.BasicJobTicketSchema.SchemaType">
            <summary>
            Gets type of the Schema.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Xmp.DublinCoreSchema">
            <summary>
            Represents Dublin Core Schema.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.DublinCoreSchema.#ctor(ComponentPro.Pdf.Xmp.XmpMetadata)">
            <summary>
            Creates schema object.
            </summary>
            <param name="xmp">Parent XmpMetadata.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.DublinCoreSchema.CreateEntity">
            <summary>
            Initializes object.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.DublinCoreSchema.Contributor">
            <summary>
            Gets contributors to the resource (other than the authors).
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.DublinCoreSchema.Coverage">
            <summary>
            Gets or sets the extent or scope of the resource.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.DublinCoreSchema.Creator">
            <summary>
            Gets the authors of the resource (listed in order of precedence, if
            significant).
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.DublinCoreSchema.Date">
            <summary>
            Gets date(s) that something interesting happened to the resource.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.DublinCoreSchema.Description">
            <summary>
            Gets or sets a textual description of the content of the resource. Multiple
            values may be present for different languages.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.DublinCoreSchema.Identifier">
            <summary>
            Gets or sets the unique identifier of the resource.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.DublinCoreSchema.Name">
            <summary>
            Gets name pf the schema.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.DublinCoreSchema.Prefix">
            <summary>
            Gets prefix of the schema.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.DublinCoreSchema.Publisher">
            <summary>
            Gets publishers.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.DublinCoreSchema.Relation">
            <summary>
            Gets relationships to other documents.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.DublinCoreSchema.Rights">
            <summary>
            Gets informal rights statement, selected by language.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.DublinCoreSchema.SchemaType">
            <summary>
            Gets type of the Schema.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.DublinCoreSchema.Source">
            <summary>
            Gets or sets the unique identifier of the work from which this resource was derived.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.DublinCoreSchema.Sublect">
            <summary>
            Gets or sets an unordered array of descriptive phrases or keywords that
            specify the topic of the content of the resource.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.DublinCoreSchema.Title">
            <summary>
            Gets the title of the document, or the name given to the resource.
            Typically, it will be a name by which the resource is
            formally known.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.DublinCoreSchema.Type">
            <summary>
            Gets a document type; for example, novel, poem, or working
            paper.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Xmp.PagedTextSchema">
            <summary>
            Represents Paged Text Schema.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.PagedTextSchema.#ctor(ComponentPro.Pdf.Xmp.XmpMetadata)">
            <summary>
            Creates schema object.
            </summary>
            <param name="xmp">Parent XmpMetadata.</param>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.PagedTextSchema.Colorants">
            <summary>
            Gets an ordered array of colorants (swatches) that are used
            in the document (including any in contained
            documents).
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.PagedTextSchema.Fonts">
            <summary>
            Gets an unordered array of fonts that are used in the
            document (including any in contained documents).
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.PagedTextSchema.MaxPageSize">
            <summary>
            Gets the size of the largest page in the document (including
            any in contained documents).
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.PagedTextSchema.Name">
            <summary>
            Gets name pf the schema.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.PagedTextSchema.NPages">
            <summary>
            Gets or sets the number of pages in the document (including any in
            contained documents).
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.PagedTextSchema.PlateNames">
            <summary>
            Gets an unordered array of fonts that are used in the
            document (including any in contained documents).
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.PagedTextSchema.Prefix">
            <summary>
            Gets prefix of the schema.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.PagedTextSchema.SchemaType">
            <summary>
            Gets type of the Schema.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Xmp.PDFSchema">
            <summary>
            This schema specifies properties used with Adobe PDF documents.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.PDFSchema.#ctor(ComponentPro.Pdf.Xmp.XmpMetadata)">
            <summary>
            Creates schema object.
            </summary>
            <param name="xmp">Parent XmpMetadata.</param>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.PDFSchema.Keywords">
            <summary>
            Gets or sets keywords of the document.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.PDFSchema.Name">
            <summary>
            Gets name pf the schema.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.PDFSchema.PDFVersion">
            <summary>
            Gets or sets the PDF file version (for example: 1.0, 1.3, and so on).
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.PDFSchema.Prefix">
            <summary>
            Gets prefix of the schema.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.PDFSchema.Producer">
            <summary>
            Gets or sets the name of the tool that created the PDF document.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.PDFSchema.SchemaType">
            <summary>
            Gets type of the Schema.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Xmp.RightsManagementSchema">
            <summary>
            Represents Rights Management Schema.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.RightsManagementSchema.#ctor(ComponentPro.Pdf.Xmp.XmpMetadata)">
            <summary>
            Creates schema object.
            </summary>
            <param name="xmp">Parent XmpMetadata.</param>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.RightsManagementSchema.Certificate">
            <summary>
            Gets or sets online rights management certificate.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.RightsManagementSchema.Marked">
            <summary>
            Gets or sets indicates that this is a rights-managed resource.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.RightsManagementSchema.Name">
            <summary>
            Gets name pf the schema.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.RightsManagementSchema.Owner">
            <summary>
            Gets an unordered array specifying the legal owner(s)of a resource.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.RightsManagementSchema.Prefix">
            <summary>
            Gets prefix of the schema.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.RightsManagementSchema.SchemaType">
            <summary>
            Gets type of the Schema.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.RightsManagementSchema.UsageTerms">
            <summary>
            Gets text instructions on how a resource can be legally used.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.RightsManagementSchema.WebStatement">
            <summary>
            Gets or sets the location of a web page describing the owner
            and/or rights statement for this resource.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Xmp.XmpArray">
            <summary>
            Represents Xmp array.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Xmp.XmpCollection">
            <summary>
            Base class for the arrays.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Xmp.XmpType">
            <summary>
            Base class for the Xmp types.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.XmpType.CreateEntity">
            <summary>
            Creates entity in the parent.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.XmpType.GetEntityXml">
            <summary>
            Gets Xml data of the entity.
            </summary>
            <returns>XmlElement containing entity data.</returns>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpType.Xmp">
            <summary>
            Gets parent XmpMetadata.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xmp.XmpCollection.c_itemName">
            <summary>
            Name of the array item tag.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.XmpCollection.CreateEntity">
            <summary>
            Creates entity in the parent.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.XmpCollection.GetArrayItems">
            <summary>
            Gets list of the array items.
            </summary>
            <returns>List of the array items.</returns>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpCollection.ArrayType">
            <summary>
            Gets type of the collection.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpCollection.Count">
            <summary>
            Gets count of the items in the collection.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpCollection.ItemsContainer">
            <summary>
            Gets items container element.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.XmpArray.Add(System.String)">
            <summary>
            Adds string value to the array.
            </summary>
            <param name="value">Value to be added to the array.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.XmpArray.Add(System.Int32)">
            <summary>
            Adds integer value to the array.
            </summary>
            <param name="value">Value to be added to the array.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.XmpArray.Add(System.Single)">
            <summary>
            Adds float value to the array.
            </summary>
            <param name="value">Value to be added to the array.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.XmpArray.Add(System.DateTime)">
            <summary>
            Adds Date to the array.
            </summary>
            <param name="value">Value to be added to the array.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.XmpArray.Add(ComponentPro.Pdf.Xmp.XmpStructure)">
            <summary>
            Adds an XMP structure.
            </summary>
            <param name="structure">The structure.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.XmpArray.Add(System.DateTime,System.String)">
            <summary>
            Adds Date to the array.
            </summary>
            <param name="value">Value to be added to the array.</param>
            <param name="format">String format of the date.</param>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpArray.ArrayType">
            <summary>
            Gets type of the array.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpArray.Items">
            <summary>
            Gets array of the array values.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Xmp.XmpArrayType">
            <summary>
            Types of the xmp arrays.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xmp.XmpArrayType.Unknown">
            <summary>
            Unknown array type.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xmp.XmpArrayType.Bag">
            <summary>
            Unordered array.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xmp.XmpArrayType.Seq">
            <summary>
            Ordered array.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xmp.XmpArrayType.Alt">
            <summary>
            Alternative array.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Xmp.XmpBasicSchema">
            <summary>
            Represents Basic Schema.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.XmpBasicSchema.#ctor(ComponentPro.Pdf.Xmp.XmpMetadata)">
            <summary>
            Creates schema object.
            </summary>
            <param name="xmp">Parent XmpMetadata.</param>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpBasicSchema.Advisory">
            <summary>
            Gets an unordered array specifying properties that were
            edited outside the authoring application.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpBasicSchema.BaseURL">
            <summary>
            Gets or sets The base URL for relative URLs in the document
            content. If this document contains Internet links, and
            those links are relative, they are relative to this base
            URL.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpBasicSchema.CreateDate">
            <summary>
            Gets or sets the date and time the resource was originally created.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpBasicSchema.CreatorTool">
            <summary>
            Gets or sets The name of the first known tool used to create the
            resource. If history is present in the metadata, this value
            should be equivalent to that of xmpMM:History�s
            softwareAgent property.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpBasicSchema.Identifier">
            <summary>
            Gets an unordered array of text strings that unambiguously
            identify the resource within a given context. An array
            item may be qualified with xmpidq:Scheme to denote
            the formal identification system to which that identifier
            conforms.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpBasicSchema.Label">
            <summary>
            Gets or sets a word or short phrase that identifies a document as a
            member of a user-defined collection. Used to organize
            documents in a file browser.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpBasicSchema.MetadataDate">
            <summary>
            Gets or sets the date and time that any metadata for this resource
            was last changed. It should be the same as or more
            recent than xmp:ModifyDate.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpBasicSchema.ModifyDate">
            <summary>
            Gets  sets the date and time the resource was last modified.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpBasicSchema.Name">
            <summary>
            Gets name pf the schema.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpBasicSchema.Nickname">
            <summary>
            Gets or sets a short informal name for the resource.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpBasicSchema.Prefix">
            <summary>
            Gets prefix of the schema.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpBasicSchema.Rating">
            <summary>
            Gets a number that indicates a document�s status relative to
            other documents, used to organize documents in a file
            browser. Values are user-defined within an application defined range.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpBasicSchema.SchemaType">
            <summary>
            Gets type of the Schema.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpBasicSchema.Thumbnails">
            <summary>
            Gets an alternative array of thumbnail images for a file,
            which can differ in characteristics such as size or image
            encoding.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Xmp.XmpColorantStruct">
            <summary>
            coloring Structure.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Xmp.XmpStructure">
            <summary>
            Represents Xmp Structure.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.XmpStructure.CheckIfExists">
            <summary>
            Checks whether entity already exists in the parent.
            </summary>
            <returns>True - if exists, False otherwise.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.XmpStructure.CreateArray(System.String,ComponentPro.Pdf.Xmp.XmpArrayType)">
            <summary>
            Creates xmp array.
            </summary>
            <param name="name">Name of the array.</param>
            <param name="arrayType">Type of the array.</param>
            <returns>Created xmp array.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.XmpStructure.CreateEntity">
            <summary>
            Creates structure.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.XmpStructure.CreateSimpleProperty(System.String)">
            <summary>
            Creates simple property.
            </summary>
            <param name="name">Name of the property.</param>
            <returns>Simple property instance.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.XmpStructure.CreateSimpleProperty(System.String,System.Xml.XmlNode)">
            <summary>
            Creates simple property.
            </summary>
            <param name="name">Name of the property.</param>
            <param name="parent">Parent XmlNode.</param>
            <returns>Simple property instance.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.XmpStructure.CreateStructureContent">
            <summary>
            Creates structure inner content.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.XmpStructure.GetArray(System.String,ComponentPro.Pdf.Xmp.XmpArrayType)">
            <summary>
            Gets xmp array.
            </summary>
            <param name="name">Name of the array.</param>
            <param name="arrayType">Type of the array.</param>
            <returns>Xmp array.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.XmpStructure.GetEntityXml">
            <summary>
            Gets Xml data of the entity.
            </summary>
            <returns>XmlElement containing entity data.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.XmpStructure.GetSimpleProperty(System.String)">
            <summary>
            Gets property by its name.
            </summary>
            <param name="name">Name of the property.</param>
            <returns>Xmp property instance.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.XmpStructure.GetSimpleProperty(System.String,System.Xml.XmlNode)">
            <summary>
            Gets property by its name.
            </summary>
            <param name="name">Name of the property.</param>
            <param name="parent">Parent XmlNode.</param>
            <returns>Xmp property instance.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.XmpStructure.GetSuspend">
            <summary>
            Gets value indicating whether we have to suspend initialization.
            </summary>
            <returns>Value indicating whether we have to suspend initialization.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.XmpStructure.InitializeEntities">
            <summary>
            Initializes internal entries.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpStructure.InnerXmlData">
            <summary>
            Gets inner xml data.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpStructure.StructurePrefix">
            <summary>
            Gets prefix of the structure.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpStructure.StructureURI">
            <summary>
            Gets name pf the structure.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.XmpColorantStruct.InitializeEntities">
            <summary>
            Initializes.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpColorantStruct.A">
            <summary>
            Gets or sets A value when the mode is LAB. Range -128 to 127.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpColorantStruct.B">
            <summary>
            Gets or sets B value when the mode is LAB. Range -128 to 127.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpColorantStruct.Black">
            <summary>
            Gets or sets black value when the mode is CMYK. Range 0-100.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpColorantStruct.Blue">
            <summary>
            Gets or sets blue value when the mode is RGB. Range 0-255.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpColorantStruct.Cyan">
            <summary>
            Gets or sets Cyan value when the mode is CMYK. Range 0-100.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpColorantStruct.Green">
            <summary>
            Gets or sets green value when the mode is RGB. Range 0-255.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpColorantStruct.L">
            <summary>
            Gets or sets L value when the mode is LAB. Range 0-100.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpColorantStruct.Magenta">
            <summary>
            Gets or sets magenta value when the mode is CMYK. Range 0-100.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpColorantStruct.Mode">
            <summary>
            Gets or sets the color space in which the color is defined. One of:
            CMYK, RGB, LAB. Library colors are represented in
            the color space for which they are defined.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpColorantStruct.Red">
            <summary>
            Gets or sets red value when the mode is RGB. Range 0-255.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpColorantStruct.StructurePrefix">
            <summary>
            Gets prefix of the structure.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpColorantStruct.StructureURI">
            <summary>
            Gets name pf the structure.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpColorantStruct.SwatchName">
            <summary>
            Gets or sets name of the swatch.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpColorantStruct.Type">
            <summary>
            Gets or sets the type of color, one of PROCESS or SPOT.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpColorantStruct.Yellow">
            <summary>
            Gets or sets yellow value when the mode is CMYK. Range 0-100.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Xmp.XmpCustomSchema">
            <summary>
            Represents custom Schema.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.XmpCustomSchema.#ctor(ComponentPro.Pdf.Xmp.XmpMetadata,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Xmp.XmpCustomSchema" /> class.
            </summary>
            <param name="xmp">Parent XmpMetadata.</param>
            <param name="xmlNamespace">The XML namespace.</param>
            <param name="namespaceUri">The namespace URI.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.XmpCustomSchema.GetEntityXml">
            <summary>
            Gets Xml data of the entity.
            </summary>
            <returns>XmlElement containing entity data.</returns>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpCustomSchema.Item(System.String)">
            <summary>
            Sets the xmp property.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpCustomSchema.Name">
            <summary>
            Gets name (URI) of the schema.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpCustomSchema.Prefix">
            <summary>
            Gets schema prefix.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpCustomSchema.SchemaType">
            <summary>
            Gets type of the schema.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Xmp.XmpDimensionsStruct">
            <summary>
            Dimensions structure.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.XmpDimensionsStruct.InitializeEntities">
            <summary>
            Initializes.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpDimensionsStruct.Height">
            <summary>
            Gets or sets height.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpDimensionsStruct.StructurePrefix">
            <summary>
            Gets prefix of the structure
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpDimensionsStruct.StructureURI">
            <summary>
            Gets name pf the structure.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpDimensionsStruct.Unit">
            <summary>
            Gets or sets units. For example: inch, mm, pixel, pica, point.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpDimensionsStruct.Width">
            <summary>
            Gets or sets Width.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Xmp.XmpFontStruct">
            <summary>
            Font Structure.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.XmpFontStruct.InitializeEntities">
            <summary>
            Initializes structure.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpFontStruct.ChildFontFiles">
            <summary>
            Gets the list of file names for the fonts that make up a
            composite font.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpFontStruct.Composite">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:ComponentPro.Pdf.Xmp.XmpFontStruct" /> is composite.
            </summary>
            <value><c>true</c> if composite; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpFontStruct.FontFace">
            <summary>
            Gets or sets the font face name.
            </summary>
            <value>The font face.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpFontStruct.FontFamily">
            <summary>
            Gets or sets the font family.
            </summary>
            <value>The font family.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpFontStruct.FontFileName">
            <summary>
            Gets or sets the name of the font file.
            </summary>
            <value>The name of the font file.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpFontStruct.FontName">
            <summary>
            Gets or sets the name of the font.
            </summary>
            <value>The name of the font.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpFontStruct.FontType">
            <summary>
            Gets or sets the type of the font.
            </summary>
            <value>The type of the font.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpFontStruct.StructurePrefix">
            <summary>
            Gets prefix of the structure
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpFontStruct.StructureURI">
            <summary>
            Gets name pf the structure.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpFontStruct.VersionString">
            <summary>
            Gets or sets the version string.
            </summary>
            <value>The version string.</value>
        </member>
        <member name="T:ComponentPro.Pdf.Xmp.XmpJobStruct">
            <summary>
            Declares Job structure.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.XmpJobStruct.InitializeEntities">
            <summary>
            Initializes.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpJobStruct.ID">
            <summary>
            Gets or sets unique ID for the job. This field is a reference into some
            external job management system..
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpJobStruct.Name">
            <summary>
            Gets or sets informal name of job. This name is for user display and
            informal systems.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpJobStruct.StructurePrefix">
            <summary>
            Gets prefix of the structure
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpJobStruct.StructureURI">
            <summary>
            Gets name pf the structure.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpJobStruct.Url">
            <summary>
            Gets or sets a file URL referencing an external job management file.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Xmp.XmpLangArray">
            <summary>
            Represents Xmp Alt Lang array.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.XmpLangArray.Add(System.String,System.String)">
            <summary>
            Adds item to the array.
            </summary>
            <param name="lang">Language code.</param>
            <param name="value">Text value.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.XmpLangArray.CreateEntity">
            <summary>
            Creates entity in the parent.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpLangArray.ArrayType">
            <summary>
            Gets type of the lang array.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpLangArray.DefaultText">
            <summary>
            Gets or sets the default text.
            </summary>
            <value>The default text.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpLangArray.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:System.String" /> with the specified lang.
            </summary>
            <value>value</value>
        </member>
        <member name="T:ComponentPro.Pdf.Xmp.XmpMetadata">
            <summary>
            Represents XMP metadata of the document.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.XmpMetadata.#ctor(ComponentPro.Pdf.PdfDocumentInformation)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Xmp.XmpMetadata" /> class.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.XmpMetadata.#ctor(System.Xml.XmlDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Pdf.Xmp.XmpMetadata" /> class.
            </summary>
            <param name="xmp">The XMP.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.XmpMetadata.Add(System.Xml.XmlElement)">
            <summary>
            Adds schema to the XMP in XML format.
            </summary>
            <param name="schema">XMP schema in XML format.</param>
            <remarks>If XMP already contains such schema - there will be two equal schemas at the xmp.</remarks>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.XmpMetadata.Load(System.Xml.XmlDocument)">
            <summary>
            Loads XMP from the XML.
            </summary>
            <param name="xmp">XMP data in XMLDocument.</param>
            <remarks>If there was any data in this XMP, it will be replaced by the data from the XML.</remarks>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpMetadata.BasicJobTicketSchema">
            <summary>
            Gets Basic Job Ticket Schema.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpMetadata.BasicSchema">
            <summary>
            Gets Basic Schema.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpMetadata.DublinCoreSchema">
            <summary>
            Gets Dublin Core Schema.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpMetadata.NamespaceManager">
            <summary>
            Gets namespace manager of the Xmp metadata.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpMetadata.PagedTextSchema">
            <summary>
            Gets Dublin Core Schema.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpMetadata.PDFSchema">
            <summary>
            Gets a schema specifying properties used with Adobe PDF documents.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpMetadata.RightsManagementSchema">
            <summary>
            Gets Rights Management Schema.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpMetadata.XmlData">
            <summary>
            Gets XMP data in XML format.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Xmp.XmpSchemaType">
            <summary>
            Enumerates types of the xmp schema.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xmp.XmpSchemaType.DublinCoreSchema">
            <summary>
            Dublin Core Schema.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xmp.XmpSchemaType.XmpBasicSchema">
            <summary>
            Basic Schema.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xmp.XmpSchemaType.RightsManagementSchema">
            <summary>
            Rights Management Schema.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xmp.XmpSchemaType.BasicJobTicketSchema">
            <summary>
            Basic Job Ticket Schema.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xmp.XmpSchemaType.PagedTextSchema">
            <summary>
            Paged Text Schema.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xmp.XmpSchemaType.PDFSchema">
            <summary>
            Adobe PDF Schema.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xmp.XmpSchemaType.Custom">
            <summary>
            Custom schema.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Xmp.XmpSimpleType">
            <summary>
            Represents simple Xmp type.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.XmpSimpleType.CreateEntity">
            <summary>
            Creates entity in the parent.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.XmpSimpleType.GetBool">
            <summary>
            Gets boolean value.
            </summary>
            <returns>Boolean value.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.XmpSimpleType.GetDateTime">
            <summary>
            Gets DateTime value.
            </summary>
            <returns>DateTime value.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.XmpSimpleType.GetInt">
            <summary>
            Gets int value.
            </summary>
            <returns>Int value.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.XmpSimpleType.GetReal">
            <summary>
            Gets real value.
            </summary>
            <returns>Real value.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.XmpSimpleType.GetUri">
            <summary>
            Gets unique resource identifier value.
            </summary>
            <returns>Uri value.</returns>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.XmpSimpleType.SetBool(System.Boolean)">
            <summary>
            Sets bool value to the object.
            </summary>
            <param name="value">Bool value.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.XmpSimpleType.SetDateTime(System.DateTime)">
            <summary>
            Sets DateTime value to the object.
            </summary>
            <param name="value">DateTime value.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.XmpSimpleType.SetInt(System.Int32)">
            <summary>
            Sets int value to the object.
            </summary>
            <param name="value">Int value.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.XmpSimpleType.SetReal(System.Single)">
            <summary>
            Sets real value to the object.
            </summary>
            <param name="value">Real value.</param>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.XmpSimpleType.SetUri(System.Uri)">
            <summary>
            Sets unique resource identifier value to the object.
            </summary>
            <param name="value">Uri value.</param>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpSimpleType.Value">
            <summary>
            Gets or sets value of the instance.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Xmp.XmpStructureType">
            <summary>
            Enumerates types of the xmp structure.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xmp.XmpStructureType.Dimensions">
            <summary>
            A structure containing dimensions for a drawn object.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xmp.XmpStructureType.Font">
            <summary>
            A structure containing the characteristics of a font used in a document.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xmp.XmpStructureType.Colorant">
            <summary>
            A structure containing the characteristics of a Coloring (swatch) used in a document.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xmp.XmpStructureType.Thumbnail">
            <summary>
            A thumbnail image for a file.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.Xmp.XmpStructureType.Job">
            <summary>
            Job structure.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.Xmp.XmpThumbnailStruct">
            <summary>
            Xmp Thumbnail Structure.
            </summary>
        </member>
        <member name="M:ComponentPro.Pdf.Xmp.XmpThumbnailStruct.InitializeEntities">
            <summary>
            Initializes.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpThumbnailStruct.Format">
            <summary>
            Gets or sets the format.
            </summary>
            <value>The format.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpThumbnailStruct.Height">
            <summary>
            Gets or sets the height.
            </summary>
            <value>The height.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpThumbnailStruct.Image">
            <summary>
            Gets or sets the thumbnail image (pixel data only) converted to base 64
            notation.
            </summary>
            <value>The image.</value>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpThumbnailStruct.StructurePrefix">
            <summary>
            Gets prefix of the structure.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpThumbnailStruct.StructureURI">
            <summary>
            Gets name pf the structure.
            </summary>
        </member>
        <member name="P:ComponentPro.Pdf.Xmp.XmpThumbnailStruct.Width">
            <summary>
            Gets or sets the width.
            </summary>
            <value>The width.</value>
        </member>
        <member name="T:ComponentPro.Xps.ArcSegment">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.ArcSegment.IsLargeArc">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.ArcSegment.IsStroked">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.ArcSegment.Point">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.ArcSegment.RotationAngle">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.ArcSegment.Size">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.ArcSegment.SweepDirection">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.Break">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.Brush">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Brush.Item">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.Canvas">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Canvas.AutomationPropertiesHelpText">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Canvas.AutomationPropertiesName">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Canvas.CanvasClip">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Canvas.CanvasOpacityMask">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Canvas.CanvasRenderTransform">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Canvas.CanvasResources">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Canvas.Clip">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Canvas.FixedPageNavigateUri">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Canvas.Items">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Canvas.Key">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Canvas.lang">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Canvas.Name">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Canvas.Opacity">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Canvas.OpacityMask">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Canvas.RenderOptionsEdgeMode">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Canvas.RenderOptionsEdgeModeSpecified">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Canvas.RenderTransform">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.ClrIntMode">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.ClrIntMode.ScRgbLinearInterpolation">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.ClrIntMode.SRgbLinearInterpolation">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.DashCap">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.DashCap.Flat">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.DashCap.Round">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.DashCap.Square">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.DashCap.Triangle">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.Discard">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Discard.SentinelPage">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Discard.Target">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.DiscardControl">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.DiscardControl.Discard">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.DocumentOutline">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.DocumentOutline.lang">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.DocumentOutline.OutlineEntry">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.DocumentReference">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.DocumentReference.Source">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.DocumentStructure">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.DocumentStructure.DocumentStructureOutline">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.DocumentStructure.Story">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.EdgeMode">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.EdgeMode.Aliased">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.Figure">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Figure.Items">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.FillRule">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.FillRule.EvenOdd">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.FillRule.NonZero">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.FixedDocument">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.FixedDocument.PageContent">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.FixedDocumentSequence">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.FixedDocumentSequence.DocumentReference">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.FixedPage">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.FixedPage.BleedBox">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.FixedPage.ContentBox">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.FixedPage.FixedPageResources">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.FixedPage.Height">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.FixedPage.Items">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.FixedPage.lang">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.FixedPage.Name">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.FixedPage.Width">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.FragmentType">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.FragmentType.Content">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.FragmentType.Header">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.FragmentType.Footer">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.Geometry">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Geometry.PathGeometry">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.Glyphs">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Glyphs.BidiLevel">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Glyphs.CaretStops">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Glyphs.Clip">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Glyphs.DeviceFontName">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Glyphs.Fill">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Glyphs.FixedPageNavigateUri">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Glyphs.FontRenderingEmSize">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Glyphs.FontUri">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Glyphs.GlyphsClip">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Glyphs.GlyphsFill">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Glyphs.GlyphsOpacityMask">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Glyphs.GlyphsRenderTransform">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Glyphs.Indices">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Glyphs.IsSideways">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Glyphs.Key">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Glyphs.lang">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Glyphs.Name">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Glyphs.Opacity">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Glyphs.OpacityMask">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Glyphs.OriginX">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Glyphs.OriginY">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Glyphs.RenderTransform">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Glyphs.StyleSimulations">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Glyphs.UnicodeString">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.GradientStop">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.GradientStop.Color">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.GradientStop.Offset">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.GradientStops">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.GradientStops.GradientStop">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.ImageBrush">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.ImageBrush.ImageBrushTransform">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.ImageBrush.ImageSource">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.ImageBrush.Key">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.ImageBrush.Opacity">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.ImageBrush.TileMode">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.ImageBrush.Transform">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.ImageBrush.Viewbox">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.ImageBrush.ViewboxUnits">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.ImageBrush.Viewport">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.ImageBrush.ViewportUnits">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.ItemsChoiceType">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.ItemsChoiceType.FigureStructure">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.ItemsChoiceType.ListStructure">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.ItemsChoiceType.ParagraphStructure">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.ItemsChoiceType.TableStructure">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.LinearGradientBrush">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.LinearGradientBrush.ColorInterpolationMode">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.LinearGradientBrush.EndPoint">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.LinearGradientBrush.Key">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.LinearGradientBrush.LinearGradientBrushGradientStops">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.LinearGradientBrush.LinearGradientBrushTransform">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.LinearGradientBrush.MappingMode">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.LinearGradientBrush.Opacity">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.LinearGradientBrush.SpreadMethod">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.LinearGradientBrush.StartPoint">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.LinearGradientBrush.Transform">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.LineCap">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.LineCap.Flat">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.LineCap.Round">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.LineCap.Square">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.LineCap.Triangle">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.LineJoin">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.LineJoin.Miter">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.LineJoin.Bevel">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.LineJoin.Round">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.LinkTarget">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.LinkTarget.Name">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.LinkTargets">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.LinkTargets.LinkTarget">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.List">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.List.Items">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.ListItem">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.ListItem.Items">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.ListItem.Marker">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.MappingMode">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.MappingMode.Absolute">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.MatrixTransform">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.MatrixTransform.Key">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.MatrixTransform.Matrix">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.NamedElement">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.NamedElement.NameReference">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.Outline">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Outline.DocumentOutline">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OutlineEntry">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OutlineEntry.Description">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OutlineEntry.lang">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OutlineEntry.OutlineLevel">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OutlineEntry.OutlineTarget">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OXPSArcSegment">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSArcSegment.IsLargeArc">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSArcSegment.IsStroked">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSArcSegment.Point">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSArcSegment.RotationAngle">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSArcSegment.Size">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSArcSegment.SweepDirection">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OXPSBreak">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OXPSBrush">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSBrush.Item">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OXPSCanvas">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSCanvas.AutomationPropertiesHelpText">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSCanvas.AutomationPropertiesName">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSCanvas.CanvasClip">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSCanvas.CanvasOpacityMask">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSCanvas.CanvasRenderTransform">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSCanvas.CanvasResources">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSCanvas.Clip">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSCanvas.FixedPageNavigateUri">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSCanvas.Items">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSCanvas.Key">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSCanvas.lang">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSCanvas.Name">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSCanvas.Opacity">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSCanvas.OpacityMask">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSCanvas.RenderOptionsEdgeMode">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSCanvas.RenderOptionsEdgeModeSpecified">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSCanvas.RenderTransform">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OXPSClrIntMode">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.OXPSClrIntMode.ScRgbLinearInterpolation">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.OXPSClrIntMode.SRgbLinearInterpolation">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OXPSDashCap">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.OXPSDashCap.Flat">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.OXPSDashCap.Round">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.OXPSDashCap.Square">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.OXPSDashCap.Triangle">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OXPSDiscard">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSDiscard.SentinelPage">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSDiscard.Target">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OXPSDiscardControl">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSDiscardControl.Discard">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OXPSDocumentOutline">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSDocumentOutline.lang">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSDocumentOutline.OutlineEntry">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OXPSDocumentReference">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSDocumentReference.Source">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OXPSDocumentStructure">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSDocumentStructure.DocumentStructureOutline">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSDocumentStructure.Story">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OXPSEdgeMode">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.OXPSEdgeMode.Aliased">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OXPSFigure">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSFigure.Items">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OXPSFillRule">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.OXPSFillRule.EvenOdd">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.OXPSFillRule.NonZero">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OXPSFixedDocument">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSFixedDocument.PageContent">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OXPSFixedDocumentSequence">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSFixedDocumentSequence.DocumentReference">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OXPSFixedPage">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSFixedPage.BleedBox">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSFixedPage.ContentBox">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSFixedPage.FixedPageResources">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSFixedPage.Height">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSFixedPage.Items">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSFixedPage.lang">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSFixedPage.Name">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSFixedPage.Width">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OXPSFragmentType">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.OXPSFragmentType.Content">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.OXPSFragmentType.Header">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.OXPSFragmentType.Footer">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OXPSGeometry">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSGeometry.PathGeometry">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OXPSGlyphs">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSGlyphs.BidiLevel">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSGlyphs.CaretStops">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSGlyphs.Clip">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSGlyphs.DeviceFontName">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSGlyphs.Fill">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSGlyphs.FixedPageNavigateUri">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSGlyphs.FontRenderingEmSize">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSGlyphs.FontUri">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSGlyphs.GlyphsClip">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSGlyphs.GlyphsFill">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSGlyphs.GlyphsOpacityMask">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSGlyphs.GlyphsRenderTransform">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSGlyphs.Indices">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSGlyphs.IsSideways">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSGlyphs.Key">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSGlyphs.lang">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSGlyphs.Name">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSGlyphs.Opacity">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSGlyphs.OpacityMask">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSGlyphs.OriginX">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSGlyphs.OriginY">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSGlyphs.RenderTransform">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSGlyphs.StyleSimulations">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSGlyphs.UnicodeString">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OXPSGradientStop">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSGradientStop.Color">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSGradientStop.Offset">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OXPSGradientStops">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSGradientStops.GradientStop">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OXPSImageBrush">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSImageBrush.ImageBrushTransform">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSImageBrush.ImageSource">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSImageBrush.Key">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSImageBrush.Opacity">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSImageBrush.TileMode">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSImageBrush.Transform">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSImageBrush.Viewbox">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSImageBrush.ViewboxUnits">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSImageBrush.Viewport">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSImageBrush.ViewportUnits">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OXPSItemsChoiceType">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.OXPSItemsChoiceType.FigureStructure">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.OXPSItemsChoiceType.ListStructure">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.OXPSItemsChoiceType.ParagraphStructure">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.OXPSItemsChoiceType.TableStructure">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OXPSLinearGradientBrush">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSLinearGradientBrush.ColorInterpolationMode">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSLinearGradientBrush.EndPoint">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSLinearGradientBrush.Key">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSLinearGradientBrush.LinearGradientBrushGradientStops">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSLinearGradientBrush.LinearGradientBrushTransform">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSLinearGradientBrush.MappingMode">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSLinearGradientBrush.Opacity">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSLinearGradientBrush.SpreadMethod">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSLinearGradientBrush.StartPoint">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSLinearGradientBrush.Transform">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OXPSLineCap">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.OXPSLineCap.Flat">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.OXPSLineCap.Round">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.OXPSLineCap.Square">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.OXPSLineCap.Triangle">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OXPSLineJoin">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.OXPSLineJoin.Miter">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.OXPSLineJoin.Bevel">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.OXPSLineJoin.Round">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OXPSLinkTarget">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSLinkTarget.Name">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OXPSLinkTargets">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSLinkTargets.LinkTarget">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OXPSList">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSList.OXPSItems">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OXPSListItem">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSListItem.Items">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSListItem.Marker">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OXPSMappingMode">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.OXPSMappingMode.Absolute">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OXPSMatrixTransform">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSMatrixTransform.Key">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSMatrixTransform.Matrix">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OXPSNamedElement">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSNamedElement.NameReference">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OXPSOutline">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSOutline.DocumentOutline">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OXPSOutlineEntry">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSOutlineEntry.Description">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSOutlineEntry.lang">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSOutlineEntry.OutlineLevel">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSOutlineEntry.OutlineTarget">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OXPSPageContent">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSPageContent.Height">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSPageContent.HeightSpecified">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSPageContent.PageContentLinkTargets">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSPageContent.Source">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSPageContent.Width">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSPageContent.WidthSpecified">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OXPSParagraph">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSParagraph.Items">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OXPSPath">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSPath.AutomationPropertiesHelpText">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSPath.AutomationPropertiesName">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSPath.Clip">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSPath.Data">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSPath.Fill">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSPath.FixedPageNavigateUri">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSPath.Key">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSPath.lang">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSPath.Name">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSPath.Opacity">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSPath.OpacityMask">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSPath.PathClip">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSPath.PathData">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSPath.PathFill">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSPath.PathOpacityMask">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSPath.PathRenderTransform">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSPath.PathStroke">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSPath.RenderTransform">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSPath.SnapsToDevicePixels">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSPath.SnapsToDevicePixelsSpecified">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSPath.Stroke">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSPath.StrokeDashArray">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSPath.StrokeDashCap">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSPath.StrokeDashOffset">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSPath.StrokeEndLineCap">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSPath.StrokeLineJoin">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSPath.StrokeMiterLimit">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSPath.StrokeStartLineCap">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSPath.StrokeThickness">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OXPSPathFigure">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSPathFigure.IsClosed">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSPathFigure.IsFilled">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSPathFigure.Items">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSPathFigure.StartPoint">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OXPSPathGeometry">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSPathGeometry.Figures">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSPathGeometry.FillRule">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSPathGeometry.Key">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSPathGeometry.PathFigure">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSPathGeometry.PathGeometryTransform">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSPathGeometry.Transform">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OXPSPolyBezierSegment">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSPolyBezierSegment.IsStroked">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSPolyBezierSegment.Points">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OXPSPolyLineSegment">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSPolyLineSegment.IsStroked">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSPolyLineSegment.Points">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OXPSPolyQuadraticBezierSegment">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSPolyQuadraticBezierSegment.IsStroked">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSPolyQuadraticBezierSegment.Points">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OXPSRadialGradientBrush">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSRadialGradientBrush.Center">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSRadialGradientBrush.ColorInterpolationMode">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSRadialGradientBrush.GradientOrigin">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSRadialGradientBrush.Key">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSRadialGradientBrush.MappingMode">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSRadialGradientBrush.Opacity">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSRadialGradientBrush.RadialGradientBrushGradientStops">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSRadialGradientBrush.RadialGradientBrushTransform">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSRadialGradientBrush.RadiusX">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSRadialGradientBrush.RadiusY">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSRadialGradientBrush.SpreadMethod">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSRadialGradientBrush.Transform">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OXPSResourceDictionary">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSResourceDictionary.Items">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSResourceDictionary.Source">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OXPSResources">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSResources.ResourceDictionary">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OXPSSection">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSSection.Items">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OXPSSignatureDefinitionsType">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSSignatureDefinitionsType.SignatureDefinition">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OXPSSignatureDefinitionType">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSSignatureDefinitionType.Intent">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSSignatureDefinitionType.lang">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSSignatureDefinitionType.SignBy">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSSignatureDefinitionType.SignBySpecified">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSSignatureDefinitionType.SignerName">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSSignatureDefinitionType.SigningLocation">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSSignatureDefinitionType.SpotID">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSSignatureDefinitionType.SpotLocation">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OXPSSolidColorBrush">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSSolidColorBrush.Color">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSSolidColorBrush.Key">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSSolidColorBrush.Opacity">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OXPSSpotLocationType">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSSpotLocationType.PageURI">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSSpotLocationType.StartX">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSSpotLocationType.StartY">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OXPSSpreadMethod">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.OXPSSpreadMethod.Pad">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.OXPSSpreadMethod.Reflect">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.OXPSSpreadMethod.Repeat">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OXPSStory">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSStory.StoryFragmentReference">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSStory.StoryName">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OXPSStoryFragment">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSStoryFragment.FragmentName">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSStoryFragment.FragmentType">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSStoryFragment.Items">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSStoryFragment.StoryBreak">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSStoryFragment.StoryBreak1">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSStoryFragment.StoryName">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OXPSStoryFragmentReference">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSStoryFragmentReference.FragmentName">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSStoryFragmentReference.Page">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OXPSStoryFragments">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSStoryFragments.StoryFragment">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OXPSStyleSimulations">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.OXPSStyleSimulations.None">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.OXPSStyleSimulations.ItalicSimulation">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.OXPSStyleSimulations.BoldSimulation">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.OXPSStyleSimulations.BoldItalicSimulation">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OXPSSweepDirection">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.OXPSSweepDirection.Clockwise">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.OXPSSweepDirection.Counterclockwise">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OXPSTable">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSTable.Items">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OXPSTableCell">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSTableCell.ColumnSpan">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSTableCell.Items">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSTableCell.ItemsElementName">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSTableCell.RowSpan">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OXPSTableRow">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSTableRow.Items">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OXPSTableRowGroup">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSTableRowGroup.Items">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OXPSTileMode">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.OXPSTileMode.None">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.OXPSTileMode.Tile">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.OXPSTileMode.FlipX">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.OXPSTileMode.FlipY">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.OXPSTileMode.FlipXY">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OXPSTransform">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSTransform.MatrixTransform">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OXPSViewUnits">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.OXPSViewUnits.Absolute">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OXPSVisual">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSVisual.Item">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.OXPSVisualBrush">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSVisualBrush.Key">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSVisualBrush.Opacity">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSVisualBrush.TileMode">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSVisualBrush.Transform">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSVisualBrush.Viewbox">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSVisualBrush.ViewboxUnits">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSVisualBrush.Viewport">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSVisualBrush.ViewportUnits">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSVisualBrush.Visual">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSVisualBrush.VisualBrushTransform">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.OXPSVisualBrush.VisualBrushVisual">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.PageContent">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.PageContent.Height">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.PageContent.HeightSpecified">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.PageContent.PageContentLinkTargets">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.PageContent.Source">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.PageContent.Width">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.PageContent.WidthSpecified">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.Paragraph">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Paragraph.Items">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.Path">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Path.AutomationPropertiesHelpText">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Path.AutomationPropertiesName">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Path.Clip">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Path.Data">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Path.Fill">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Path.FixedPageNavigateUri">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Path.Key">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Path.lang">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Path.Name">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Path.Opacity">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Path.OpacityMask">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Path.PathClip">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Path.PathData">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Path.PathFill">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Path.PathOpacityMask">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Path.PathRenderTransform">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Path.PathStroke">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Path.RenderTransform">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Path.SnapsToDevicePixels">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Path.SnapsToDevicePixelsSpecified">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Path.Stroke">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Path.StrokeDashArray">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Path.StrokeDashCap">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Path.StrokeDashOffset">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Path.StrokeEndLineCap">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Path.StrokeLineJoin">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Path.StrokeMiterLimit">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Path.StrokeStartLineCap">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Path.StrokeThickness">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.PathFigure">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.PathFigure.IsClosed">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.PathFigure.IsFilled">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.PathFigure.Items">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.PathFigure.StartPoint">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.PathGeometry">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.PathGeometry.Figures">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.PathGeometry.FillRule">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.PathGeometry.Key">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.PathGeometry.PathFigure">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.PathGeometry.PathGeometryTransform">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.PathGeometry.Transform">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.PolyBezierSegment">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.PolyBezierSegment.IsStroked">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.PolyBezierSegment.Points">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.PolyLineSegment">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.PolyLineSegment.IsStroked">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.PolyLineSegment.Points">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.PolyQuadraticBezierSegment">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.PolyQuadraticBezierSegment.IsStroked">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.PolyQuadraticBezierSegment.Points">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.RadialGradientBrush">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.RadialGradientBrush.Center">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.RadialGradientBrush.ColorInterpolationMode">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.RadialGradientBrush.GradientOrigin">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.RadialGradientBrush.Key">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.RadialGradientBrush.MappingMode">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.RadialGradientBrush.Opacity">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.RadialGradientBrush.RadialGradientBrushGradientStops">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.RadialGradientBrush.RadialGradientBrushTransform">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.RadialGradientBrush.RadiusX">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.RadialGradientBrush.RadiusY">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.RadialGradientBrush.SpreadMethod">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.RadialGradientBrush.Transform">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.ResourceDictionary">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.ResourceDictionary.Items">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.ResourceDictionary.Source">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.Resources">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Resources.ResourceDictionary">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.Section">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Section.Items">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.SignatureDefinitionsType">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.SignatureDefinitionsType.SignatureDefinition">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.SignatureDefinitionType">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.SignatureDefinitionType.Intent">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.SignatureDefinitionType.lang">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.SignatureDefinitionType.SignBy">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.SignatureDefinitionType.SignBySpecified">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.SignatureDefinitionType.SignerName">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.SignatureDefinitionType.SigningLocation">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.SignatureDefinitionType.SpotID">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.SignatureDefinitionType.SpotLocation">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.SolidColorBrush">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.SolidColorBrush.Color">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.SolidColorBrush.Key">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.SolidColorBrush.Opacity">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.SpotLocationType">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.SpotLocationType.PageURI">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.SpotLocationType.StartX">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.SpotLocationType.StartY">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.SpreadMethod">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.SpreadMethod.Pad">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.SpreadMethod.Reflect">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.SpreadMethod.Repeat">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.Story">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Story.StoryFragmentReference">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Story.StoryName">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.StoryFragment">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.StoryFragment.FragmentName">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.StoryFragment.FragmentType">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.StoryFragment.Items">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.StoryFragment.StoryBreak">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.StoryFragment.StoryBreak1">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.StoryFragment.StoryName">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.StoryFragmentReference">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.StoryFragmentReference.FragmentName">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.StoryFragmentReference.Page">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.StoryFragments">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.StoryFragments.StoryFragment">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.StyleSimulations">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.StyleSimulations.None">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.StyleSimulations.ItalicSimulation">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.StyleSimulations.BoldSimulation">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.StyleSimulations.BoldItalicSimulation">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.SweepDirection">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.SweepDirection.Clockwise">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.SweepDirection.Counterclockwise">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.Table">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Table.Items">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.TableCell">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.TableCell.ColumnSpan">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.TableCell.Items">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.TableCell.ItemsElementName">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.TableCell.RowSpan">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.TableRow">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.TableRow.Items">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.TableRowGroup">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.TableRowGroup.Items">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.TileMode">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.TileMode.None">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.TileMode.Tile">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.TileMode.FlipX">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.TileMode.FlipY">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.TileMode.FlipXY">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.Transform">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Transform.MatrixTransform">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.ViewUnits">
            <remarks />
        </member>
        <member name="F:ComponentPro.Xps.ViewUnits.Absolute">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.Visual">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.Visual.Item">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.VisualBrush">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.VisualBrush.Key">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.VisualBrush.Opacity">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.VisualBrush.TileMode">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.VisualBrush.Transform">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.VisualBrush.Viewbox">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.VisualBrush.ViewboxUnits">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.VisualBrush.Viewport">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.VisualBrush.ViewportUnits">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.VisualBrush.Visual">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.VisualBrush.VisualBrushTransform">
            <remarks />
        </member>
        <member name="P:ComponentPro.Xps.VisualBrush.VisualBrushVisual">
            <remarks />
        </member>
        <member name="T:ComponentPro.Xps.XPSElementType">
            <summary>
            Enumerator representing the available XPS elements.
            </summary>
        </member>
        <member name="T:ComponentPro.Xps.XPSToPdfConverter">
            <summary>
            Represents the XPS to PDF converter.
            </summary>
            <remarks>This API is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
        </member>
        <member name="M:ComponentPro.Xps.XPSToPdfConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ComponentPro.Xps.XPSToPdfConverter" /> class.
            </summary>
            <remarks>This constructor is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
        </member>
        <member name="M:ComponentPro.Xps.XPSToPdfConverter.Convert(System.String)">
        </member>
        <member name="M:ComponentPro.Xps.XPSToPdfConverter.Convert(System.IO.Stream)">
            <summary>
            Converts the XPS document in stream to PDF.
            </summary>
            <remarks>This method is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
            <param name="file">XPS document</param>
            <returns>PdfDocument</returns>
        </member>
        <member name="M:ComponentPro.Xps.XPSToPdfConverter.Convert(System.Byte[])">
            <summary>
            Converts the byte array with XPS file content to PDF
            </summary>
            <remarks>This method is not supported in WinRT, Windows Phone, Xamarin, Universal Windows Platform and Silverlight.</remarks>
            <param name="file">XPS document</param>
            <returns>PdfDocument</returns>
        </member>
        <member name="P:ComponentPro.Xps.XPSToPdfConverter.Settings">
            <summary>
            Enable or disable embedding complete font
            </summary>
            <remarks>
             By enabling this propety the size of the output PDF will be larger.
            </remarks>
        </member>
        <member name="T:ComponentPro.Xps.XPSToPdfConverterSettings">
            <summary>
                        Initializes a new instance of the <see cref="T:ComponentPro.Xps.XPSToPdfConverterSettings" /> class
            </summary>
        </member>
        <member name="P:ComponentPro.Xps.XPSToPdfConverterSettings.EmbedCompleteFont">
            <summary>
            Enable or disable embedding complete font
            </summary>
            <remarks>
             By enabling this propety the size of the output PDF will be larger.
            </remarks>
        </member>
        <member name="M:ComponentPro.Pdf.TextSearchItem.#ctor(System.String,ComponentPro.Pdf.TextSearchOptions)">
            <summary>
            Initialises a new instance of TextSearchItem
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.TextSearchOptions.None">
            <summary>
            searches words with no options.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.TextSearchOptions.WholeWords">
            <summary>
            searches whole words only but not case sensitive.
            </summary>
        </member>
        <member name="F:ComponentPro.Pdf.TextSearchOptions.CaseSensitive">
            <summary>
            Searches words with case sensitive.
            </summary>
        </member>
        <member name="T:ComponentPro.Pdf.PdfControl">
            <summary>
            A convenient control that helps developer add reference to the ComponentPro.Pdf assemblies easily.
            </summary>
        </member>
    </members>
</doc>
